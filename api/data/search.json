{"list":[{"title":"AudioTrack","link":"<a href=\"global.html#AudioTrack\">AudioTrack</a>","description":"<p>The video.js representation of an audio track.</p>"},{"title":"Player","link":"<a href=\"Player.html\">Player</a>","description":"<p>This class extends {@link VideoJsPlayer}.</p>"},{"title":"Player#audioTrack","link":"<a href=\"Player.html#audioTrack\">audioTrack</a>","description":"<p>A getter/setter for the media's audio track.\nActivates the audio track according to the language and kind properties.\nFalls back on the first audio track found if the kind property is not satisfied.</p>"},{"title":"Player#textTrack","link":"<a href=\"Player.html#textTrack\">textTrack</a>","description":"<p>A getter/setter for the media's text track.\nActivates the text track according to the language and kind properties.\nFalls back on the first text track found if the kind property is not satisfied.\nDisables all subtitle tracks that are <code>showing</code> if the <code>trackSelector</code> is truthy but does not satisfy any condition.</p>"},{"title":"SrgSsr","link":"<a href=\"SrgSsr.html\">SrgSsr</a>"},{"title":"SrgSsr.blockingReason","link":"<a href=\"SrgSsr.html#.blockingReason\">blockingReason</a>","description":"<p>Set a blocking reason according to the block reason returned\nby mediaData.</p>"},{"title":"SrgSsr.composeAkamaiResources","link":"<a href=\"SrgSsr.html#.composeAkamaiResources\">composeAkamaiResources</a>","description":"<p>Add the Akamai token to all resources\nif at least one of them has tokenType\nset to Akamai.</p>"},{"title":"SrgSsr.composeKeySystemsResources","link":"<a href=\"SrgSsr.html#.composeKeySystemsResources\">composeKeySystemsResources</a>","description":"<p>Add the keySystems property to all resources\nif at least one of them has DRM.</p>"},{"title":"SrgSsr.composeMainResources","link":"<a href=\"SrgSsr.html#.composeMainResources\">composeMainResources</a>","description":"<p>Get the main resources from a mediaComposition.\nMay add an Akamai token or key systems if required by the resource.</p>"},{"title":"SrgSsr.composeSrcMediaData","link":"<a href=\"SrgSsr.html#.composeSrcMediaData\">composeSrcMediaData</a>","description":"<p>Compose source options with media data.\nMediaData properties from source options overwrite mediaData from IL.</p>"},{"title":"SrgSsr.dataProvider","link":"<a href=\"SrgSsr.html#.dataProvider\">dataProvider</a>","description":"<p>SRG SSR data provider singleton.</p>"},{"title":"SrgSsr.dataProviderError","link":"<a href=\"SrgSsr.html#.dataProviderError\">dataProviderError</a>","description":"<p>Set an error if something goes wrong with the data provider.</p>"},{"title":"SrgSsr.error","link":"<a href=\"SrgSsr.html#.error\">error</a>","description":"<p>Set player error.</p>"},{"title":"SrgSsr.filterIncompatibleResources","link":"<a href=\"SrgSsr.html#.filterIncompatibleResources\">filterIncompatibleResources</a>","description":"<p>Filter out incompatible resources such as <code>RTMP</code> and <code>HDS</code>.</p>"},{"title":"SrgSsr.getMediaComposition","link":"<a href=\"SrgSsr.html#.getMediaComposition\">getMediaComposition</a>","description":"<p>Get mediaComposition from an URN.</p>"},{"title":"SrgSsr.getMediaData","link":"<a href=\"SrgSsr.html#.getMediaData\">getMediaData</a>","description":"<p>Get the mediaData most likely to be compatible depending on the browser.</p>"},{"title":"SrgSsr.middleware","link":"<a href=\"SrgSsr.html#.middleware\">middleware</a>","description":"<p>Middleware to resolve SRG SSR URNs into playable media.</p>"},{"title":"SrgSsr.srgAnalytics","link":"<a href=\"SrgSsr.html#.srgAnalytics\">srgAnalytics</a>","description":"<p>SRG SSR analytics singleton.</p>"},{"title":"SrgSsr.updatePoster","link":"<a href=\"SrgSsr.html#.updatePoster\">updatePoster</a>","description":"<p>Update player's poster.</p>"},{"title":"SrgSsr.updateTitleBar","link":"<a href=\"SrgSsr.html#.updateTitleBar\">updateTitleBar</a>","description":"<p>Update player titleBar with title and description.</p>"},{"title":"TrackSelector","link":"<a href=\"global.html#TrackSelector\">TrackSelector</a>","description":"<p>The track to select</p>"},{"title":"VideoJsPlayer","link":"<a href=\"global.html#VideoJsPlayer\">VideoJsPlayer</a>","description":"<p>The video.js Player component.</p>"},{"title":"VideojsTextTrack","link":"<a href=\"global.html#VideojsTextTrack\">VideojsTextTrack</a>","description":"<p>The video.js representation of a text track.</p>"},{"title":"module.exports","link":"<a href=\"module.html#.exports\">exports</a>"},{"title":"pillarbox","link":"<a href=\"pillarbox.html\">pillarbox</a>","description":"<p>Pillarbox is an alias for the video.js namespace with additional options.</p>"},{"title":"pillarbox.options.enableSmoothSeeking","link":"<a href=\"pillarbox.options.html#.enableSmoothSeeking\">enableSmoothSeeking</a>","description":"<p>Enable smooth seeking for Pillarbox.</p>"},{"title":"pillarbox.options.html5","link":"<a href=\"pillarbox.options.html#.html5\">html5</a>","description":"<p>Configuration options for HTML5 settings in Pillarbox.</p>"},{"title":"pillarbox.options.liveTracker","link":"<a href=\"pillarbox.options.html#.liveTracker\">liveTracker</a>","description":"<p>Configuration for the live tracker.</p>"},{"title":"pillarbox.options.liveui","link":"<a href=\"pillarbox.options.html#.liveui\">liveui</a>","description":"<p>Allows the player to use the live ui that includes:</p>\n<ul>\n<li>A progress bar for seeking within the live window</li>\n<li>A button that can be clicked to seek to the live edge with a circle indicating if you are at the live edge or not.</li>\n</ul>"},{"title":"pillarbox.options.playsinline","link":"<a href=\"pillarbox.options.html#.playsinline\">playsinline</a>","description":"<p>Indicates that the video is to be played &quot;inline&quot;, that is within the element's playback area.</p>"},{"title":"pillarbox.options.plugins","link":"<a href=\"pillarbox.options.html#.plugins\">plugins</a>","description":"<p>Configuration for plugins.</p>"},{"title":"pillarbox.options.responsive","link":"<a href=\"pillarbox.options.html#.responsive\">responsive</a>","description":"<p>Enable responsive mode, this will cause the player to customize itself based on responsive breakpoints.</p>"}]}