{"mappings":"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BACV,EACA,CACE,MAAS,gCACT,YAAe,WACf,IAAO,8EACP,KAAQ,uBACV,EACA,CACE,MAAS,yBACT,YAAe,4BACf,IAAO,iFACP,KAAQ,uBACV,EACA,CACE,MAAS,kCACT,YAAe,2BACf,IAAO,4EACP,KAAQ,uBACV,EACA,CACE,MAAS,iDACT,YAAe,YACf,IAAO,wFACP,KAAQ,uBACV,EACA,CACE,MAAS,yBACT,YAAe,kBACf,IAAO,qEACP,KAAQ,uBACV,EACA,CACE,MAAS,kBACT,YAAe,iCACf,IAAO,kGACP,KAAQ,uBACV,EACA,CACE,MAAS,mBACT,YAAe,kCACf,IAAO,oGACP,KAAQ,uBACV,EACA,CACE,MAAS,2BACT,YAAe,6DACf,IAAO,qGACP,KAAQ,uBACV,EACA,CACE,MAAS,6BACT,YAAe,2DACf,IAAO,uGACP,KAAQ,uBACV,EACA,CACE,MAAS,mCACT,YAAe,oDACf,IAAO,mGACP,KAAQ,uBACV,EACA,CACE,MAAS,cACT,IAAO,sFACP,KAAQ,uBACV,EACA,CACE,MAAS,0BACT,IAAO,0HACP,KAAQ,uBACV,EACA,CACE,MAAS,mBACT,YAAe,sCACf,IAAO,yMACP,KAAQ,uBACV,EACA,CACE,MAAS,sCACT,YAAe,kCACf,IAAO,mEACP,KAAQ,uBACV,EACA,CACE,MAAS,WACT,IAAO,wFACP,KAAQ,uBACV,EACA,CACE,MAAS,0BACT,IAAO,2GACP,KAAQ,uBACV,EACA,CACE,MAAS,UACT,IAAO,6EACP,KAAQ,uBACV,EACA,CACE,MAAS,uBACT,IAAO,uGACP,KAAQ,uBACV,EACA,CACE,MAAS,iCACT,IAAO,kHACP,KAAQ,uBACV,EACA,CACE,MAAS,mBACT,IAAO,6IACP,KAAQ,uBACV,EACA,CACE,MAAS,kBACT,IAAO,wHACP,KAAQ,uBACV,EACA,CACE,MAAS,yBACT,IAAO,0HACP,KAAQ,uBACV,EACA,CACE,MAAS,0BACT,IAAO,oOACP,KAAQ,uBACV,EACA,CACE,MAAS,YACT,IAAO,qEACP,KAAQ,uBACV,EACA,CACE,MAAS,wBACT,IAAO,oFACP,KAAQ,uBACV,EACA,CACE,MAAS,aACT,IAAO,gGACP,KAAQ,uBACV,EACA,CACE,MAAS,qBACT,IAAO,uEACP,KAAQ,uBACV,EACA,CACE,MAAS,cACT,IAAO,4GACP,KAAQ,uBACV,EACA,CACE,MAAS,gBACT,IAAO,4GACP,KAAQ,uBACV,EACA,CACE,MAAS,QACT,YAAe,mBACf,IAAO,2EACP,KAAQ,uBACV,EACD,CACD,KAAQ,CACN,CACE,MAAS,oBACT,IAAO,oEACP,KAAQ,sBACV,EACA,CACE,MAAS,kCACT,IAAO,mEACP,KAAQ,uBACR,WAAc,CACZ,qBAAsB,iFACxB,CACF,EACA,CACE,MAAS,oBACT,IAAO,oEACP,KAAQ,sBACV,EACA,CACE,MAAS,kCACT,IAAO,mEACP,KAAQ,uBACR,WAAc,CACZ,qBAAsB,iFACxB,CACF,EACA,CACE,MAAS,mBACT,IAAO,sGACP,KAAQ,sBACV,EACA,CACE,MAAS,wBACT,IAAO,sGACP,KAAQ,sBACV,EACA,CACE,MAAS,mBACT,IAAO,uHACP,KAAQ,sBACV,EACA,CACE,MAAS,0CACT,IAAO,gIACP,KAAQ,sBACV,EACA,CACE,MAAS,yCACT,IAAO,+GACP,KAAQ,sBACV,EACA,CACE,MAAS,kCACT,IAAO,yGACP,KAAQ,sBACV,EACA,CACE,MAAS,2CACT,IAAO,8GACP,KAAQ,sBACV,EACA,CACE,MAAS,oCACT,IAAO,2GACP,KAAQ,sBACV,EACA,CACE,MAAS,oBACT,IAAO,4IACP,KAAQ,sBACV,EACA,CACE,MAAS,+BACT,IAAO,kHACP,KAAQ,sBACV,EACA,CACE,MAAS,kCACT,IAAO,iHACP,KAAQ,sBACV,EACA,CACE,MAAS,2CACT,IAAO,+GACP,KAAQ,sBACV,EACA,CACE,MAAS,mBACT,IAAO,oEACP,KAAQ,sBACV,EACA,CACE,MAAS,+BACT,IAAO,mFACP,KAAQ,sBACV,EACA,CACE,MAAS,8BACT,IAAO,gFACP,KAAQ,sBACV,EACD,CACD,IAAO,CACL,CACE,MAAS,YACT,YAAe,UACf,IAAO,iIACP,KAAQ,WACV,EACA,CACE,MAAS,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","sources":["<anon>","demo/src/index.js","demo/src/player/player.js","demo/src/settings/preferences-provider.js","demo/src/player/player-dialog.js","demo/src/router/router.js","node_modules/minimatch/dist/mjs/index.js","node_modules/minimatch/src/index.ts","node_modules/brace-expansion/index.js","node_modules/balanced-match/index.js","node_modules/minimatch/dist/mjs/assert-valid-pattern.js","node_modules/minimatch/src/assert-valid-pattern.ts","node_modules/minimatch/dist/mjs/ast.js","node_modules/minimatch/src/ast.ts","node_modules/minimatch/dist/mjs/brace-expressions.js","node_modules/minimatch/src/brace-expressions.ts","node_modules/minimatch/dist/mjs/unescape.js","node_modules/minimatch/src/unescape.ts","node_modules/minimatch/dist/mjs/escape.js","node_modules/minimatch/src/escape.ts","node_modules/process/browser.js","demo/src/layout/header-component.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-2030bcb2d0ebc494.js","node_modules/@parcel/runtime-js/lib/runtime-dd58bb77171af060.js","node_modules/@lit/reactive-element/reactive-element.js","node_modules/@lit/reactive-element/src/reactive-element.ts","node_modules/@lit/reactive-element/css-tag.js","node_modules/@lit/reactive-element/src/css-tag.ts","node_modules/lit-html/lit-html.js","node_modules/lit-html/src/lit-html.ts","node_modules/lit-element/lit-element.js","node_modules/lit-element/src/lit-element.ts","node_modules/lit-html/is-server.js","node_modules/lit-html/src/is-server.ts","node_modules/lit-html/directives/unsafe-svg.js","node_modules/lit-html/src/directives/unsafe-svg.ts","node_modules/lit-html/directive.js","node_modules/lit-html/src/directive.ts","node_modules/lit-html/directives/unsafe-html.js","node_modules/lit-html/src/directives/unsafe-html.ts","demo/src/router/route-link-component.js","demo/src/theme/theme.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-e21beef900f77ad7.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-d3832a823c501237.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-bd0a59312649135d.js","demo/src/router/route-outlet-component.js","demo/src/examples/examples-page.js","demo/src/examples/load-media-form-component.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-0ca1fdad74be4aa3.js","node_modules/lit-html/directives/class-map.js","node_modules/lit-html/src/directives/class-map.ts","demo/src/core/content-link-component.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-7c18b86579610efa.js","demo/src/examples/examples.js","node_modules/lit-html/directives/map.js","node_modules/lit-html/src/directives/map.ts","node_modules/lit-html/directives/when.js","node_modules/lit-html/src/directives/when.ts","demo/src/search/search-page.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-64acd55bee02f1c6.js","demo/src/search/search-bar-component.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-036abc485da86700.js","demo/src/core/il-provider.js","demo/src/spinner/spinner-component.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-8dda9fdc7888e434.js","demo/src/core/intersection-observer-component.js","demo/src/core/scroll-to-top-component.js","demo/src/settings/settings-page.js","demo/src/core/toggle-switch-component.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-fb89246f185ea1f9.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-afd087dea208c99c.js","demo/src/lists/lists-page.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-fda4683981d24fba.js","demo/src/lists/lists-page-state-manager.js","demo/src/core/string-utils.js","demo/src/lists/lists-sections.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire9bb7\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire9bb7\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n/**\n * Main module to import and initialize the demo as a single page application.\n *\n * @module\n */ /**\n * Initialized the demo player.\n *\n * @module\n */ \nvar $4OnIV = parcelRequire(\"4OnIV\");\nparcelRequire(\"i0Bvb\");\n/**\n * Utility class for loading and saving preferences to local storage.\n *\n * @class PreferencesProvider\n */ class $1d04fb3d6fcfa221$var$PreferencesProvider {\n    /**\n   * Load preferences from local storage.\n   *\n   * @static\n   * @returns {Object} An object representing the loaded preferences.\n   */ static loadPreferences() {\n        return JSON.parse(localStorage.getItem(\"preferences\")) || {};\n    }\n    /**\n   * Save preferences to local storage.\n   *\n   * @static\n   * @param {Object} preferences - An object representing the preferences to be saved.\n   * @returns {void}\n   */ static savePreferences(preferences) {\n        localStorage.setItem(\"preferences\", JSON.stringify(preferences));\n    }\n}\nvar $1d04fb3d6fcfa221$export$2e2bcd8739ae039 = $1d04fb3d6fcfa221$var$PreferencesProvider;\n\n\nconst $a61db921cb412e6c$var$DEMO_PLAYER_ID = \"player\";\nconst $a61db921cb412e6c$var$DEFAULT_OPTIONS = {\n    fill: true,\n    restoreEl: true\n};\nconst $a61db921cb412e6c$export$11ae10a4ef8c3aa4 = ()=>{\n    const preferences = (0, $1d04fb3d6fcfa221$export$2e2bcd8739ae039).loadPreferences();\n    window.player = new (0, $4OnIV.default)($a61db921cb412e6c$var$DEMO_PLAYER_ID, {\n        ...$a61db921cb412e6c$var$DEFAULT_OPTIONS,\n        muted: preferences.muted ?? true,\n        autoplay: preferences.autoplay ?? false,\n        debug: preferences.debug ?? false\n    });\n    return window.player;\n};\nconst $a61db921cb412e6c$export$64a35e4be81ccfc0 = ()=>{\n    (0, $4OnIV.default).getPlayer($a61db921cb412e6c$var$DEMO_PLAYER_ID).dispose();\n    window.player = null;\n};\n// Expose Pillarbox and player in the window object for debugging\nwindow.pillarbox = (0, $4OnIV.default);\n// TODO must be remove once tagCommander is pillarbox ready\n//\n// Allows to track comscore events\n//\n// This is necessary because a tagCommander script uses videojs directly for some\n// unknown reason. Pillarbox does not expose videojs, because pillarbox\n// is a superset of videojs, this causes an error preventing comscore\n// from initializing correctly.\nwindow.videojs = (0, $4OnIV.default);\n\n\n/**\n * Defines the behaviour of the player dialog and provides a function to open the\n * dialog and reload the player's content.\n *\n * @module\n */ \nvar $c81d632c93adcfed$exports = {};\nvar $30933cb119085804$exports = {};\n\"use strict\";\n$30933cb119085804$exports = $30933cb119085804$var$balanced;\nfunction $30933cb119085804$var$balanced(a, b, str) {\n    if (a instanceof RegExp) a = $30933cb119085804$var$maybeMatch(a, str);\n    if (b instanceof RegExp) b = $30933cb119085804$var$maybeMatch(b, str);\n    var r = $30933cb119085804$var$range(a, b, str);\n    return r && {\n        start: r[0],\n        end: r[1],\n        pre: str.slice(0, r[0]),\n        body: str.slice(r[0] + a.length, r[1]),\n        post: str.slice(r[1] + b.length)\n    };\n}\nfunction $30933cb119085804$var$maybeMatch(reg, str) {\n    var m = str.match(reg);\n    return m ? m[0] : null;\n}\n$30933cb119085804$var$balanced.range = $30933cb119085804$var$range;\nfunction $30933cb119085804$var$range(a, b, str) {\n    var begs, beg, left, right, result;\n    var ai = str.indexOf(a);\n    var bi = str.indexOf(b, ai + 1);\n    var i = ai;\n    if (ai >= 0 && bi > 0) {\n        if (a === b) return [\n            ai,\n            bi\n        ];\n        begs = [];\n        left = str.length;\n        while(i >= 0 && !result){\n            if (i == ai) {\n                begs.push(i);\n                ai = str.indexOf(a, i + 1);\n            } else if (begs.length == 1) result = [\n                begs.pop(),\n                bi\n            ];\n            else {\n                beg = begs.pop();\n                if (beg < left) {\n                    left = beg;\n                    right = bi;\n                }\n                bi = str.indexOf(b, i + 1);\n            }\n            i = ai < bi && ai >= 0 ? ai : bi;\n        }\n        if (begs.length) result = [\n            left,\n            right\n        ];\n    }\n    return result;\n}\n\n\n$c81d632c93adcfed$exports = $c81d632c93adcfed$var$expandTop;\nvar $c81d632c93adcfed$var$escSlash = \"\\x00SLASH\" + Math.random() + \"\\x00\";\nvar $c81d632c93adcfed$var$escOpen = \"\\x00OPEN\" + Math.random() + \"\\x00\";\nvar $c81d632c93adcfed$var$escClose = \"\\x00CLOSE\" + Math.random() + \"\\x00\";\nvar $c81d632c93adcfed$var$escComma = \"\\x00COMMA\" + Math.random() + \"\\x00\";\nvar $c81d632c93adcfed$var$escPeriod = \"\\x00PERIOD\" + Math.random() + \"\\x00\";\nfunction $c81d632c93adcfed$var$numeric(str) {\n    return parseInt(str, 10) == str ? parseInt(str, 10) : str.charCodeAt(0);\n}\nfunction $c81d632c93adcfed$var$escapeBraces(str) {\n    return str.split(\"\\\\\\\\\").join($c81d632c93adcfed$var$escSlash).split(\"\\\\{\").join($c81d632c93adcfed$var$escOpen).split(\"\\\\}\").join($c81d632c93adcfed$var$escClose).split(\"\\\\,\").join($c81d632c93adcfed$var$escComma).split(\"\\\\.\").join($c81d632c93adcfed$var$escPeriod);\n}\nfunction $c81d632c93adcfed$var$unescapeBraces(str) {\n    return str.split($c81d632c93adcfed$var$escSlash).join(\"\\\\\").split($c81d632c93adcfed$var$escOpen).join(\"{\").split($c81d632c93adcfed$var$escClose).join(\"}\").split($c81d632c93adcfed$var$escComma).join(\",\").split($c81d632c93adcfed$var$escPeriod).join(\".\");\n}\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction $c81d632c93adcfed$var$parseCommaParts(str) {\n    if (!str) return [\n        \"\"\n    ];\n    var parts = [];\n    var m = $30933cb119085804$exports(\"{\", \"}\", str);\n    if (!m) return str.split(\",\");\n    var pre = m.pre;\n    var body = m.body;\n    var post = m.post;\n    var p = pre.split(\",\");\n    p[p.length - 1] += \"{\" + body + \"}\";\n    var postParts = $c81d632c93adcfed$var$parseCommaParts(post);\n    if (post.length) {\n        p[p.length - 1] += postParts.shift();\n        p.push.apply(p, postParts);\n    }\n    parts.push.apply(parts, p);\n    return parts;\n}\nfunction $c81d632c93adcfed$var$expandTop(str) {\n    if (!str) return [];\n    // I don't know why Bash 4.3 does this, but it does.\n    // Anything starting with {} will have the first two bytes preserved\n    // but *only* at the top level, so {},a}b will not expand to anything,\n    // but a{},b}c will be expanded to [a}c,abc].\n    // One could argue that this is a bug in Bash, but since the goal of\n    // this module is to match Bash's rules, we escape a leading {}\n    if (str.substr(0, 2) === \"{}\") str = \"\\\\{\\\\}\" + str.substr(2);\n    return $c81d632c93adcfed$var$expand($c81d632c93adcfed$var$escapeBraces(str), true).map($c81d632c93adcfed$var$unescapeBraces);\n}\nfunction $c81d632c93adcfed$var$embrace(str) {\n    return \"{\" + str + \"}\";\n}\nfunction $c81d632c93adcfed$var$isPadded(el) {\n    return /^-?0\\d/.test(el);\n}\nfunction $c81d632c93adcfed$var$lte(i, y) {\n    return i <= y;\n}\nfunction $c81d632c93adcfed$var$gte(i, y) {\n    return i >= y;\n}\nfunction $c81d632c93adcfed$var$expand(str, isTop) {\n    var expansions = [];\n    var m = $30933cb119085804$exports(\"{\", \"}\", str);\n    if (!m) return [\n        str\n    ];\n    // no need to expand pre, since it is guaranteed to be free of brace-sets\n    var pre = m.pre;\n    var post = m.post.length ? $c81d632c93adcfed$var$expand(m.post, false) : [\n        \"\"\n    ];\n    if (/\\$$/.test(m.pre)) for(var k = 0; k < post.length; k++){\n        var expansion = pre + \"{\" + m.body + \"}\" + post[k];\n        expansions.push(expansion);\n    }\n    else {\n        var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n        var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n        var isSequence = isNumericSequence || isAlphaSequence;\n        var isOptions = m.body.indexOf(\",\") >= 0;\n        if (!isSequence && !isOptions) {\n            // {a},b}\n            if (m.post.match(/,.*\\}/)) {\n                str = m.pre + \"{\" + m.body + $c81d632c93adcfed$var$escClose + m.post;\n                return $c81d632c93adcfed$var$expand(str);\n            }\n            return [\n                str\n            ];\n        }\n        var n;\n        if (isSequence) n = m.body.split(/\\.\\./);\n        else {\n            n = $c81d632c93adcfed$var$parseCommaParts(m.body);\n            if (n.length === 1) {\n                // x{{a,b}}y ==> x{a}y x{b}y\n                n = $c81d632c93adcfed$var$expand(n[0], false).map($c81d632c93adcfed$var$embrace);\n                if (n.length === 1) return post.map(function(p) {\n                    return m.pre + n[0] + p;\n                });\n            }\n        }\n        // at this point, n is the parts, and we know it's not a comma set\n        // with a single entry.\n        var N;\n        if (isSequence) {\n            var x = $c81d632c93adcfed$var$numeric(n[0]);\n            var y = $c81d632c93adcfed$var$numeric(n[1]);\n            var width = Math.max(n[0].length, n[1].length);\n            var incr = n.length == 3 ? Math.abs($c81d632c93adcfed$var$numeric(n[2])) : 1;\n            var test = $c81d632c93adcfed$var$lte;\n            var reverse = y < x;\n            if (reverse) {\n                incr *= -1;\n                test = $c81d632c93adcfed$var$gte;\n            }\n            var pad = n.some($c81d632c93adcfed$var$isPadded);\n            N = [];\n            for(var i = x; test(i, y); i += incr){\n                var c;\n                if (isAlphaSequence) {\n                    c = String.fromCharCode(i);\n                    if (c === \"\\\\\") c = \"\";\n                } else {\n                    c = String(i);\n                    if (pad) {\n                        var need = width - c.length;\n                        if (need > 0) {\n                            var z = new Array(need + 1).join(\"0\");\n                            if (i < 0) c = \"-\" + z + c.slice(1);\n                            else c = z + c;\n                        }\n                    }\n                }\n                N.push(c);\n            }\n        } else {\n            N = [];\n            for(var j = 0; j < n.length; j++)N.push.apply(N, $c81d632c93adcfed$var$expand(n[j], false));\n        }\n        for(var j = 0; j < N.length; j++)for(var k = 0; k < post.length; k++){\n            var expansion = pre + N[j] + post[k];\n            if (!isTop || isSequence || expansion) expansions.push(expansion);\n        }\n    }\n    return expansions;\n}\n\n\nconst $5e7996718b7e3ba8$var$MAX_PATTERN_LENGTH = 65536;\nconst $5e7996718b7e3ba8$export$fd15c38a89c33022 = (pattern)=>{\n    if (typeof pattern !== \"string\") throw new TypeError(\"invalid pattern\");\n    if (pattern.length > $5e7996718b7e3ba8$var$MAX_PATTERN_LENGTH) throw new TypeError(\"pattern is too long\");\n};\n\n\n// parse a single path portion\n// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n// { <posix class>: [<translation>, /u flag required, negated]\nconst $a278060bbdc395f8$var$posixClasses = {\n    \"[:alnum:]\": [\n        \"\\\\p{L}\\\\p{Nl}\\\\p{Nd}\",\n        true\n    ],\n    \"[:alpha:]\": [\n        \"\\\\p{L}\\\\p{Nl}\",\n        true\n    ],\n    \"[:ascii:]\": [\n        \"\\\\x00-\\\\x7f\",\n        false\n    ],\n    \"[:blank:]\": [\n        \"\\\\p{Zs}\\\\t\",\n        true\n    ],\n    \"[:cntrl:]\": [\n        \"\\\\p{Cc}\",\n        true\n    ],\n    \"[:digit:]\": [\n        \"\\\\p{Nd}\",\n        true\n    ],\n    \"[:graph:]\": [\n        \"\\\\p{Z}\\\\p{C}\",\n        true,\n        true\n    ],\n    \"[:lower:]\": [\n        \"\\\\p{Ll}\",\n        true\n    ],\n    \"[:print:]\": [\n        \"\\\\p{C}\",\n        true\n    ],\n    \"[:punct:]\": [\n        \"\\\\p{P}\",\n        true\n    ],\n    \"[:space:]\": [\n        \"\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f\",\n        true\n    ],\n    \"[:upper:]\": [\n        \"\\\\p{Lu}\",\n        true\n    ],\n    \"[:word:]\": [\n        \"\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}\",\n        true\n    ],\n    \"[:xdigit:]\": [\n        \"A-Fa-f0-9\",\n        false\n    ]\n};\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst $a278060bbdc395f8$var$braceEscape = (s)=>s.replace(/[[\\]\\\\-]/g, \"\\\\$&\");\n// escape all regexp magic characters\nconst $a278060bbdc395f8$var$regexpEscape = (s)=>s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n// everything has already been escaped, we just have to join\nconst $a278060bbdc395f8$var$rangesToString = (ranges)=>ranges.join(\"\");\nconst $a278060bbdc395f8$export$542081d93172af = (glob, position)=>{\n    const pos = position;\n    /* c8 ignore start */ if (glob.charAt(pos) !== \"[\") throw new Error(\"not in a brace expression\");\n    /* c8 ignore stop */ const ranges = [];\n    const negs = [];\n    let i = pos + 1;\n    let sawStart = false;\n    let uflag = false;\n    let escaping = false;\n    let negate = false;\n    let endPos = pos;\n    let rangeStart = \"\";\n    WHILE: while(i < glob.length){\n        const c = glob.charAt(i);\n        if ((c === \"!\" || c === \"^\") && i === pos + 1) {\n            negate = true;\n            i++;\n            continue;\n        }\n        if (c === \"]\" && sawStart && !escaping) {\n            endPos = i + 1;\n            break;\n        }\n        sawStart = true;\n        if (c === \"\\\\\") {\n            if (!escaping) {\n                escaping = true;\n                i++;\n                continue;\n            }\n        }\n        if (c === \"[\" && !escaping) {\n            // either a posix class, a collation equivalent, or just a [\n            for (const [cls, [unip, u, neg]] of Object.entries($a278060bbdc395f8$var$posixClasses))if (glob.startsWith(cls, i)) {\n                // invalid, [a-[] is fine, but not [a-[:alpha]]\n                if (rangeStart) return [\n                    \"$.\",\n                    false,\n                    glob.length - pos,\n                    true\n                ];\n                i += cls.length;\n                if (neg) negs.push(unip);\n                else ranges.push(unip);\n                uflag = uflag || u;\n                continue WHILE;\n            }\n        }\n        // now it's just a normal character, effectively\n        escaping = false;\n        if (rangeStart) {\n            // throw this range away if it's not valid, but others\n            // can still match.\n            if (c > rangeStart) ranges.push($a278060bbdc395f8$var$braceEscape(rangeStart) + \"-\" + $a278060bbdc395f8$var$braceEscape(c));\n            else if (c === rangeStart) ranges.push($a278060bbdc395f8$var$braceEscape(c));\n            rangeStart = \"\";\n            i++;\n            continue;\n        }\n        // now might be the start of a range.\n        // can be either c-d or c-] or c<more...>] or c] at this point\n        if (glob.startsWith(\"-]\", i + 1)) {\n            ranges.push($a278060bbdc395f8$var$braceEscape(c + \"-\"));\n            i += 2;\n            continue;\n        }\n        if (glob.startsWith(\"-\", i + 1)) {\n            rangeStart = c;\n            i += 2;\n            continue;\n        }\n        // not the start of a range, just a single character\n        ranges.push($a278060bbdc395f8$var$braceEscape(c));\n        i++;\n    }\n    if (endPos < i) // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return [\n        \"\",\n        false,\n        0,\n        false\n    ];\n    // if we got no ranges and no negates, then we have a range that\n    // cannot possibly match anything, and that poisons the whole glob\n    if (!ranges.length && !negs.length) return [\n        \"$.\",\n        false,\n        glob.length - pos,\n        true\n    ];\n    // if we got one positive range, and it's a single character, then that's\n    // not actually a magic pattern, it's just that one literal character.\n    // we should not treat that as \"magic\", we should just return the literal\n    // character. [_] is a perfectly valid way to escape glob magic chars.\n    if (negs.length === 0 && ranges.length === 1 && /^\\\\?.$/.test(ranges[0]) && !negate) {\n        const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0];\n        return [\n            $a278060bbdc395f8$var$regexpEscape(r),\n            false,\n            endPos - pos,\n            false\n        ];\n    }\n    const sranges = \"[\" + (negate ? \"^\" : \"\") + $a278060bbdc395f8$var$rangesToString(ranges) + \"]\";\n    const snegs = \"[\" + (negate ? \"\" : \"^\") + $a278060bbdc395f8$var$rangesToString(negs) + \"]\";\n    const comb = ranges.length && negs.length ? \"(\" + sranges + \"|\" + snegs + \")\" : ranges.length ? sranges : snegs;\n    return [\n        comb,\n        uflag,\n        endPos - pos,\n        true\n    ];\n};\n\n\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */ const $4ffc8d515e45a860$export$e8bacd2802a88316 = (s, { windowsPathsNoEscape: windowsPathsNoEscape = false } = {})=>{\n    return windowsPathsNoEscape ? s.replace(/\\[([^\\/\\\\])\\]/g, \"$1\") : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, \"$1$2\").replace(/\\\\([^\\/])/g, \"$1\");\n};\n\n\nconst $c9bb26969dd669b7$var$types = new Set([\n    \"!\",\n    \"?\",\n    \"+\",\n    \"*\",\n    \"@\"\n]);\nconst $c9bb26969dd669b7$var$isExtglobType = (c)=>$c9bb26969dd669b7$var$types.has(c);\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst $c9bb26969dd669b7$var$startNoTraversal = \"(?!(?:^|/)\\\\.\\\\.?(?:$|/))\";\nconst $c9bb26969dd669b7$var$startNoDot = \"(?!\\\\.)\";\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst $c9bb26969dd669b7$var$addPatternStart = new Set([\n    \"[\",\n    \".\"\n]);\n// cases where traversal is A-OK, no dot prevention needed\nconst $c9bb26969dd669b7$var$justDots = new Set([\n    \"..\",\n    \".\"\n]);\nconst $c9bb26969dd669b7$var$reSpecials = new Set(\"().*{}+?[]^$\\\\!\");\nconst $c9bb26969dd669b7$var$regExpEscape = (s)=>s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n// any single thing other than /\nconst $c9bb26969dd669b7$var$qmark = \"[^/]\";\n// * => any number of characters\nconst $c9bb26969dd669b7$var$star = $c9bb26969dd669b7$var$qmark + \"*?\";\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst $c9bb26969dd669b7$var$starNoEmpty = $c9bb26969dd669b7$var$qmark + \"+?\";\nclass $c9bb26969dd669b7$export$f65a2bad84928952 {\n    type;\n    #root;\n    #hasMagic;\n    #uflag = false;\n    #parts = [];\n    #parent;\n    #parentIndex;\n    #negs;\n    #filledNegs = false;\n    #options;\n    #toString;\n    // set to true if it's an extglob with no children\n    // (which really means one child of '')\n    #emptyExt = false;\n    constructor(type, parent, options = {}){\n        this.type = type;\n        // extglobs are inherently magical\n        if (type) this.#hasMagic = true;\n        this.#parent = parent;\n        this.#root = this.#parent ? this.#parent.#root : this;\n        this.#options = this.#root === this ? options : this.#root.#options;\n        this.#negs = this.#root === this ? [] : this.#root.#negs;\n        if (type === \"!\" && !this.#root.#filledNegs) this.#negs.push(this);\n        this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0;\n    }\n    get hasMagic() {\n        /* c8 ignore start */ if (this.#hasMagic !== undefined) return this.#hasMagic;\n        /* c8 ignore stop */ for (const p of this.#parts){\n            if (typeof p === \"string\") continue;\n            if (p.type || p.hasMagic) return this.#hasMagic = true;\n        }\n        // note: will be undefined until we generate the regexp src and find out\n        return this.#hasMagic;\n    }\n    // reconstructs the pattern\n    toString() {\n        if (this.#toString !== undefined) return this.#toString;\n        if (!this.type) return this.#toString = this.#parts.map((p)=>String(p)).join(\"\");\n        else return this.#toString = this.type + \"(\" + this.#parts.map((p)=>String(p)).join(\"|\") + \")\";\n    }\n    #fillNegs() {\n        /* c8 ignore start */ if (this !== this.#root) throw new Error(\"should only call on root\");\n        if (this.#filledNegs) return this;\n        /* c8 ignore stop */ // call toString() once to fill this out\n        this.toString();\n        this.#filledNegs = true;\n        let n;\n        while(n = this.#negs.pop()){\n            if (n.type !== \"!\") continue;\n            // walk up the tree, appending everthing that comes AFTER parentIndex\n            let p = n;\n            let pp = p.#parent;\n            while(pp){\n                for(let i = p.#parentIndex + 1; !pp.type && i < pp.#parts.length; i++)for (const part of n.#parts){\n                    /* c8 ignore start */ if (typeof part === \"string\") throw new Error(\"string part in extglob AST??\");\n                    /* c8 ignore stop */ part.copyIn(pp.#parts[i]);\n                }\n                p = pp;\n                pp = p.#parent;\n            }\n        }\n        return this;\n    }\n    push(...parts) {\n        for (const p of parts){\n            if (p === \"\") continue;\n            /* c8 ignore start */ if (typeof p !== \"string\" && !(p instanceof $c9bb26969dd669b7$export$f65a2bad84928952 && p.#parent === this)) throw new Error(\"invalid part: \" + p);\n            /* c8 ignore stop */ this.#parts.push(p);\n        }\n    }\n    toJSON() {\n        const ret = this.type === null ? this.#parts.slice().map((p)=>typeof p === \"string\" ? p : p.toJSON()) : [\n            this.type,\n            ...this.#parts.map((p)=>p.toJSON())\n        ];\n        if (this.isStart() && !this.type) ret.unshift([]);\n        if (this.isEnd() && (this === this.#root || this.#root.#filledNegs && this.#parent?.type === \"!\")) ret.push({});\n        return ret;\n    }\n    isStart() {\n        if (this.#root === this) return true;\n        // if (this.type) return !!this.#parent?.isStart()\n        if (!this.#parent?.isStart()) return false;\n        if (this.#parentIndex === 0) return true;\n        // if everything AHEAD of this is a negation, then it's still the \"start\"\n        const p = this.#parent;\n        for(let i = 0; i < this.#parentIndex; i++){\n            const pp = p.#parts[i];\n            if (!(pp instanceof $c9bb26969dd669b7$export$f65a2bad84928952 && pp.type === \"!\")) return false;\n        }\n        return true;\n    }\n    isEnd() {\n        if (this.#root === this) return true;\n        if (this.#parent?.type === \"!\") return true;\n        if (!this.#parent?.isEnd()) return false;\n        if (!this.type) return this.#parent?.isEnd();\n        // if not root, it'll always have a parent\n        /* c8 ignore start */ const pl = this.#parent ? this.#parent.#parts.length : 0;\n        /* c8 ignore stop */ return this.#parentIndex === pl - 1;\n    }\n    copyIn(part) {\n        if (typeof part === \"string\") this.push(part);\n        else this.push(part.clone(this));\n    }\n    clone(parent) {\n        const c = new $c9bb26969dd669b7$export$f65a2bad84928952(this.type, parent);\n        for (const p of this.#parts)c.copyIn(p);\n        return c;\n    }\n    static #parseAST(str, ast, pos, opt) {\n        let escaping = false;\n        let inBrace = false;\n        let braceStart = -1;\n        let braceNeg = false;\n        if (ast.type === null) {\n            // outside of a extglob, append until we find a start\n            let i = pos;\n            let acc = \"\";\n            while(i < str.length){\n                const c = str.charAt(i++);\n                // still accumulate escapes at this point, but we do ignore\n                // starts that are escaped\n                if (escaping || c === \"\\\\\") {\n                    escaping = !escaping;\n                    acc += c;\n                    continue;\n                }\n                if (inBrace) {\n                    if (i === braceStart + 1) {\n                        if (c === \"^\" || c === \"!\") braceNeg = true;\n                    } else if (c === \"]\" && !(i === braceStart + 2 && braceNeg)) inBrace = false;\n                    acc += c;\n                    continue;\n                } else if (c === \"[\") {\n                    inBrace = true;\n                    braceStart = i;\n                    braceNeg = false;\n                    acc += c;\n                    continue;\n                }\n                if (!opt.noext && $c9bb26969dd669b7$var$isExtglobType(c) && str.charAt(i) === \"(\") {\n                    ast.push(acc);\n                    acc = \"\";\n                    const ext = new $c9bb26969dd669b7$export$f65a2bad84928952(c, ast);\n                    i = $c9bb26969dd669b7$export$f65a2bad84928952.#parseAST(str, ext, i, opt);\n                    ast.push(ext);\n                    continue;\n                }\n                acc += c;\n            }\n            ast.push(acc);\n            return i;\n        }\n        // some kind of extglob, pos is at the (\n        // find the next | or )\n        let i = pos + 1;\n        let part = new $c9bb26969dd669b7$export$f65a2bad84928952(null, ast);\n        const parts = [];\n        let acc = \"\";\n        while(i < str.length){\n            const c = str.charAt(i++);\n            // still accumulate escapes at this point, but we do ignore\n            // starts that are escaped\n            if (escaping || c === \"\\\\\") {\n                escaping = !escaping;\n                acc += c;\n                continue;\n            }\n            if (inBrace) {\n                if (i === braceStart + 1) {\n                    if (c === \"^\" || c === \"!\") braceNeg = true;\n                } else if (c === \"]\" && !(i === braceStart + 2 && braceNeg)) inBrace = false;\n                acc += c;\n                continue;\n            } else if (c === \"[\") {\n                inBrace = true;\n                braceStart = i;\n                braceNeg = false;\n                acc += c;\n                continue;\n            }\n            if ($c9bb26969dd669b7$var$isExtglobType(c) && str.charAt(i) === \"(\") {\n                part.push(acc);\n                acc = \"\";\n                const ext = new $c9bb26969dd669b7$export$f65a2bad84928952(c, part);\n                part.push(ext);\n                i = $c9bb26969dd669b7$export$f65a2bad84928952.#parseAST(str, ext, i, opt);\n                continue;\n            }\n            if (c === \"|\") {\n                part.push(acc);\n                acc = \"\";\n                parts.push(part);\n                part = new $c9bb26969dd669b7$export$f65a2bad84928952(null, ast);\n                continue;\n            }\n            if (c === \")\") {\n                if (acc === \"\" && ast.#parts.length === 0) ast.#emptyExt = true;\n                part.push(acc);\n                acc = \"\";\n                ast.push(...parts, part);\n                return i;\n            }\n            acc += c;\n        }\n        // unfinished extglob\n        // if we got here, it was a malformed extglob! not an extglob, but\n        // maybe something else in there.\n        ast.type = null;\n        ast.#hasMagic = undefined;\n        ast.#parts = [\n            str.substring(pos - 1)\n        ];\n        return i;\n    }\n    static fromGlob(pattern, options = {}) {\n        const ast = new $c9bb26969dd669b7$export$f65a2bad84928952(null, undefined, options);\n        $c9bb26969dd669b7$export$f65a2bad84928952.#parseAST(pattern, ast, 0, options);\n        return ast;\n    }\n    // returns the regular expression if there's magic, or the unescaped\n    // string if not.\n    toMMPattern() {\n        // should only be called on root\n        /* c8 ignore start */ if (this !== this.#root) return this.#root.toMMPattern();\n        /* c8 ignore stop */ const glob = this.toString();\n        const [re, body, hasMagic, uflag] = this.toRegExpSource();\n        // if we're in nocase mode, and not nocaseMagicOnly, then we do\n        // still need a regular expression if we have to case-insensitively\n        // match capital/lowercase characters.\n        const anyMagic = hasMagic || this.#hasMagic || this.#options.nocase && !this.#options.nocaseMagicOnly && glob.toUpperCase() !== glob.toLowerCase();\n        if (!anyMagic) return body;\n        const flags = (this.#options.nocase ? \"i\" : \"\") + (uflag ? \"u\" : \"\");\n        return Object.assign(new RegExp(`^${re}$`, flags), {\n            _src: re,\n            _glob: glob\n        });\n    }\n    // returns the string match, the regexp source, whether there's magic\n    // in the regexp (so a regular expression is required) and whether or\n    // not the uflag is needed for the regular expression (for posix classes)\n    // TODO: instead of injecting the start/end at this point, just return\n    // the BODY of the regexp, along with the start/end portions suitable\n    // for binding the start/end in either a joined full-path makeRe context\n    // (where we bind to (^|/), or a standalone matchPart context (where\n    // we bind to ^, and not /).  Otherwise slashes get duped!\n    //\n    // In part-matching mode, the start is:\n    // - if not isStart: nothing\n    // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n    // - if dots allowed or not possible: ^\n    // - if dots possible and not allowed: ^(?!\\.)\n    // end is:\n    // - if not isEnd(): nothing\n    // - else: $\n    //\n    // In full-path matching mode, we put the slash at the START of the\n    // pattern, so start is:\n    // - if first pattern: same as part-matching mode\n    // - if not isStart(): nothing\n    // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n    // - if dots allowed or not possible: /\n    // - if dots possible and not allowed: /(?!\\.)\n    // end is:\n    // - if last pattern, same as part-matching mode\n    // - else nothing\n    //\n    // Always put the (?:$|/) on negated tails, though, because that has to be\n    // there to bind the end of the negated pattern portion, and it's easier to\n    // just stick it in now rather than try to inject it later in the middle of\n    // the pattern.\n    //\n    // We can just always return the same end, and leave it up to the caller\n    // to know whether it's going to be used joined or in parts.\n    // And, if the start is adjusted slightly, can do the same there:\n    // - if not isStart: nothing\n    // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n    // - if dots allowed or not possible: (?:/|^)\n    // - if dots possible and not allowed: (?:/|^)(?!\\.)\n    //\n    // But it's better to have a simpler binding without a conditional, for\n    // performance, so probably better to return both start options.\n    //\n    // Then the caller just ignores the end if it's not the first pattern,\n    // and the start always gets applied.\n    //\n    // But that's always going to be $ if it's the ending pattern, or nothing,\n    // so the caller can just attach $ at the end of the pattern when building.\n    //\n    // So the todo is:\n    // - better detect what kind of start is needed\n    // - return both flavors of starting pattern\n    // - attach $ at the end of the pattern when creating the actual RegExp\n    //\n    // Ah, but wait, no, that all only applies to the root when the first pattern\n    // is not an extglob. If the first pattern IS an extglob, then we need all\n    // that dot prevention biz to live in the extglob portions, because eg\n    // +(*|.x*) can match .xy but not .yx.\n    //\n    // So, return the two flavors if it's #root and the first child is not an\n    // AST, otherwise leave it to the child AST to handle it, and there,\n    // use the (?:^|/) style of start binding.\n    //\n    // Even simplified further:\n    // - Since the start for a join is eg /(?!\\.) and the start for a part\n    // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n    // or start or whatever) and prepend ^ or / at the Regexp construction.\n    toRegExpSource(allowDot) {\n        const dot = allowDot ?? !!this.#options.dot;\n        if (this.#root === this) this.#fillNegs();\n        if (!this.type) {\n            const noEmpty = this.isStart() && this.isEnd();\n            const src = this.#parts.map((p)=>{\n                const [re, _, hasMagic, uflag] = typeof p === \"string\" ? $c9bb26969dd669b7$export$f65a2bad84928952.#parseGlob(p, this.#hasMagic, noEmpty) : p.toRegExpSource(allowDot);\n                this.#hasMagic = this.#hasMagic || hasMagic;\n                this.#uflag = this.#uflag || uflag;\n                return re;\n            }).join(\"\");\n            let start = \"\";\n            if (this.isStart()) {\n                if (typeof this.#parts[0] === \"string\") {\n                    // this is the string that will match the start of the pattern,\n                    // so we need to protect against dots and such.\n                    // '.' and '..' cannot match unless the pattern is that exactly,\n                    // even if it starts with . or dot:true is set.\n                    const dotTravAllowed = this.#parts.length === 1 && $c9bb26969dd669b7$var$justDots.has(this.#parts[0]);\n                    if (!dotTravAllowed) {\n                        const aps = $c9bb26969dd669b7$var$addPatternStart;\n                        // check if we have a possibility of matching . or ..,\n                        // and prevent that.\n                        const needNoTrav = // dots are allowed, and the pattern starts with [ or .\n                        dot && aps.has(src.charAt(0)) || // the pattern starts with \\., and then [ or .\n                        src.startsWith(\"\\\\.\") && aps.has(src.charAt(2)) || // the pattern starts with \\.\\., and then [ or .\n                        src.startsWith(\"\\\\.\\\\.\") && aps.has(src.charAt(4));\n                        // no need to prevent dots if it can't match a dot, or if a\n                        // sub-pattern will be preventing it anyway.\n                        const needNoDot = !dot && !allowDot && aps.has(src.charAt(0));\n                        start = needNoTrav ? $c9bb26969dd669b7$var$startNoTraversal : needNoDot ? $c9bb26969dd669b7$var$startNoDot : \"\";\n                    }\n                }\n            }\n            // append the \"end of path portion\" pattern to negation tails\n            let end = \"\";\n            if (this.isEnd() && this.#root.#filledNegs && this.#parent?.type === \"!\") end = \"(?:$|\\\\/)\";\n            const final = start + src + end;\n            return [\n                final,\n                (0, $4ffc8d515e45a860$export$e8bacd2802a88316)(src),\n                this.#hasMagic = !!this.#hasMagic,\n                this.#uflag\n            ];\n        }\n        // We need to calculate the body *twice* if it's a repeat pattern\n        // at the start, once in nodot mode, then again in dot mode, so a\n        // pattern like *(?) can match 'x.y'\n        const repeated = this.type === \"*\" || this.type === \"+\";\n        // some kind of extglob\n        const start = this.type === \"!\" ? \"(?:(?!(?:\" : \"(?:\";\n        let body = this.#partsToRegExp(dot);\n        if (this.isStart() && this.isEnd() && !body && this.type !== \"!\") {\n            // invalid extglob, has to at least be *something* present, if it's\n            // the entire path portion.\n            const s = this.toString();\n            this.#parts = [\n                s\n            ];\n            this.type = null;\n            this.#hasMagic = undefined;\n            return [\n                s,\n                (0, $4ffc8d515e45a860$export$e8bacd2802a88316)(this.toString()),\n                false,\n                false\n            ];\n        }\n        // XXX abstract out this map method\n        let bodyDotAllowed = !repeated || allowDot || dot || !$c9bb26969dd669b7$var$startNoDot ? \"\" : this.#partsToRegExp(true);\n        if (bodyDotAllowed === body) bodyDotAllowed = \"\";\n        if (bodyDotAllowed) body = `(?:${body})(?:${bodyDotAllowed})*?`;\n        // an empty !() is exactly equivalent to a starNoEmpty\n        let final = \"\";\n        if (this.type === \"!\" && this.#emptyExt) final = (this.isStart() && !dot ? $c9bb26969dd669b7$var$startNoDot : \"\") + $c9bb26969dd669b7$var$starNoEmpty;\n        else {\n            const close = this.type === \"!\" ? \"))\" + (this.isStart() && !dot && !allowDot ? $c9bb26969dd669b7$var$startNoDot : \"\") + $c9bb26969dd669b7$var$star + \")\" : this.type === \"@\" ? \")\" : this.type === \"?\" ? \")?\" : this.type === \"+\" && bodyDotAllowed ? \")\" : this.type === \"*\" && bodyDotAllowed ? `)?` : `)${this.type}`;\n            final = start + body + close;\n        }\n        return [\n            final,\n            (0, $4ffc8d515e45a860$export$e8bacd2802a88316)(body),\n            this.#hasMagic = !!this.#hasMagic,\n            this.#uflag\n        ];\n    }\n    #partsToRegExp(dot) {\n        return this.#parts.map((p)=>{\n            // extglob ASTs should only contain parent ASTs\n            /* c8 ignore start */ if (typeof p === \"string\") throw new Error(\"string type in extglob ast??\");\n            /* c8 ignore stop */ // can ignore hasMagic, because extglobs are already always magic\n            const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot);\n            this.#uflag = this.#uflag || uflag;\n            return re;\n        }).filter((p)=>!(this.isStart() && this.isEnd()) || !!p).join(\"|\");\n    }\n    static #parseGlob(glob, hasMagic, noEmpty = false) {\n        let escaping = false;\n        let re = \"\";\n        let uflag = false;\n        for(let i = 0; i < glob.length; i++){\n            const c = glob.charAt(i);\n            if (escaping) {\n                escaping = false;\n                re += ($c9bb26969dd669b7$var$reSpecials.has(c) ? \"\\\\\" : \"\") + c;\n                continue;\n            }\n            if (c === \"\\\\\") {\n                if (i === glob.length - 1) re += \"\\\\\\\\\";\n                else escaping = true;\n                continue;\n            }\n            if (c === \"[\") {\n                const [src, needUflag, consumed, magic] = (0, $a278060bbdc395f8$export$542081d93172af)(glob, i);\n                if (consumed) {\n                    re += src;\n                    uflag = uflag || needUflag;\n                    i += consumed - 1;\n                    hasMagic = hasMagic || magic;\n                    continue;\n                }\n            }\n            if (c === \"*\") {\n                if (noEmpty && glob === \"*\") re += $c9bb26969dd669b7$var$starNoEmpty;\n                else re += $c9bb26969dd669b7$var$star;\n                hasMagic = true;\n                continue;\n            }\n            if (c === \"?\") {\n                re += $c9bb26969dd669b7$var$qmark;\n                hasMagic = true;\n                continue;\n            }\n            re += $c9bb26969dd669b7$var$regExpEscape(c);\n        }\n        return [\n            re,\n            (0, $4ffc8d515e45a860$export$e8bacd2802a88316)(glob),\n            !!hasMagic,\n            uflag\n        ];\n    }\n}\n\n\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */ const $53d187a9a62bfc70$export$4e7f196112fea3c5 = (s, { windowsPathsNoEscape: windowsPathsNoEscape = false } = {})=>{\n    // don't need to escape +@! because we escape the parens\n    // that make those magic, and escaping ! as [!] isn't valid,\n    // because [!]] is a valid glob class meaning not ']'.\n    return windowsPathsNoEscape ? s.replace(/[?*()[\\]]/g, \"[$&]\") : s.replace(/[?*()[\\]\\\\]/g, \"\\\\$&\");\n};\n\n\n\nvar $cfae44f0dfdf62c0$exports = {};\n// shim for using process in browser\nvar $cfae44f0dfdf62c0$var$process = $cfae44f0dfdf62c0$exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $cfae44f0dfdf62c0$var$cachedSetTimeout;\nvar $cfae44f0dfdf62c0$var$cachedClearTimeout;\nfunction $cfae44f0dfdf62c0$var$defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction $cfae44f0dfdf62c0$var$defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        else $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        else $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    }\n})();\nfunction $cfae44f0dfdf62c0$var$runTimeout(fun) {\n    if ($cfae44f0dfdf62c0$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedSetTimeout === $cfae44f0dfdf62c0$var$defaultSetTimout || !$cfae44f0dfdf62c0$var$cachedSetTimeout) && setTimeout) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $cfae44f0dfdf62c0$var$runClearTimeout(marker) {\n    if ($cfae44f0dfdf62c0$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedClearTimeout === $cfae44f0dfdf62c0$var$defaultClearTimeout || !$cfae44f0dfdf62c0$var$cachedClearTimeout) && clearTimeout) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $cfae44f0dfdf62c0$var$queue = [];\nvar $cfae44f0dfdf62c0$var$draining = false;\nvar $cfae44f0dfdf62c0$var$currentQueue;\nvar $cfae44f0dfdf62c0$var$queueIndex = -1;\nfunction $cfae44f0dfdf62c0$var$cleanUpNextTick() {\n    if (!$cfae44f0dfdf62c0$var$draining || !$cfae44f0dfdf62c0$var$currentQueue) return;\n    $cfae44f0dfdf62c0$var$draining = false;\n    if ($cfae44f0dfdf62c0$var$currentQueue.length) $cfae44f0dfdf62c0$var$queue = $cfae44f0dfdf62c0$var$currentQueue.concat($cfae44f0dfdf62c0$var$queue);\n    else $cfae44f0dfdf62c0$var$queueIndex = -1;\n    if ($cfae44f0dfdf62c0$var$queue.length) $cfae44f0dfdf62c0$var$drainQueue();\n}\nfunction $cfae44f0dfdf62c0$var$drainQueue() {\n    if ($cfae44f0dfdf62c0$var$draining) return;\n    var timeout = $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$cleanUpNextTick);\n    $cfae44f0dfdf62c0$var$draining = true;\n    var len = $cfae44f0dfdf62c0$var$queue.length;\n    while(len){\n        $cfae44f0dfdf62c0$var$currentQueue = $cfae44f0dfdf62c0$var$queue;\n        $cfae44f0dfdf62c0$var$queue = [];\n        while(++$cfae44f0dfdf62c0$var$queueIndex < len)if ($cfae44f0dfdf62c0$var$currentQueue) $cfae44f0dfdf62c0$var$currentQueue[$cfae44f0dfdf62c0$var$queueIndex].run();\n        $cfae44f0dfdf62c0$var$queueIndex = -1;\n        len = $cfae44f0dfdf62c0$var$queue.length;\n    }\n    $cfae44f0dfdf62c0$var$currentQueue = null;\n    $cfae44f0dfdf62c0$var$draining = false;\n    $cfae44f0dfdf62c0$var$runClearTimeout(timeout);\n}\n$cfae44f0dfdf62c0$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $cfae44f0dfdf62c0$var$queue.push(new $cfae44f0dfdf62c0$var$Item(fun, args));\n    if ($cfae44f0dfdf62c0$var$queue.length === 1 && !$cfae44f0dfdf62c0$var$draining) $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $cfae44f0dfdf62c0$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$cfae44f0dfdf62c0$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$cfae44f0dfdf62c0$var$process.title = \"browser\";\n$cfae44f0dfdf62c0$var$process.browser = true;\n$cfae44f0dfdf62c0$var$process.env = {};\n$cfae44f0dfdf62c0$var$process.argv = [];\n$cfae44f0dfdf62c0$var$process.version = \"\"; // empty string to avoid regexp issues\n$cfae44f0dfdf62c0$var$process.versions = {};\nfunction $cfae44f0dfdf62c0$var$noop() {}\n$cfae44f0dfdf62c0$var$process.on = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.addListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.once = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.off = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeAllListeners = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.emit = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependOnceListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.listeners = function(name) {\n    return [];\n};\n$cfae44f0dfdf62c0$var$process.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\n$cfae44f0dfdf62c0$var$process.cwd = function() {\n    return \"/\";\n};\n$cfae44f0dfdf62c0$var$process.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\n$cfae44f0dfdf62c0$var$process.umask = function() {\n    return 0;\n};\n\n\nconst $5ad63134f2f5e985$export$262af1bf5171b3a1 = (p, pattern, options = {})=>{\n    (0, $5e7996718b7e3ba8$export$fd15c38a89c33022)(pattern);\n    // shortcut: comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === \"#\") return false;\n    return new $5ad63134f2f5e985$export$cdceb28afdae3ea9(pattern, options).match(p);\n};\n// Optimized checking for the most common glob patterns.\nconst $5ad63134f2f5e985$var$starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/;\nconst $5ad63134f2f5e985$var$starDotExtTest = (ext)=>(f)=>!f.startsWith(\".\") && f.endsWith(ext);\nconst $5ad63134f2f5e985$var$starDotExtTestDot = (ext)=>(f)=>f.endsWith(ext);\nconst $5ad63134f2f5e985$var$starDotExtTestNocase = (ext)=>{\n    ext = ext.toLowerCase();\n    return (f)=>!f.startsWith(\".\") && f.toLowerCase().endsWith(ext);\n};\nconst $5ad63134f2f5e985$var$starDotExtTestNocaseDot = (ext)=>{\n    ext = ext.toLowerCase();\n    return (f)=>f.toLowerCase().endsWith(ext);\n};\nconst $5ad63134f2f5e985$var$starDotStarRE = /^\\*+\\.\\*+$/;\nconst $5ad63134f2f5e985$var$starDotStarTest = (f)=>!f.startsWith(\".\") && f.includes(\".\");\nconst $5ad63134f2f5e985$var$starDotStarTestDot = (f)=>f !== \".\" && f !== \"..\" && f.includes(\".\");\nconst $5ad63134f2f5e985$var$dotStarRE = /^\\.\\*+$/;\nconst $5ad63134f2f5e985$var$dotStarTest = (f)=>f !== \".\" && f !== \"..\" && f.startsWith(\".\");\nconst $5ad63134f2f5e985$var$starRE = /^\\*+$/;\nconst $5ad63134f2f5e985$var$starTest = (f)=>f.length !== 0 && !f.startsWith(\".\");\nconst $5ad63134f2f5e985$var$starTestDot = (f)=>f.length !== 0 && f !== \".\" && f !== \"..\";\nconst $5ad63134f2f5e985$var$qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/;\nconst $5ad63134f2f5e985$var$qmarksTestNocase = ([$0, ext = \"\"])=>{\n    const noext = $5ad63134f2f5e985$var$qmarksTestNoExt([\n        $0\n    ]);\n    if (!ext) return noext;\n    ext = ext.toLowerCase();\n    return (f)=>noext(f) && f.toLowerCase().endsWith(ext);\n};\nconst $5ad63134f2f5e985$var$qmarksTestNocaseDot = ([$0, ext = \"\"])=>{\n    const noext = $5ad63134f2f5e985$var$qmarksTestNoExtDot([\n        $0\n    ]);\n    if (!ext) return noext;\n    ext = ext.toLowerCase();\n    return (f)=>noext(f) && f.toLowerCase().endsWith(ext);\n};\nconst $5ad63134f2f5e985$var$qmarksTestDot = ([$0, ext = \"\"])=>{\n    const noext = $5ad63134f2f5e985$var$qmarksTestNoExtDot([\n        $0\n    ]);\n    return !ext ? noext : (f)=>noext(f) && f.endsWith(ext);\n};\nconst $5ad63134f2f5e985$var$qmarksTest = ([$0, ext = \"\"])=>{\n    const noext = $5ad63134f2f5e985$var$qmarksTestNoExt([\n        $0\n    ]);\n    return !ext ? noext : (f)=>noext(f) && f.endsWith(ext);\n};\nconst $5ad63134f2f5e985$var$qmarksTestNoExt = ([$0])=>{\n    const len = $0.length;\n    return (f)=>f.length === len && !f.startsWith(\".\");\n};\nconst $5ad63134f2f5e985$var$qmarksTestNoExtDot = ([$0])=>{\n    const len = $0.length;\n    return (f)=>f.length === len && f !== \".\" && f !== \"..\";\n};\n/* c8 ignore start */ const $5ad63134f2f5e985$var$defaultPlatform = typeof $cfae44f0dfdf62c0$exports === \"object\" && $cfae44f0dfdf62c0$exports ? (typeof $cfae44f0dfdf62c0$exports.env === \"object\" && $cfae44f0dfdf62c0$exports.env && undefined, $cfae44f0dfdf62c0$exports.platform) : \"posix\";\nconst $5ad63134f2f5e985$var$path = {\n    win32: {\n        sep: \"\\\\\"\n    },\n    posix: {\n        sep: \"/\"\n    }\n};\nconst $5ad63134f2f5e985$export$5aee1a5bd9743d8f = $5ad63134f2f5e985$var$defaultPlatform === \"win32\" ? $5ad63134f2f5e985$var$path.win32.sep : $5ad63134f2f5e985$var$path.posix.sep;\n$5ad63134f2f5e985$export$262af1bf5171b3a1.sep = $5ad63134f2f5e985$export$5aee1a5bd9743d8f;\nconst $5ad63134f2f5e985$export$6c01ffe652e570ac = Symbol(\"globstar **\");\n$5ad63134f2f5e985$export$262af1bf5171b3a1.GLOBSTAR = $5ad63134f2f5e985$export$6c01ffe652e570ac;\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst $5ad63134f2f5e985$var$qmark = \"[^/]\";\n// * => any number of characters\nconst $5ad63134f2f5e985$var$star = $5ad63134f2f5e985$var$qmark + \"*?\";\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst $5ad63134f2f5e985$var$twoStarDot = \"(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?\";\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst $5ad63134f2f5e985$var$twoStarNoDot = \"(?:(?!(?:\\\\/|^)\\\\.).)*?\";\nconst $5ad63134f2f5e985$export$3dea766d36a8935f = (pattern, options = {})=>(p)=>$5ad63134f2f5e985$export$262af1bf5171b3a1(p, pattern, options);\n$5ad63134f2f5e985$export$262af1bf5171b3a1.filter = $5ad63134f2f5e985$export$3dea766d36a8935f;\nconst $5ad63134f2f5e985$var$ext = (a, b = {})=>Object.assign({}, a, b);\nconst $5ad63134f2f5e985$export$ebe90cb607ad99e = (def)=>{\n    if (!def || typeof def !== \"object\" || !Object.keys(def).length) return $5ad63134f2f5e985$export$262af1bf5171b3a1;\n    const orig = $5ad63134f2f5e985$export$262af1bf5171b3a1;\n    const m = (p, pattern, options = {})=>orig(p, pattern, $5ad63134f2f5e985$var$ext(def, options));\n    return Object.assign(m, {\n        Minimatch: class Minimatch extends orig.Minimatch {\n            constructor(pattern, options = {}){\n                super(pattern, $5ad63134f2f5e985$var$ext(def, options));\n            }\n            static defaults(options) {\n                return orig.defaults($5ad63134f2f5e985$var$ext(def, options)).Minimatch;\n            }\n        },\n        AST: class AST extends orig.AST {\n            /* c8 ignore start */ constructor(type, parent, options = {}){\n                super(type, parent, $5ad63134f2f5e985$var$ext(def, options));\n            }\n            /* c8 ignore stop */ static fromGlob(pattern, options = {}) {\n                return orig.AST.fromGlob(pattern, $5ad63134f2f5e985$var$ext(def, options));\n            }\n        },\n        unescape: (s, options = {})=>orig.unescape(s, $5ad63134f2f5e985$var$ext(def, options)),\n        escape: (s, options = {})=>orig.escape(s, $5ad63134f2f5e985$var$ext(def, options)),\n        filter: (pattern, options = {})=>orig.filter(pattern, $5ad63134f2f5e985$var$ext(def, options)),\n        defaults: (options)=>orig.defaults($5ad63134f2f5e985$var$ext(def, options)),\n        makeRe: (pattern, options = {})=>orig.makeRe(pattern, $5ad63134f2f5e985$var$ext(def, options)),\n        braceExpand: (pattern, options = {})=>orig.braceExpand(pattern, $5ad63134f2f5e985$var$ext(def, options)),\n        match: (list, pattern, options = {})=>orig.match(list, pattern, $5ad63134f2f5e985$var$ext(def, options)),\n        sep: orig.sep,\n        GLOBSTAR: $5ad63134f2f5e985$export$6c01ffe652e570ac\n    });\n};\n$5ad63134f2f5e985$export$262af1bf5171b3a1.defaults = $5ad63134f2f5e985$export$ebe90cb607ad99e;\nconst $5ad63134f2f5e985$export$3dcea0790d30fa81 = (pattern, options = {})=>{\n    (0, $5e7996718b7e3ba8$export$fd15c38a89c33022)(pattern);\n    // Thanks to Yeting Li <https://github.com/yetingli> for\n    // improving this regexp to avoid a ReDOS vulnerability.\n    if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) // shortcut. no need to expand.\n    return [\n        pattern\n    ];\n    return (0, (/*@__PURE__*/$parcel$interopDefault($c81d632c93adcfed$exports)))(pattern);\n};\n$5ad63134f2f5e985$export$262af1bf5171b3a1.braceExpand = $5ad63134f2f5e985$export$3dcea0790d30fa81;\nconst $5ad63134f2f5e985$export$db5325c3ebfcff08 = (pattern, options = {})=>new $5ad63134f2f5e985$export$cdceb28afdae3ea9(pattern, options).makeRe();\n$5ad63134f2f5e985$export$262af1bf5171b3a1.makeRe = $5ad63134f2f5e985$export$db5325c3ebfcff08;\nconst $5ad63134f2f5e985$export$4659b591c19bdf3d = (list, pattern, options = {})=>{\n    const mm = new $5ad63134f2f5e985$export$cdceb28afdae3ea9(pattern, options);\n    list = list.filter((f)=>mm.match(f));\n    if (mm.options.nonull && !list.length) list.push(pattern);\n    return list;\n};\n$5ad63134f2f5e985$export$262af1bf5171b3a1.match = $5ad63134f2f5e985$export$4659b591c19bdf3d;\n// replace stuff like \\* with *\nconst $5ad63134f2f5e985$var$globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/;\nconst $5ad63134f2f5e985$var$regExpEscape = (s)=>s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\nclass $5ad63134f2f5e985$export$cdceb28afdae3ea9 {\n    options;\n    set;\n    pattern;\n    windowsPathsNoEscape;\n    nonegate;\n    negate;\n    comment;\n    empty;\n    preserveMultipleSlashes;\n    partial;\n    globSet;\n    globParts;\n    nocase;\n    isWindows;\n    platform;\n    windowsNoMagicRoot;\n    regexp;\n    constructor(pattern, options = {}){\n        (0, $5e7996718b7e3ba8$export$fd15c38a89c33022)(pattern);\n        options = options || {};\n        this.options = options;\n        this.pattern = pattern;\n        this.platform = options.platform || $5ad63134f2f5e985$var$defaultPlatform;\n        this.isWindows = this.platform === \"win32\";\n        this.windowsPathsNoEscape = !!options.windowsPathsNoEscape || options.allowWindowsEscape === false;\n        if (this.windowsPathsNoEscape) this.pattern = this.pattern.replace(/\\\\/g, \"/\");\n        this.preserveMultipleSlashes = !!options.preserveMultipleSlashes;\n        this.regexp = null;\n        this.negate = false;\n        this.nonegate = !!options.nonegate;\n        this.comment = false;\n        this.empty = false;\n        this.partial = !!options.partial;\n        this.nocase = !!this.options.nocase;\n        this.windowsNoMagicRoot = options.windowsNoMagicRoot !== undefined ? options.windowsNoMagicRoot : !!(this.isWindows && this.nocase);\n        this.globSet = [];\n        this.globParts = [];\n        this.set = [];\n        // make the set of regexps etc.\n        this.make();\n    }\n    hasMagic() {\n        if (this.options.magicalBraces && this.set.length > 1) return true;\n        for (const pattern of this.set)for (const part of pattern){\n            if (typeof part !== \"string\") return true;\n        }\n        return false;\n    }\n    debug(..._) {}\n    make() {\n        const pattern = this.pattern;\n        const options = this.options;\n        // empty patterns and comments match nothing.\n        if (!options.nocomment && pattern.charAt(0) === \"#\") {\n            this.comment = true;\n            return;\n        }\n        if (!pattern) {\n            this.empty = true;\n            return;\n        }\n        // step 1: figure out negation, etc.\n        this.parseNegate();\n        // step 2: expand braces\n        this.globSet = [\n            ...new Set(this.braceExpand())\n        ];\n        if (options.debug) this.debug = (...args)=>console.error(...args);\n        this.debug(this.pattern, this.globSet);\n        // step 3: now we have a set, so turn each one into a series of\n        // path-portion matching patterns.\n        // These will be regexps, except in the case of \"**\", which is\n        // set to the GLOBSTAR object for globstar behavior,\n        // and will not contain any / characters\n        //\n        // First, we preprocess to make the glob pattern sets a bit simpler\n        // and deduped.  There are some perf-killing patterns that can cause\n        // problems with a glob walk, but we can simplify them down a bit.\n        const rawGlobParts = this.globSet.map((s)=>this.slashSplit(s));\n        this.globParts = this.preprocess(rawGlobParts);\n        this.debug(this.pattern, this.globParts);\n        // glob --> regexps\n        let set = this.globParts.map((s, _, __)=>{\n            if (this.isWindows && this.windowsNoMagicRoot) {\n                // check if it's a drive or unc path.\n                const isUNC = s[0] === \"\" && s[1] === \"\" && (s[2] === \"?\" || !$5ad63134f2f5e985$var$globMagic.test(s[2])) && !$5ad63134f2f5e985$var$globMagic.test(s[3]);\n                const isDrive = /^[a-z]:/i.test(s[0]);\n                if (isUNC) return [\n                    ...s.slice(0, 4),\n                    ...s.slice(4).map((ss)=>this.parse(ss))\n                ];\n                else if (isDrive) return [\n                    s[0],\n                    ...s.slice(1).map((ss)=>this.parse(ss))\n                ];\n            }\n            return s.map((ss)=>this.parse(ss));\n        });\n        this.debug(this.pattern, set);\n        // filter out everything that didn't compile properly.\n        this.set = set.filter((s)=>s.indexOf(false) === -1);\n        // do not treat the ? in UNC paths as magic\n        if (this.isWindows) for(let i = 0; i < this.set.length; i++){\n            const p = this.set[i];\n            if (p[0] === \"\" && p[1] === \"\" && this.globParts[i][2] === \"?\" && typeof p[3] === \"string\" && /^[a-z]:$/i.test(p[3])) p[2] = \"?\";\n        }\n        this.debug(this.pattern, this.set);\n    }\n    // various transforms to equivalent pattern sets that are\n    // faster to process in a filesystem walk.  The goal is to\n    // eliminate what we can, and push all ** patterns as far\n    // to the right as possible, even if it increases the number\n    // of patterns that we have to process.\n    preprocess(globParts) {\n        // if we're not in globstar mode, then turn all ** into *\n        if (this.options.noglobstar) for(let i = 0; i < globParts.length; i++){\n            for(let j = 0; j < globParts[i].length; j++)if (globParts[i][j] === \"**\") globParts[i][j] = \"*\";\n        }\n        const { optimizationLevel: optimizationLevel = 1 } = this.options;\n        if (optimizationLevel >= 2) {\n            // aggressive optimization for the purpose of fs walking\n            globParts = this.firstPhasePreProcess(globParts);\n            globParts = this.secondPhasePreProcess(globParts);\n        } else if (optimizationLevel >= 1) // just basic optimizations to remove some .. parts\n        globParts = this.levelOneOptimize(globParts);\n        else globParts = this.adjascentGlobstarOptimize(globParts);\n        return globParts;\n    }\n    // just get rid of adjascent ** portions\n    adjascentGlobstarOptimize(globParts) {\n        return globParts.map((parts)=>{\n            let gs = -1;\n            while(-1 !== (gs = parts.indexOf(\"**\", gs + 1))){\n                let i = gs;\n                while(parts[i + 1] === \"**\")i++;\n                if (i !== gs) parts.splice(gs, i - gs);\n            }\n            return parts;\n        });\n    }\n    // get rid of adjascent ** and resolve .. portions\n    levelOneOptimize(globParts) {\n        return globParts.map((parts)=>{\n            parts = parts.reduce((set, part)=>{\n                const prev = set[set.length - 1];\n                if (part === \"**\" && prev === \"**\") return set;\n                if (part === \"..\") {\n                    if (prev && prev !== \"..\" && prev !== \".\" && prev !== \"**\") {\n                        set.pop();\n                        return set;\n                    }\n                }\n                set.push(part);\n                return set;\n            }, []);\n            return parts.length === 0 ? [\n                \"\"\n            ] : parts;\n        });\n    }\n    levelTwoFileOptimize(parts) {\n        if (!Array.isArray(parts)) parts = this.slashSplit(parts);\n        let didSomething = false;\n        do {\n            didSomething = false;\n            // <pre>/<e>/<rest> -> <pre>/<rest>\n            if (!this.preserveMultipleSlashes) {\n                for(let i = 1; i < parts.length - 1; i++){\n                    const p = parts[i];\n                    // don't squeeze out UNC patterns\n                    if (i === 1 && p === \"\" && parts[0] === \"\") continue;\n                    if (p === \".\" || p === \"\") {\n                        didSomething = true;\n                        parts.splice(i, 1);\n                        i--;\n                    }\n                }\n                if (parts[0] === \".\" && parts.length === 2 && (parts[1] === \".\" || parts[1] === \"\")) {\n                    didSomething = true;\n                    parts.pop();\n                }\n            }\n            // <pre>/<p>/../<rest> -> <pre>/<rest>\n            let dd = 0;\n            while(-1 !== (dd = parts.indexOf(\"..\", dd + 1))){\n                const p = parts[dd - 1];\n                if (p && p !== \".\" && p !== \"..\" && p !== \"**\") {\n                    didSomething = true;\n                    parts.splice(dd - 1, 2);\n                    dd -= 2;\n                }\n            }\n        }while (didSomething);\n        return parts.length === 0 ? [\n            \"\"\n        ] : parts;\n    }\n    // First phase: single-pattern processing\n    // <pre> is 1 or more portions\n    // <rest> is 1 or more portions\n    // <p> is any portion other than ., .., '', or **\n    // <e> is . or ''\n    //\n    // **/.. is *brutal* for filesystem walking performance, because\n    // it effectively resets the recursive walk each time it occurs,\n    // and ** cannot be reduced out by a .. pattern part like a regexp\n    // or most strings (other than .., ., and '') can be.\n    //\n    // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n    // <pre>/<e>/<rest> -> <pre>/<rest>\n    // <pre>/<p>/../<rest> -> <pre>/<rest>\n    // **/**/<rest> -> **/<rest>\n    //\n    // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n    // this WOULD be allowed if ** did follow symlinks, or * didn't\n    firstPhasePreProcess(globParts) {\n        let didSomething = false;\n        do {\n            didSomething = false;\n            // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n            for (let parts of globParts){\n                let gs = -1;\n                while(-1 !== (gs = parts.indexOf(\"**\", gs + 1))){\n                    let gss = gs;\n                    while(parts[gss + 1] === \"**\")// <pre>/**/**/<rest> -> <pre>/**/<rest>\n                    gss++;\n                    // eg, if gs is 2 and gss is 4, that means we have 3 **\n                    // parts, and can remove 2 of them.\n                    if (gss > gs) parts.splice(gs + 1, gss - gs);\n                    let next = parts[gs + 1];\n                    const p = parts[gs + 2];\n                    const p2 = parts[gs + 3];\n                    if (next !== \"..\") continue;\n                    if (!p || p === \".\" || p === \"..\" || !p2 || p2 === \".\" || p2 === \"..\") continue;\n                    didSomething = true;\n                    // edit parts in place, and push the new one\n                    parts.splice(gs, 1);\n                    const other = parts.slice(0);\n                    other[gs] = \"**\";\n                    globParts.push(other);\n                    gs--;\n                }\n                // <pre>/<e>/<rest> -> <pre>/<rest>\n                if (!this.preserveMultipleSlashes) {\n                    for(let i = 1; i < parts.length - 1; i++){\n                        const p = parts[i];\n                        // don't squeeze out UNC patterns\n                        if (i === 1 && p === \"\" && parts[0] === \"\") continue;\n                        if (p === \".\" || p === \"\") {\n                            didSomething = true;\n                            parts.splice(i, 1);\n                            i--;\n                        }\n                    }\n                    if (parts[0] === \".\" && parts.length === 2 && (parts[1] === \".\" || parts[1] === \"\")) {\n                        didSomething = true;\n                        parts.pop();\n                    }\n                }\n                // <pre>/<p>/../<rest> -> <pre>/<rest>\n                let dd = 0;\n                while(-1 !== (dd = parts.indexOf(\"..\", dd + 1))){\n                    const p = parts[dd - 1];\n                    if (p && p !== \".\" && p !== \"..\" && p !== \"**\") {\n                        didSomething = true;\n                        const needDot = dd === 1 && parts[dd + 1] === \"**\";\n                        const splin = needDot ? [\n                            \".\"\n                        ] : [];\n                        parts.splice(dd - 1, 2, ...splin);\n                        if (parts.length === 0) parts.push(\"\");\n                        dd -= 2;\n                    }\n                }\n            }\n        }while (didSomething);\n        return globParts;\n    }\n    // second phase: multi-pattern dedupes\n    // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n    // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n    // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n    //\n    // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n    // ^-- not valid because ** doens't follow symlinks\n    secondPhasePreProcess(globParts) {\n        for(let i = 0; i < globParts.length - 1; i++)for(let j = i + 1; j < globParts.length; j++){\n            const matched = this.partsMatch(globParts[i], globParts[j], !this.preserveMultipleSlashes);\n            if (!matched) continue;\n            globParts[i] = matched;\n            globParts[j] = [];\n        }\n        return globParts.filter((gs)=>gs.length);\n    }\n    partsMatch(a, b, emptyGSMatch = false) {\n        let ai = 0;\n        let bi = 0;\n        let result = [];\n        let which = \"\";\n        while(ai < a.length && bi < b.length){\n            if (a[ai] === b[bi]) {\n                result.push(which === \"b\" ? b[bi] : a[ai]);\n                ai++;\n                bi++;\n            } else if (emptyGSMatch && a[ai] === \"**\" && b[bi] === a[ai + 1]) {\n                result.push(a[ai]);\n                ai++;\n            } else if (emptyGSMatch && b[bi] === \"**\" && a[ai] === b[bi + 1]) {\n                result.push(b[bi]);\n                bi++;\n            } else if (a[ai] === \"*\" && b[bi] && (this.options.dot || !b[bi].startsWith(\".\")) && b[bi] !== \"**\") {\n                if (which === \"b\") return false;\n                which = \"a\";\n                result.push(a[ai]);\n                ai++;\n                bi++;\n            } else if (b[bi] === \"*\" && a[ai] && (this.options.dot || !a[ai].startsWith(\".\")) && a[ai] !== \"**\") {\n                if (which === \"a\") return false;\n                which = \"b\";\n                result.push(b[bi]);\n                ai++;\n                bi++;\n            } else return false;\n        }\n        // if we fall out of the loop, it means they two are identical\n        // as long as their lengths match\n        return a.length === b.length && result;\n    }\n    parseNegate() {\n        if (this.nonegate) return;\n        const pattern = this.pattern;\n        let negate = false;\n        let negateOffset = 0;\n        for(let i = 0; i < pattern.length && pattern.charAt(i) === \"!\"; i++){\n            negate = !negate;\n            negateOffset++;\n        }\n        if (negateOffset) this.pattern = pattern.slice(negateOffset);\n        this.negate = negate;\n    }\n    // set partial to true to test if, for example,\n    // \"/a/b\" matches the start of \"/*/b/*/d\"\n    // Partial means, if you run out of file before you run\n    // out of pattern, then that's fine, as long as all\n    // the parts match.\n    matchOne(file, pattern, partial = false) {\n        const options = this.options;\n        // UNC paths like //?/X:/... can match X:/... and vice versa\n        // Drive letters in absolute drive or unc paths are always compared\n        // case-insensitively.\n        if (this.isWindows) {\n            const fileDrive = typeof file[0] === \"string\" && /^[a-z]:$/i.test(file[0]);\n            const fileUNC = !fileDrive && file[0] === \"\" && file[1] === \"\" && file[2] === \"?\" && /^[a-z]:$/i.test(file[3]);\n            const patternDrive = typeof pattern[0] === \"string\" && /^[a-z]:$/i.test(pattern[0]);\n            const patternUNC = !patternDrive && pattern[0] === \"\" && pattern[1] === \"\" && pattern[2] === \"?\" && typeof pattern[3] === \"string\" && /^[a-z]:$/i.test(pattern[3]);\n            const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined;\n            const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined;\n            if (typeof fdi === \"number\" && typeof pdi === \"number\") {\n                const [fd, pd] = [\n                    file[fdi],\n                    pattern[pdi]\n                ];\n                if (fd.toLowerCase() === pd.toLowerCase()) {\n                    pattern[pdi] = fd;\n                    if (pdi > fdi) pattern = pattern.slice(pdi);\n                    else if (fdi > pdi) file = file.slice(fdi);\n                }\n            }\n        }\n        // resolve and reduce . and .. portions in the file as well.\n        // dont' need to do the second phase, because it's only one string[]\n        const { optimizationLevel: optimizationLevel = 1 } = this.options;\n        if (optimizationLevel >= 2) file = this.levelTwoFileOptimize(file);\n        this.debug(\"matchOne\", this, {\n            file: file,\n            pattern: pattern\n        });\n        this.debug(\"matchOne\", file.length, pattern.length);\n        for(var fi = 0, pi = 0, fl = file.length, pl = pattern.length; fi < fl && pi < pl; fi++, pi++){\n            this.debug(\"matchOne loop\");\n            var p = pattern[pi];\n            var f = file[fi];\n            this.debug(pattern, p, f);\n            // should be impossible.\n            // some invalid regexp stuff in the set.\n            /* c8 ignore start */ if (p === false) return false;\n            /* c8 ignore stop */ if (p === $5ad63134f2f5e985$export$6c01ffe652e570ac) {\n                this.debug(\"GLOBSTAR\", [\n                    pattern,\n                    p,\n                    f\n                ]);\n                // \"**\"\n                // a/**/b/**/c would match the following:\n                // a/b/x/y/z/c\n                // a/x/y/z/b/c\n                // a/b/x/b/x/c\n                // a/b/c\n                // To do this, take the rest of the pattern after\n                // the **, and see if it would match the file remainder.\n                // If so, return success.\n                // If not, the ** \"swallows\" a segment, and try again.\n                // This is recursively awful.\n                //\n                // a/**/b/**/c matching a/b/x/y/z/c\n                // - a matches a\n                // - doublestar\n                //   - matchOne(b/x/y/z/c, b/**/c)\n                //     - b matches b\n                //     - doublestar\n                //       - matchOne(x/y/z/c, c) -> no\n                //       - matchOne(y/z/c, c) -> no\n                //       - matchOne(z/c, c) -> no\n                //       - matchOne(c, c) yes, hit\n                var fr = fi;\n                var pr = pi + 1;\n                if (pr === pl) {\n                    this.debug(\"** at the end\");\n                    // a ** at the end will just swallow the rest.\n                    // We have found a match.\n                    // however, it will not swallow /.x, unless\n                    // options.dot is set.\n                    // . and .. are *never* matched by **, for explosively\n                    // exponential reasons.\n                    for(; fi < fl; fi++){\n                        if (file[fi] === \".\" || file[fi] === \"..\" || !options.dot && file[fi].charAt(0) === \".\") return false;\n                    }\n                    return true;\n                }\n                // ok, let's see if we can swallow whatever we can.\n                while(fr < fl){\n                    var swallowee = file[fr];\n                    this.debug(\"\\nglobstar while\", file, fr, pattern, pr, swallowee);\n                    // XXX remove this slice.  Just pass the start index.\n                    if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n                        this.debug(\"globstar found match!\", fr, fl, swallowee);\n                        // found a match.\n                        return true;\n                    } else {\n                        // can't swallow \".\" or \"..\" ever.\n                        // can only swallow \".foo\" when explicitly asked.\n                        if (swallowee === \".\" || swallowee === \"..\" || !options.dot && swallowee.charAt(0) === \".\") {\n                            this.debug(\"dot detected!\", file, fr, pattern, pr);\n                            break;\n                        }\n                        // ** swallows a segment, and continue.\n                        this.debug(\"globstar swallow a segment, and continue\");\n                        fr++;\n                    }\n                }\n                // no match was found.\n                // However, in partial mode, we can't say this is necessarily over.\n                /* c8 ignore start */ if (partial) {\n                    // ran out of file\n                    this.debug(\"\\n>>> no match, partial?\", file, fr, pattern, pr);\n                    if (fr === fl) return true;\n                }\n                /* c8 ignore stop */ return false;\n            }\n            // something other than **\n            // non-magic patterns just have to match exactly\n            // patterns with magic have been turned into regexps.\n            let hit;\n            if (typeof p === \"string\") {\n                hit = f === p;\n                this.debug(\"string match\", p, f, hit);\n            } else {\n                hit = p.test(f);\n                this.debug(\"pattern match\", p, f, hit);\n            }\n            if (!hit) return false;\n        }\n        // Note: ending in / means that we'll get a final \"\"\n        // at the end of the pattern.  This can only match a\n        // corresponding \"\" at the end of the file.\n        // If the file ends in /, then it can only match a\n        // a pattern that ends in /, unless the pattern just\n        // doesn't have any more for it. But, a/b/ should *not*\n        // match \"a/b/*\", even though \"\" matches against the\n        // [^/]*? pattern, except in partial mode, where it might\n        // simply not be reached yet.\n        // However, a/b/ should still satisfy a/*\n        // now either we fell off the end of the pattern, or we're done.\n        if (fi === fl && pi === pl) // ran out of pattern and filename at the same time.\n        // an exact hit!\n        return true;\n        else if (fi === fl) // ran out of file, but still had pattern left.\n        // this is ok if we're doing the match as part of\n        // a glob fs traversal.\n        return partial;\n        else if (pi === pl) // ran out of pattern, still have file left.\n        // this is only acceptable if we're on the very last\n        // empty segment of a file with a trailing slash.\n        // a/* should match a/b/\n        return fi === fl - 1 && file[fi] === \"\";\n        else // should be unreachable.\n        throw new Error(\"wtf?\");\n    /* c8 ignore stop */ }\n    braceExpand() {\n        return $5ad63134f2f5e985$export$3dcea0790d30fa81(this.pattern, this.options);\n    }\n    parse(pattern) {\n        (0, $5e7996718b7e3ba8$export$fd15c38a89c33022)(pattern);\n        const options = this.options;\n        // shortcuts\n        if (pattern === \"**\") return $5ad63134f2f5e985$export$6c01ffe652e570ac;\n        if (pattern === \"\") return \"\";\n        // far and away, the most common glob pattern parts are\n        // *, *.*, and *.<ext>  Add a fast check method for those.\n        let m;\n        let fastTest = null;\n        if (m = pattern.match($5ad63134f2f5e985$var$starRE)) fastTest = options.dot ? $5ad63134f2f5e985$var$starTestDot : $5ad63134f2f5e985$var$starTest;\n        else if (m = pattern.match($5ad63134f2f5e985$var$starDotExtRE)) fastTest = (options.nocase ? options.dot ? $5ad63134f2f5e985$var$starDotExtTestNocaseDot : $5ad63134f2f5e985$var$starDotExtTestNocase : options.dot ? $5ad63134f2f5e985$var$starDotExtTestDot : $5ad63134f2f5e985$var$starDotExtTest)(m[1]);\n        else if (m = pattern.match($5ad63134f2f5e985$var$qmarksRE)) fastTest = (options.nocase ? options.dot ? $5ad63134f2f5e985$var$qmarksTestNocaseDot : $5ad63134f2f5e985$var$qmarksTestNocase : options.dot ? $5ad63134f2f5e985$var$qmarksTestDot : $5ad63134f2f5e985$var$qmarksTest)(m);\n        else if (m = pattern.match($5ad63134f2f5e985$var$starDotStarRE)) fastTest = options.dot ? $5ad63134f2f5e985$var$starDotStarTestDot : $5ad63134f2f5e985$var$starDotStarTest;\n        else if (m = pattern.match($5ad63134f2f5e985$var$dotStarRE)) fastTest = $5ad63134f2f5e985$var$dotStarTest;\n        const re = (0, $c9bb26969dd669b7$export$f65a2bad84928952).fromGlob(pattern, this.options).toMMPattern();\n        return fastTest ? Object.assign(re, {\n            test: fastTest\n        }) : re;\n    }\n    makeRe() {\n        if (this.regexp || this.regexp === false) return this.regexp;\n        // at this point, this.set is a 2d array of partial\n        // pattern strings, or \"**\".\n        //\n        // It's better to use .match().  This function shouldn't\n        // be used, really, but it's pretty convenient sometimes,\n        // when you just want to work with a regex.\n        const set = this.set;\n        if (!set.length) {\n            this.regexp = false;\n            return this.regexp;\n        }\n        const options = this.options;\n        const twoStar = options.noglobstar ? $5ad63134f2f5e985$var$star : options.dot ? $5ad63134f2f5e985$var$twoStarDot : $5ad63134f2f5e985$var$twoStarNoDot;\n        const flags = new Set(options.nocase ? [\n            \"i\"\n        ] : []);\n        // regexpify non-globstar patterns\n        // if ** is only item, then we just do one twoStar\n        // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n        // if ** is last, append (\\/twoStar|) to previous\n        // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n        // then filter out GLOBSTAR symbols\n        let re = set.map((pattern)=>{\n            const pp = pattern.map((p)=>{\n                if (p instanceof RegExp) for (const f of p.flags.split(\"\"))flags.add(f);\n                return typeof p === \"string\" ? $5ad63134f2f5e985$var$regExpEscape(p) : p === $5ad63134f2f5e985$export$6c01ffe652e570ac ? $5ad63134f2f5e985$export$6c01ffe652e570ac : p._src;\n            });\n            pp.forEach((p, i)=>{\n                const next = pp[i + 1];\n                const prev = pp[i - 1];\n                if (p !== $5ad63134f2f5e985$export$6c01ffe652e570ac || prev === $5ad63134f2f5e985$export$6c01ffe652e570ac) return;\n                if (prev === undefined) {\n                    if (next !== undefined && next !== $5ad63134f2f5e985$export$6c01ffe652e570ac) pp[i + 1] = \"(?:\\\\/|\" + twoStar + \"\\\\/)?\" + next;\n                    else pp[i] = twoStar;\n                } else if (next === undefined) pp[i - 1] = prev + \"(?:\\\\/|\" + twoStar + \")?\";\n                else if (next !== $5ad63134f2f5e985$export$6c01ffe652e570ac) {\n                    pp[i - 1] = prev + \"(?:\\\\/|\\\\/\" + twoStar + \"\\\\/)\" + next;\n                    pp[i + 1] = $5ad63134f2f5e985$export$6c01ffe652e570ac;\n                }\n            });\n            return pp.filter((p)=>p !== $5ad63134f2f5e985$export$6c01ffe652e570ac).join(\"/\");\n        }).join(\"|\");\n        // need to wrap in parens if we had more than one thing with |,\n        // otherwise only the first will be anchored to ^ and the last to $\n        const [open, close] = set.length > 1 ? [\n            \"(?:\",\n            \")\"\n        ] : [\n            \"\",\n            \"\"\n        ];\n        // must match entire pattern\n        // ending in a * or ** will make it less strict.\n        re = \"^\" + open + re + close + \"$\";\n        // can match anything, as long as it's not this.\n        if (this.negate) re = \"^(?!\" + re + \").+$\";\n        try {\n            this.regexp = new RegExp(re, [\n                ...flags\n            ].join(\"\"));\n        /* c8 ignore start */ } catch (ex) {\n            // should be impossible\n            this.regexp = false;\n        }\n        /* c8 ignore stop */ return this.regexp;\n    }\n    slashSplit(p) {\n        // if p starts with // on windows, we preserve that\n        // so that UNC paths aren't broken.  Otherwise, any number of\n        // / characters are coalesced into one, unless\n        // preserveMultipleSlashes is set to true.\n        if (this.preserveMultipleSlashes) return p.split(\"/\");\n        else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) // add an extra '' for the one we lose\n        return [\n            \"\",\n            ...p.split(/\\/+/)\n        ];\n        else return p.split(/\\/+/);\n    }\n    match(f, partial = this.partial) {\n        this.debug(\"match\", f, this.pattern);\n        // short-circuit in the case of busted things.\n        // comments, etc.\n        if (this.comment) return false;\n        if (this.empty) return f === \"\";\n        if (f === \"/\" && partial) return true;\n        const options = this.options;\n        // windows: need to use /, not \\\n        if (this.isWindows) f = f.split(\"\\\\\").join(\"/\");\n        // treat the test path as a set of pathparts.\n        const ff = this.slashSplit(f);\n        this.debug(this.pattern, \"split\", ff);\n        // just ONE of the pattern sets in this.set needs to match\n        // in order for it to be valid.  If negating, then just one\n        // match means that we have failed.\n        // Either way, return on the first hit.\n        const set = this.set;\n        this.debug(this.pattern, \"set\", set);\n        // Find the basename of the path by looking for the last non-empty segment\n        let filename = ff[ff.length - 1];\n        if (!filename) for(let i = ff.length - 2; !filename && i >= 0; i--)filename = ff[i];\n        for(let i = 0; i < set.length; i++){\n            const pattern = set[i];\n            let file = ff;\n            if (options.matchBase && pattern.length === 1) file = [\n                filename\n            ];\n            const hit = this.matchOne(file, pattern, partial);\n            if (hit) {\n                if (options.flipNegate) return true;\n                return !this.negate;\n            }\n        }\n        // didn't get any hits.  this is success if it's a negative\n        // pattern, failure otherwise.\n        if (options.flipNegate) return false;\n        return this.negate;\n    }\n    static defaults(def) {\n        return $5ad63134f2f5e985$export$262af1bf5171b3a1.defaults(def).Minimatch;\n    }\n}\n/* c8 ignore stop */ $5ad63134f2f5e985$export$262af1bf5171b3a1.AST = (0, $c9bb26969dd669b7$export$f65a2bad84928952);\n$5ad63134f2f5e985$export$262af1bf5171b3a1.Minimatch = $5ad63134f2f5e985$export$cdceb28afdae3ea9;\n$5ad63134f2f5e985$export$262af1bf5171b3a1.escape = (0, $53d187a9a62bfc70$export$4e7f196112fea3c5);\n$5ad63134f2f5e985$export$262af1bf5171b3a1.unescape = (0, $4ffc8d515e45a860$export$e8bacd2802a88316);\n\n\n/**\n * Router class for managing client-side navigation in a Single Page Application (SPA).\n * This class enables the creation of a simple client-side router to handle navigation within an SPA,\n * allowing developers to define routes and associated actions.\n *\n * ## Usage:\n * 1. Import the router in your project:\n *    ```javascript\n *    import router from './path/to/Router';\n *    ```\n * 2. Define routes by using the `addRoute` method:\n *    ```javascript\n *    router.addRoute('/', 'home-component', () => {\n *      // Function to execute when navigating to the root path\n *      console.log('Navigated to the root path');\n *    }, () => {\n *      // Function to execute when navigating away from the root path\n *      console.log('Navigated away from the root path');\n *    });\n *    ```\n * 3. Integrate with an `<route-link>` tag using the `href` attribute:\n *    ```html\n *    <route-link href=\"/\">Home</route-link>\n *    <route-link href=\"/about\">About</route-link>\n *    ```\n *    Clicking on these links will trigger the router to navigate to the specified paths.\n * 4. Define a route outlet where the component associated with the route will be rendered :\n *    ```html\n *    <route-outlet></route-outlet>\n *    ``\n * @class\n */ class $ee5e9ca62ce1cc5e$var$Router extends EventTarget {\n    /**\n   * The fallback route to be used in case no matching route is found.\n   * @private\n   * @type {string|null}\n   */ #defaultPath = null;\n    /**\n   * The currently active route.\n   * @private\n   * @type {{ path: Minimatch, start: function, destroy: function }|null}\n   */ #currentRoute = null;\n    /**\n   * The query parameters associated with the current route.\n   * @private\n   * @type {object}\n   */ #currentQueryParams = {};\n    /**\n   * An array containing registered route objects with their patterns and associated actions.\n   * @private\n   * @type {Array<{ path: Minimatch, start: function, destroy: function }>}\n   */ #routes = [];\n    constructor(){\n        super();\n        // Event listener for the popstate event\n        window.addEventListener(\"popstate\", ()=>{\n            const entries = new URL(window.location.href).searchParams.entries();\n            const queryParams = Object.fromEntries(entries);\n            this.#handleRouteChange(window.location.pathname, queryParams, true);\n        });\n    }\n    /**\n   * Adds a route to the router.\n   *\n   * @param {string} pattern - The path of the route, can be a glob pattern.\n   * @param {string} component - The component to be rendered when the route is navigated to.\n   * @param {function} start - The function to be called when the route is navigated to.\n   * @param {function} destroy - The function to be called when the route is navigated away from.\n   */ addRoute(pattern, component = null, start = ()=>{}, destroy = ()=>{}) {\n        const path = new (0, $5ad63134f2f5e985$export$cdceb28afdae3ea9)(pattern, {\n            matchBase: true\n        });\n        this.#routes.push({\n            path: path,\n            start: start,\n            component: component,\n            destroy: destroy\n        });\n    }\n    /**\n   * Checks if the given path is the current active route.\n   *\n   * @param {string} path - The path to check.\n   * @returns {boolean} - True if the given path is the current active route, false otherwise.\n   */ isActiveRoute(path) {\n        return this.#currentRoute && this.#currentRoute.path === this.findRoute(path)?.path;\n    }\n    /**\n   * Finds a route based on the given path.\n   *\n   * @param {string} path - The path to find the route for.\n   * @returns {object} - The route object if found, otherwise undefined.\n   */ findRoute(path) {\n        return this.#routes.find((r)=>r.path.match(path));\n    }\n    /**\n   * Navigates to the specified path.\n   *\n   * @param {string} path - The path to navigate to.\n   * @param {object} [queryParams={}] - (Optional) query parameters to be associated with the route.\n   */ navigateTo(path, queryParams = {}) {\n        const url = new URL(window.location.href);\n        const normalizedPath = \"/\" + path.trim().replace(/^\\/+/, \"\");\n        url.pathname = normalizedPath.startsWith(this.base) ? normalizedPath : this.base + normalizedPath;\n        url.search = new URLSearchParams(queryParams).toString();\n        window.history.pushState({}, \"\", url.href);\n        this.#handleRouteChange(path, queryParams);\n    }\n    /**\n   * Updates the state by navigating to the current path with the provided query parameters.\n   *\n   * @param {Object} queryParams - The new query parameters to be merged with the current ones.\n   */ updateState(queryParams, keysToRemove = []) {\n        const filteredParams = Object.fromEntries(Object.entries(this.#currentQueryParams).filter(([key])=>!keysToRemove.includes(key)));\n        this.navigateTo(window.location.pathname, {\n            ...filteredParams,\n            ...queryParams\n        });\n    }\n    /**\n   * Replaces the current state by navigating to the current path with the provided query parameters,\n   * discarding the current query parameters.\n   *\n   * @param {Object} newParams - The new query parameters to replace the current ones.\n   */ replaceState(newParams) {\n        this.navigateTo(window.location.pathname, newParams);\n    }\n    /**\n   * Handles a change in the route.\n   *\n   * @private\n   * @param {string} path - The path of the new route.\n   * @param {object} [queryParams={}] - (Optional) The query parameters associated with the route.\n   * @param {boolean} [popstate=false] - (Optional) if a popstate is at the origin of this route change.\n   */ #handleRouteChange(path, queryParams = {}, popstate = false) {\n        if (this.isActiveRoute(path)) {\n            if (!this.#matchCurrentParams(queryParams)) {\n                this.#currentQueryParams = queryParams;\n                this.dispatchEvent(new CustomEvent(\"queryparams\", {\n                    detail: {\n                        route: this.#currentRoute,\n                        popstate: popstate,\n                        queryParams: queryParams\n                    }\n                }));\n            }\n            return;\n        }\n        const route = this.findRoute(path);\n        if (route) this.#updateCurrentRoute(route, queryParams, popstate);\n        else if (this.#defaultPath) this.#handleRouteChange(this.#defaultPath, queryParams, popstate);\n        else throw Error(`No route found for '${path}'`);\n    }\n    /**\n   * Checks if the given query parameters match the current query parameters.\n   *\n   * @private\n   * @param {object} params - The query parameters to compare.\n   * @returns {boolean} - True if the given parameters match the current query parameters, false otherwise.\n   */ #matchCurrentParams(params) {\n        const paramsKeys = Object.keys(params);\n        if (paramsKeys.length !== Object.keys(this.#currentQueryParams).length) return false;\n        return paramsKeys.every((k)=>this.#currentQueryParams[k] === params[k]);\n    }\n    /**\n   * Updates the current route and dispatches the 'routechanged' event.\n   *\n   * @private\n   * @param {object} route - The route object.\n   * @param {object} queryParams - The query parameters associated with the route.\n   * @param {boolean} [popstate=false] - (Optional) if a popstate is at the origin of this route change.\n   */ #updateCurrentRoute(route, queryParams, popstate = false) {\n        this.#currentRoute?.destroy();\n        this.#currentRoute = route;\n        this.#currentQueryParams = queryParams;\n        route.start(queryParams);\n        this.dispatchEvent(new CustomEvent(\"routechanged\", {\n            detail: {\n                route: route,\n                popstate: popstate,\n                queryParams: queryParams\n            }\n        }));\n    }\n    /**\n   * Initiates the router based on the current window location.\n   *\n   * @param defaultPath - The fallback path when no path is found during route resolving.\n   */ start({ defaultPath: defaultPath }) {\n        const url = new URL(window.location.href);\n        const path = url.pathname;\n        const queryParams = Object.fromEntries(url.searchParams.entries());\n        this.#defaultPath = defaultPath;\n        this.base = this.findRoute(path) ? path.replace(/\\/[^/]+\\/?$/, \"/\") : path;\n        this.base = this.base.replace(/\\/+$/, \"\");\n        this.#handleRouteChange(path, queryParams);\n    }\n    get queryParams() {\n        return this.#currentQueryParams;\n    }\n    get currentRoute() {\n        return this.#currentRoute;\n    }\n}\nvar // Export a singleton instance of the router\n$ee5e9ca62ce1cc5e$export$2e2bcd8739ae039 = new $ee5e9ca62ce1cc5e$var$Router();\n\n\nconst $54e2f009849dffbd$var$dialog = document.getElementById(\"pbw-dialog\");\n// Pauses de video once the modal is closed.\n$54e2f009849dffbd$var$dialog.addEventListener(\"close\", ()=>{\n    document.documentElement.style.overflowY = \"scroll\";\n    (0, $a61db921cb412e6c$export$64a35e4be81ccfc0)();\n    (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).updateState({}, [\n        \"src\",\n        \"type\",\n        \"vendor\",\n        \"certificateUrl\",\n        \"licenseUrl\"\n    ]);\n});\n// Close the dialog on close button clicked\n$54e2f009849dffbd$var$dialog.querySelector(\"#pbw-dialog-close-btn\").addEventListener(\"click\", ()=>{\n    $54e2f009849dffbd$var$dialog.close();\n});\n$54e2f009849dffbd$var$dialog.addEventListener(\"animationend\", ()=>{\n    $54e2f009849dffbd$var$dialog.classList.toggle(\"slide-up-fade-in\", false);\n});\n// Close the dialog when the backdrop is clicked\n$54e2f009849dffbd$var$dialog.addEventListener(\"click\", (e)=>{\n    if ($54e2f009849dffbd$var$dialog !== e.target) return;\n    $54e2f009849dffbd$var$dialog.close();\n});\nconst $54e2f009849dffbd$var$toParams = (keySystems)=>{\n    const vendor = Object.keys(keySystems ?? {})[0];\n    if (!vendor) return {};\n    return {\n        vendor: vendor,\n        ...keySystems[vendor]\n    };\n};\nconst $54e2f009849dffbd$export$3c8d206a213df2ed = ({ src: src, type: type, keySystems: keySystems })=>{\n    const player = (0, $a61db921cb412e6c$export$11ae10a4ef8c3aa4)();\n    document.documentElement.style.overflowY = \"hidden\";\n    player.src({\n        src: src,\n        type: type,\n        keySystems: keySystems\n    });\n    (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).updateState({\n        src: src,\n        type: type,\n        ...$54e2f009849dffbd$var$toParams(keySystems)\n    });\n    $54e2f009849dffbd$var$dialog.showModal();\n    $54e2f009849dffbd$var$dialog.classList.toggle(\"slide-up-fade-in\", true);\n};\nconst $54e2f009849dffbd$export$7b3648a3edd9643f = ({ src: src, type: type, keySystems: keySystems })=>{\n    return new URLSearchParams({\n        src: src,\n        type: type,\n        ...$54e2f009849dffbd$var$toParams(keySystems)\n    }).toString();\n};\nconst $54e2f009849dffbd$var$toKeySystem = (params)=>{\n    if (!params.vendor) return undefined;\n    const keySystem = {};\n    const { certificateUrl: certificateUrl, licenseUrl: licenseUrl } = params;\n    keySystem[params.vendor] = {\n        certificateUrl: certificateUrl,\n        licenseUrl: licenseUrl\n    };\n    return keySystem;\n};\nconst $54e2f009849dffbd$var$loadPlayerFromRouter = (e)=>{\n    const params = e.detail.queryParams;\n    if (\"src\" in params) {\n        const { src: src, type: type } = params;\n        const keySystems = $54e2f009849dffbd$var$toKeySystem(params);\n        $54e2f009849dffbd$export$3c8d206a213df2ed({\n            src: src,\n            type: type,\n            keySystems: keySystems\n        });\n    }\n};\n(0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).addEventListener(\"routechanged\", $54e2f009849dffbd$var$loadPlayerFromRouter);\n(0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).addEventListener(\"queryparams\", $54e2f009849dffbd$var$loadPlayerFromRouter);\n\n\nvar $1914347b4edf3c73$exports = {};\n$1914347b4edf3c73$exports = \"<svg class=\\\"github-icon\\\" width=\\\"30\\\" height=\\\"30\\\" viewBox=\\\"0 0 16 16\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z\\\"/></svg>\";\n\n\nvar $b0c6b7520e7d4b94$exports = {};\n$b0c6b7520e7d4b94$exports = new URL(\"srgssr-logo.45edb509.png\", import.meta.url).toString();\n\n\n\nvar $4OnIV = parcelRequire(\"4OnIV\");\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ const $3233927aa82734f9$var$t = globalThis, $3233927aa82734f9$export$b4d10f6001c083c2 = $3233927aa82734f9$var$t.ShadowRoot && (void 0 === $3233927aa82734f9$var$t.ShadyCSS || $3233927aa82734f9$var$t.ShadyCSS.nativeShadow) && \"adoptedStyleSheets\" in Document.prototype && \"replace\" in CSSStyleSheet.prototype, $3233927aa82734f9$var$s = Symbol(), $3233927aa82734f9$var$o = new WeakMap;\nclass $3233927aa82734f9$export$505d1e8739bad805 {\n    constructor(t, e, o){\n        if (this._$cssResult$ = !0, o !== $3233927aa82734f9$var$s) throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");\n        this.cssText = t, this.t = e;\n    }\n    get styleSheet() {\n        let t = this.o;\n        const s = this.t;\n        if ($3233927aa82734f9$export$b4d10f6001c083c2 && void 0 === t) {\n            const e = void 0 !== s && 1 === s.length;\n            e && (t = $3233927aa82734f9$var$o.get(s)), void 0 === t && ((this.o = t = new CSSStyleSheet).replaceSync(this.cssText), e && $3233927aa82734f9$var$o.set(s, t));\n        }\n        return t;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\nconst $3233927aa82734f9$export$8d80f9cac07cdb3 = (t)=>new $3233927aa82734f9$export$505d1e8739bad805(\"string\" == typeof t ? t : t + \"\", void 0, $3233927aa82734f9$var$s), $3233927aa82734f9$export$dbf350e5966cf602 = (t, ...e)=>{\n    const o = 1 === t.length ? t[0] : e.reduce((e, s, o)=>e + ((t)=>{\n            if (!0 === t._$cssResult$) return t.cssText;\n            if (\"number\" == typeof t) return t;\n            throw Error(\"Value passed to 'css' function must be a 'css' function result: \" + t + \". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\");\n        })(s) + t[o + 1], t[0]);\n    return new $3233927aa82734f9$export$505d1e8739bad805(o, t, $3233927aa82734f9$var$s);\n}, $3233927aa82734f9$export$2ca4a66ec4cecb90 = (s, o)=>{\n    if ($3233927aa82734f9$export$b4d10f6001c083c2) s.adoptedStyleSheets = o.map((t)=>t instanceof CSSStyleSheet ? t : t.styleSheet);\n    else for (const e of o){\n        const o = document.createElement(\"style\"), n = $3233927aa82734f9$var$t.litNonce;\n        void 0 !== n && o.setAttribute(\"nonce\", n), o.textContent = e.cssText, s.appendChild(o);\n    }\n}, $3233927aa82734f9$export$ee69dfd951e24778 = $3233927aa82734f9$export$b4d10f6001c083c2 ? (t)=>t : (t)=>t instanceof CSSStyleSheet ? ((t)=>{\n        let e = \"\";\n        for (const s of t.cssRules)e += s.cssText;\n        return $3233927aa82734f9$export$8d80f9cac07cdb3(e);\n    })(t) : t;\n\n\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ const { is: $27fcf98b67c2a783$var$i, defineProperty: $27fcf98b67c2a783$var$e, getOwnPropertyDescriptor: $27fcf98b67c2a783$var$r, getOwnPropertyNames: $27fcf98b67c2a783$var$h, getOwnPropertySymbols: $27fcf98b67c2a783$var$o, getPrototypeOf: $27fcf98b67c2a783$var$n } = Object, $27fcf98b67c2a783$var$a = globalThis, $27fcf98b67c2a783$var$c = $27fcf98b67c2a783$var$a.trustedTypes, $27fcf98b67c2a783$var$l = $27fcf98b67c2a783$var$c ? $27fcf98b67c2a783$var$c.emptyScript : \"\", $27fcf98b67c2a783$var$p = $27fcf98b67c2a783$var$a.reactiveElementPolyfillSupport, $27fcf98b67c2a783$var$d = (t, s)=>t, $27fcf98b67c2a783$export$7312b35fbf521afb = {\n    toAttribute (t, s) {\n        switch(s){\n            case Boolean:\n                t = t ? $27fcf98b67c2a783$var$l : null;\n                break;\n            case Object:\n            case Array:\n                t = null == t ? t : JSON.stringify(t);\n        }\n        return t;\n    },\n    fromAttribute (t, s) {\n        let i = t;\n        switch(s){\n            case Boolean:\n                i = null !== t;\n                break;\n            case Number:\n                i = null === t ? null : Number(t);\n                break;\n            case Object:\n            case Array:\n                try {\n                    i = JSON.parse(t);\n                } catch (t) {\n                    i = null;\n                }\n        }\n        return i;\n    }\n}, $27fcf98b67c2a783$export$53a6892c50694894 = (t, s)=>!$27fcf98b67c2a783$var$i(t, s), $27fcf98b67c2a783$var$y = {\n    attribute: !0,\n    type: String,\n    converter: $27fcf98b67c2a783$export$7312b35fbf521afb,\n    reflect: !1,\n    hasChanged: $27fcf98b67c2a783$export$53a6892c50694894\n};\nSymbol.metadata ??= Symbol(\"metadata\"), $27fcf98b67c2a783$var$a.litPropertyMetadata ??= new WeakMap;\nclass $27fcf98b67c2a783$export$c7c07a37856565d extends HTMLElement {\n    static addInitializer(t) {\n        this._$Ei(), (this.l ??= []).push(t);\n    }\n    static get observedAttributes() {\n        return this.finalize(), this._$Eh && [\n            ...this._$Eh.keys()\n        ];\n    }\n    static createProperty(t, s = $27fcf98b67c2a783$var$y) {\n        if (s.state && (s.attribute = !1), this._$Ei(), this.elementProperties.set(t, s), !s.noAccessor) {\n            const i = Symbol(), r = this.getPropertyDescriptor(t, i, s);\n            void 0 !== r && $27fcf98b67c2a783$var$e(this.prototype, t, r);\n        }\n    }\n    static getPropertyDescriptor(t, s, i) {\n        const { get: e, set: h } = $27fcf98b67c2a783$var$r(this.prototype, t) ?? {\n            get () {\n                return this[s];\n            },\n            set (t) {\n                this[s] = t;\n            }\n        };\n        return {\n            get () {\n                return e?.call(this);\n            },\n            set (s) {\n                const r = e?.call(this);\n                h.call(this, s), this.requestUpdate(t, r, i);\n            },\n            configurable: !0,\n            enumerable: !0\n        };\n    }\n    static getPropertyOptions(t) {\n        return this.elementProperties.get(t) ?? $27fcf98b67c2a783$var$y;\n    }\n    static _$Ei() {\n        if (this.hasOwnProperty($27fcf98b67c2a783$var$d(\"elementProperties\"))) return;\n        const t = $27fcf98b67c2a783$var$n(this);\n        t.finalize(), void 0 !== t.l && (this.l = [\n            ...t.l\n        ]), this.elementProperties = new Map(t.elementProperties);\n    }\n    static finalize() {\n        if (this.hasOwnProperty($27fcf98b67c2a783$var$d(\"finalized\"))) return;\n        if (this.finalized = !0, this._$Ei(), this.hasOwnProperty($27fcf98b67c2a783$var$d(\"properties\"))) {\n            const t = this.properties, s = [\n                ...$27fcf98b67c2a783$var$h(t),\n                ...$27fcf98b67c2a783$var$o(t)\n            ];\n            for (const i of s)this.createProperty(i, t[i]);\n        }\n        const t = this[Symbol.metadata];\n        if (null !== t) {\n            const s = litPropertyMetadata.get(t);\n            if (void 0 !== s) for (const [t, i] of s)this.elementProperties.set(t, i);\n        }\n        this._$Eh = new Map;\n        for (const [t, s] of this.elementProperties){\n            const i = this._$Eu(t, s);\n            void 0 !== i && this._$Eh.set(i, t);\n        }\n        this.elementStyles = this.finalizeStyles(this.styles);\n    }\n    static finalizeStyles(s) {\n        const i = [];\n        if (Array.isArray(s)) {\n            const e = new Set(s.flat(1 / 0).reverse());\n            for (const s of e)i.unshift((0, $3233927aa82734f9$export$ee69dfd951e24778)(s));\n        } else void 0 !== s && i.push((0, $3233927aa82734f9$export$ee69dfd951e24778)(s));\n        return i;\n    }\n    static _$Eu(t, s) {\n        const i = s.attribute;\n        return !1 === i ? void 0 : \"string\" == typeof i ? i : \"string\" == typeof t ? t.toLowerCase() : void 0;\n    }\n    constructor(){\n        super(), this._$Ep = void 0, this.isUpdatePending = !1, this.hasUpdated = !1, this._$Em = null, this._$Ev();\n    }\n    _$Ev() {\n        this._$Eg = new Promise((t)=>this.enableUpdating = t), this._$AL = new Map, this._$ES(), this.requestUpdate(), this.constructor.l?.forEach((t)=>t(this));\n    }\n    addController(t) {\n        (this._$E_ ??= new Set).add(t), void 0 !== this.renderRoot && this.isConnected && t.hostConnected?.();\n    }\n    removeController(t) {\n        this._$E_?.delete(t);\n    }\n    _$ES() {\n        const t = new Map, s = this.constructor.elementProperties;\n        for (const i of s.keys())this.hasOwnProperty(i) && (t.set(i, this[i]), delete this[i]);\n        t.size > 0 && (this._$Ep = t);\n    }\n    createRenderRoot() {\n        const t = this.shadowRoot ?? this.attachShadow(this.constructor.shadowRootOptions);\n        return (0, $3233927aa82734f9$export$2ca4a66ec4cecb90)(t, this.constructor.elementStyles), t;\n    }\n    connectedCallback() {\n        this.renderRoot ??= this.createRenderRoot(), this.enableUpdating(!0), this._$E_?.forEach((t)=>t.hostConnected?.());\n    }\n    enableUpdating(t) {}\n    disconnectedCallback() {\n        this._$E_?.forEach((t)=>t.hostDisconnected?.());\n    }\n    attributeChangedCallback(t, s, i) {\n        this._$AK(t, i);\n    }\n    _$EO(t, s) {\n        const i = this.constructor.elementProperties.get(t), e = this.constructor._$Eu(t, i);\n        if (void 0 !== e && !0 === i.reflect) {\n            const r = (void 0 !== i.converter?.toAttribute ? i.converter : $27fcf98b67c2a783$export$7312b35fbf521afb).toAttribute(s, i.type);\n            this._$Em = t, null == r ? this.removeAttribute(e) : this.setAttribute(e, r), this._$Em = null;\n        }\n    }\n    _$AK(t, s) {\n        const i = this.constructor, e = i._$Eh.get(t);\n        if (void 0 !== e && this._$Em !== e) {\n            const t = i.getPropertyOptions(e), r = \"function\" == typeof t.converter ? {\n                fromAttribute: t.converter\n            } : void 0 !== t.converter?.fromAttribute ? t.converter : $27fcf98b67c2a783$export$7312b35fbf521afb;\n            this._$Em = e, this[e] = r.fromAttribute(s, t.type), this._$Em = null;\n        }\n    }\n    requestUpdate(t, s, i, e = !1, r) {\n        if (void 0 !== t) {\n            if (i ??= this.constructor.getPropertyOptions(t), !(i.hasChanged ?? $27fcf98b67c2a783$export$53a6892c50694894)(e ? r : this[t], s)) return;\n            this.C(t, s, i);\n        }\n        !1 === this.isUpdatePending && (this._$Eg = this._$EP());\n    }\n    C(t, s, i) {\n        this._$AL.has(t) || this._$AL.set(t, s), !0 === i.reflect && this._$Em !== t && (this._$Ej ??= new Set).add(t);\n    }\n    async _$EP() {\n        this.isUpdatePending = !0;\n        try {\n            await this._$Eg;\n        } catch (t) {\n            Promise.reject(t);\n        }\n        const t = this.scheduleUpdate();\n        return null != t && await t, !this.isUpdatePending;\n    }\n    scheduleUpdate() {\n        return this.performUpdate();\n    }\n    performUpdate() {\n        if (!this.isUpdatePending) return;\n        if (!this.hasUpdated) {\n            if (this.renderRoot ??= this.createRenderRoot(), this._$Ep) {\n                for (const [t, s] of this._$Ep)this[t] = s;\n                this._$Ep = void 0;\n            }\n            const t = this.constructor.elementProperties;\n            if (t.size > 0) for (const [s, i] of t)!0 !== i.wrapped || this._$AL.has(s) || void 0 === this[s] || this.C(s, this[s], i);\n        }\n        let t = !1;\n        const s = this._$AL;\n        try {\n            t = this.shouldUpdate(s), t ? (this.willUpdate(s), this._$E_?.forEach((t)=>t.hostUpdate?.()), this.update(s)) : this._$ET();\n        } catch (s) {\n            throw t = !1, this._$ET(), s;\n        }\n        t && this._$AE(s);\n    }\n    willUpdate(t) {}\n    _$AE(t) {\n        this._$E_?.forEach((t)=>t.hostUpdated?.()), this.hasUpdated || (this.hasUpdated = !0, this.firstUpdated(t)), this.updated(t);\n    }\n    _$ET() {\n        this._$AL = new Map, this.isUpdatePending = !1;\n    }\n    get updateComplete() {\n        return this.getUpdateComplete();\n    }\n    getUpdateComplete() {\n        return this._$Eg;\n    }\n    shouldUpdate(t) {\n        return !0;\n    }\n    update(t) {\n        this._$Ej &&= this._$Ej.forEach((t)=>this._$EO(t, this[t])), this._$ET();\n    }\n    updated(t) {}\n    firstUpdated(t) {}\n}\n$27fcf98b67c2a783$export$c7c07a37856565d.elementStyles = [], $27fcf98b67c2a783$export$c7c07a37856565d.shadowRootOptions = {\n    mode: \"open\"\n}, $27fcf98b67c2a783$export$c7c07a37856565d[$27fcf98b67c2a783$var$d(\"elementProperties\")] = new Map, $27fcf98b67c2a783$export$c7c07a37856565d[$27fcf98b67c2a783$var$d(\"finalized\")] = new Map, $27fcf98b67c2a783$var$p?.({\n    ReactiveElement: $27fcf98b67c2a783$export$c7c07a37856565d\n}), ($27fcf98b67c2a783$var$a.reactiveElementVersions ??= []).push(\"2.0.2\");\n\n\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ const $e5ed8027d647799b$var$t = globalThis, $e5ed8027d647799b$var$i = $e5ed8027d647799b$var$t.trustedTypes, $e5ed8027d647799b$var$s = $e5ed8027d647799b$var$i ? $e5ed8027d647799b$var$i.createPolicy(\"lit-html\", {\n    createHTML: (t)=>t\n}) : void 0, $e5ed8027d647799b$var$e = \"$lit$\", $e5ed8027d647799b$var$h = `lit$${(Math.random() + \"\").slice(9)}$`, $e5ed8027d647799b$var$o = \"?\" + $e5ed8027d647799b$var$h, $e5ed8027d647799b$var$n = `<${$e5ed8027d647799b$var$o}>`, $e5ed8027d647799b$var$r = document, $e5ed8027d647799b$var$l = ()=>$e5ed8027d647799b$var$r.createComment(\"\"), $e5ed8027d647799b$var$c = (t)=>null === t || \"object\" != typeof t && \"function\" != typeof t, $e5ed8027d647799b$var$a = Array.isArray, $e5ed8027d647799b$var$u = (t)=>$e5ed8027d647799b$var$a(t) || \"function\" == typeof t?.[Symbol.iterator], $e5ed8027d647799b$var$d = \"[ \t\\n\\f\\r]\", $e5ed8027d647799b$var$f = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g, $e5ed8027d647799b$var$v = /-->/g, $e5ed8027d647799b$var$_ = />/g, $e5ed8027d647799b$var$m = RegExp(`>|${$e5ed8027d647799b$var$d}(?:([^\\\\s\"'>=/]+)(${$e5ed8027d647799b$var$d}*=${$e5ed8027d647799b$var$d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`, \"g\"), $e5ed8027d647799b$var$p = /'/g, $e5ed8027d647799b$var$g = /\"/g, $e5ed8027d647799b$var$$ = /^(?:script|style|textarea|title)$/i, $e5ed8027d647799b$var$y = (t)=>(i, ...s)=>({\n            _$litType$: t,\n            strings: i,\n            values: s\n        }), $e5ed8027d647799b$export$c0bb0b647f701bb5 = $e5ed8027d647799b$var$y(1), $e5ed8027d647799b$export$7ed1367e7fa1ad68 = $e5ed8027d647799b$var$y(2), $e5ed8027d647799b$export$9c068ae9cc5db4e8 = Symbol.for(\"lit-noChange\"), $e5ed8027d647799b$export$45b790e32b2810ee = Symbol.for(\"lit-nothing\"), $e5ed8027d647799b$var$A = new WeakMap, $e5ed8027d647799b$var$E = $e5ed8027d647799b$var$r.createTreeWalker($e5ed8027d647799b$var$r, 129);\nfunction $e5ed8027d647799b$var$C(t, i) {\n    if (!Array.isArray(t) || !t.hasOwnProperty(\"raw\")) throw Error(\"invalid template strings array\");\n    return void 0 !== $e5ed8027d647799b$var$s ? $e5ed8027d647799b$var$s.createHTML(i) : i;\n}\nconst $e5ed8027d647799b$var$P = (t, i)=>{\n    const s = t.length - 1, o = [];\n    let r, l = 2 === i ? \"<svg>\" : \"\", c = $e5ed8027d647799b$var$f;\n    for(let i = 0; i < s; i++){\n        const s = t[i];\n        let a, u, d = -1, y = 0;\n        for(; y < s.length && (c.lastIndex = y, u = c.exec(s), null !== u);)y = c.lastIndex, c === $e5ed8027d647799b$var$f ? \"!--\" === u[1] ? c = $e5ed8027d647799b$var$v : void 0 !== u[1] ? c = $e5ed8027d647799b$var$_ : void 0 !== u[2] ? ($e5ed8027d647799b$var$$.test(u[2]) && (r = RegExp(\"</\" + u[2], \"g\")), c = $e5ed8027d647799b$var$m) : void 0 !== u[3] && (c = $e5ed8027d647799b$var$m) : c === $e5ed8027d647799b$var$m ? \">\" === u[0] ? (c = r ?? $e5ed8027d647799b$var$f, d = -1) : void 0 === u[1] ? d = -2 : (d = c.lastIndex - u[2].length, a = u[1], c = void 0 === u[3] ? $e5ed8027d647799b$var$m : '\"' === u[3] ? $e5ed8027d647799b$var$g : $e5ed8027d647799b$var$p) : c === $e5ed8027d647799b$var$g || c === $e5ed8027d647799b$var$p ? c = $e5ed8027d647799b$var$m : c === $e5ed8027d647799b$var$v || c === $e5ed8027d647799b$var$_ ? c = $e5ed8027d647799b$var$f : (c = $e5ed8027d647799b$var$m, r = void 0);\n        const x = c === $e5ed8027d647799b$var$m && t[i + 1].startsWith(\"/>\") ? \" \" : \"\";\n        l += c === $e5ed8027d647799b$var$f ? s + $e5ed8027d647799b$var$n : d >= 0 ? (o.push(a), s.slice(0, d) + $e5ed8027d647799b$var$e + s.slice(d) + $e5ed8027d647799b$var$h + x) : s + $e5ed8027d647799b$var$h + (-2 === d ? i : x);\n    }\n    return [\n        $e5ed8027d647799b$var$C(t, l + (t[s] || \"<?>\") + (2 === i ? \"</svg>\" : \"\")),\n        o\n    ];\n};\nclass $e5ed8027d647799b$var$V {\n    constructor({ strings: t, _$litType$: s }, n){\n        let r;\n        this.parts = [];\n        let c = 0, a = 0;\n        const u = t.length - 1, d = this.parts, [f, v] = $e5ed8027d647799b$var$P(t, s);\n        if (this.el = $e5ed8027d647799b$var$V.createElement(f, n), $e5ed8027d647799b$var$E.currentNode = this.el.content, 2 === s) {\n            const t = this.el.content.firstChild;\n            t.replaceWith(...t.childNodes);\n        }\n        for(; null !== (r = $e5ed8027d647799b$var$E.nextNode()) && d.length < u;){\n            if (1 === r.nodeType) {\n                if (r.hasAttributes()) for (const t of r.getAttributeNames())if (t.endsWith($e5ed8027d647799b$var$e)) {\n                    const i = v[a++], s = r.getAttribute(t).split($e5ed8027d647799b$var$h), e = /([.?@])?(.*)/.exec(i);\n                    d.push({\n                        type: 1,\n                        index: c,\n                        name: e[2],\n                        strings: s,\n                        ctor: \".\" === e[1] ? $e5ed8027d647799b$var$k : \"?\" === e[1] ? $e5ed8027d647799b$var$H : \"@\" === e[1] ? $e5ed8027d647799b$var$I : $e5ed8027d647799b$var$R\n                    }), r.removeAttribute(t);\n                } else t.startsWith($e5ed8027d647799b$var$h) && (d.push({\n                    type: 6,\n                    index: c\n                }), r.removeAttribute(t));\n                if ($e5ed8027d647799b$var$$.test(r.tagName)) {\n                    const t = r.textContent.split($e5ed8027d647799b$var$h), s = t.length - 1;\n                    if (s > 0) {\n                        r.textContent = $e5ed8027d647799b$var$i ? $e5ed8027d647799b$var$i.emptyScript : \"\";\n                        for(let i = 0; i < s; i++)r.append(t[i], $e5ed8027d647799b$var$l()), $e5ed8027d647799b$var$E.nextNode(), d.push({\n                            type: 2,\n                            index: ++c\n                        });\n                        r.append(t[s], $e5ed8027d647799b$var$l());\n                    }\n                }\n            } else if (8 === r.nodeType) {\n                if (r.data === $e5ed8027d647799b$var$o) d.push({\n                    type: 2,\n                    index: c\n                });\n                else {\n                    let t = -1;\n                    for(; -1 !== (t = r.data.indexOf($e5ed8027d647799b$var$h, t + 1));)d.push({\n                        type: 7,\n                        index: c\n                    }), t += $e5ed8027d647799b$var$h.length - 1;\n                }\n            }\n            c++;\n        }\n    }\n    static createElement(t, i) {\n        const s = $e5ed8027d647799b$var$r.createElement(\"template\");\n        return s.innerHTML = t, s;\n    }\n}\nfunction $e5ed8027d647799b$var$N(t, i, s = t, e) {\n    if (i === $e5ed8027d647799b$export$9c068ae9cc5db4e8) return i;\n    let h = void 0 !== e ? s._$Co?.[e] : s._$Cl;\n    const o = $e5ed8027d647799b$var$c(i) ? void 0 : i._$litDirective$;\n    return h?.constructor !== o && (h?._$AO?.(!1), void 0 === o ? h = void 0 : (h = new o(t), h._$AT(t, s, e)), void 0 !== e ? (s._$Co ??= [])[e] = h : s._$Cl = h), void 0 !== h && (i = $e5ed8027d647799b$var$N(t, h._$AS(t, i.values), h, e)), i;\n}\nclass $e5ed8027d647799b$var$S {\n    constructor(t, i){\n        this._$AV = [], this._$AN = void 0, this._$AD = t, this._$AM = i;\n    }\n    get parentNode() {\n        return this._$AM.parentNode;\n    }\n    get _$AU() {\n        return this._$AM._$AU;\n    }\n    u(t) {\n        const { el: { content: i }, parts: s } = this._$AD, e = (t?.creationScope ?? $e5ed8027d647799b$var$r).importNode(i, !0);\n        $e5ed8027d647799b$var$E.currentNode = e;\n        let h = $e5ed8027d647799b$var$E.nextNode(), o = 0, n = 0, l = s[0];\n        for(; void 0 !== l;){\n            if (o === l.index) {\n                let i;\n                2 === l.type ? i = new $e5ed8027d647799b$var$M(h, h.nextSibling, this, t) : 1 === l.type ? i = new l.ctor(h, l.name, l.strings, this, t) : 6 === l.type && (i = new $e5ed8027d647799b$var$L(h, this, t)), this._$AV.push(i), l = s[++n];\n            }\n            o !== l?.index && (h = $e5ed8027d647799b$var$E.nextNode(), o++);\n        }\n        return $e5ed8027d647799b$var$E.currentNode = $e5ed8027d647799b$var$r, e;\n    }\n    p(t) {\n        let i = 0;\n        for (const s of this._$AV)void 0 !== s && (void 0 !== s.strings ? (s._$AI(t, s, i), i += s.strings.length - 2) : s._$AI(t[i])), i++;\n    }\n}\nclass $e5ed8027d647799b$var$M {\n    get _$AU() {\n        return this._$AM?._$AU ?? this._$Cv;\n    }\n    constructor(t, i, s, e){\n        this.type = 2, this._$AH = $e5ed8027d647799b$export$45b790e32b2810ee, this._$AN = void 0, this._$AA = t, this._$AB = i, this._$AM = s, this.options = e, this._$Cv = e?.isConnected ?? !0;\n    }\n    get parentNode() {\n        let t = this._$AA.parentNode;\n        const i = this._$AM;\n        return void 0 !== i && 11 === t?.nodeType && (t = i.parentNode), t;\n    }\n    get startNode() {\n        return this._$AA;\n    }\n    get endNode() {\n        return this._$AB;\n    }\n    _$AI(t, i = this) {\n        t = $e5ed8027d647799b$var$N(this, t, i), $e5ed8027d647799b$var$c(t) ? t === $e5ed8027d647799b$export$45b790e32b2810ee || null == t || \"\" === t ? (this._$AH !== $e5ed8027d647799b$export$45b790e32b2810ee && this._$AR(), this._$AH = $e5ed8027d647799b$export$45b790e32b2810ee) : t !== this._$AH && t !== $e5ed8027d647799b$export$9c068ae9cc5db4e8 && this._(t) : void 0 !== t._$litType$ ? this.g(t) : void 0 !== t.nodeType ? this.$(t) : $e5ed8027d647799b$var$u(t) ? this.T(t) : this._(t);\n    }\n    k(t) {\n        return this._$AA.parentNode.insertBefore(t, this._$AB);\n    }\n    $(t) {\n        this._$AH !== t && (this._$AR(), this._$AH = this.k(t));\n    }\n    _(t) {\n        this._$AH !== $e5ed8027d647799b$export$45b790e32b2810ee && $e5ed8027d647799b$var$c(this._$AH) ? this._$AA.nextSibling.data = t : this.$($e5ed8027d647799b$var$r.createTextNode(t)), this._$AH = t;\n    }\n    g(t) {\n        const { values: i, _$litType$: s } = t, e = \"number\" == typeof s ? this._$AC(t) : (void 0 === s.el && (s.el = $e5ed8027d647799b$var$V.createElement($e5ed8027d647799b$var$C(s.h, s.h[0]), this.options)), s);\n        if (this._$AH?._$AD === e) this._$AH.p(i);\n        else {\n            const t = new $e5ed8027d647799b$var$S(e, this), s = t.u(this.options);\n            t.p(i), this.$(s), this._$AH = t;\n        }\n    }\n    _$AC(t) {\n        let i = $e5ed8027d647799b$var$A.get(t.strings);\n        return void 0 === i && $e5ed8027d647799b$var$A.set(t.strings, i = new $e5ed8027d647799b$var$V(t)), i;\n    }\n    T(t) {\n        $e5ed8027d647799b$var$a(this._$AH) || (this._$AH = [], this._$AR());\n        const i = this._$AH;\n        let s, e = 0;\n        for (const h of t)e === i.length ? i.push(s = new $e5ed8027d647799b$var$M(this.k($e5ed8027d647799b$var$l()), this.k($e5ed8027d647799b$var$l()), this, this.options)) : s = i[e], s._$AI(h), e++;\n        e < i.length && (this._$AR(s && s._$AB.nextSibling, e), i.length = e);\n    }\n    _$AR(t = this._$AA.nextSibling, i) {\n        for(this._$AP?.(!1, !0, i); t && t !== this._$AB;){\n            const i = t.nextSibling;\n            t.remove(), t = i;\n        }\n    }\n    setConnected(t) {\n        void 0 === this._$AM && (this._$Cv = t, this._$AP?.(t));\n    }\n}\nclass $e5ed8027d647799b$var$R {\n    get tagName() {\n        return this.element.tagName;\n    }\n    get _$AU() {\n        return this._$AM._$AU;\n    }\n    constructor(t, i, s, e, h){\n        this.type = 1, this._$AH = $e5ed8027d647799b$export$45b790e32b2810ee, this._$AN = void 0, this.element = t, this.name = i, this._$AM = e, this.options = h, s.length > 2 || \"\" !== s[0] || \"\" !== s[1] ? (this._$AH = Array(s.length - 1).fill(new String), this.strings = s) : this._$AH = $e5ed8027d647799b$export$45b790e32b2810ee;\n    }\n    _$AI(t, i = this, s, e) {\n        const h = this.strings;\n        let o = !1;\n        if (void 0 === h) t = $e5ed8027d647799b$var$N(this, t, i, 0), o = !$e5ed8027d647799b$var$c(t) || t !== this._$AH && t !== $e5ed8027d647799b$export$9c068ae9cc5db4e8, o && (this._$AH = t);\n        else {\n            const e = t;\n            let n, r;\n            for(t = h[0], n = 0; n < h.length - 1; n++)r = $e5ed8027d647799b$var$N(this, e[s + n], i, n), r === $e5ed8027d647799b$export$9c068ae9cc5db4e8 && (r = this._$AH[n]), o ||= !$e5ed8027d647799b$var$c(r) || r !== this._$AH[n], r === $e5ed8027d647799b$export$45b790e32b2810ee ? t = $e5ed8027d647799b$export$45b790e32b2810ee : t !== $e5ed8027d647799b$export$45b790e32b2810ee && (t += (r ?? \"\") + h[n + 1]), this._$AH[n] = r;\n        }\n        o && !e && this.O(t);\n    }\n    O(t) {\n        t === $e5ed8027d647799b$export$45b790e32b2810ee ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, t ?? \"\");\n    }\n}\nclass $e5ed8027d647799b$var$k extends $e5ed8027d647799b$var$R {\n    constructor(){\n        super(...arguments), this.type = 3;\n    }\n    O(t) {\n        this.element[this.name] = t === $e5ed8027d647799b$export$45b790e32b2810ee ? void 0 : t;\n    }\n}\nclass $e5ed8027d647799b$var$H extends $e5ed8027d647799b$var$R {\n    constructor(){\n        super(...arguments), this.type = 4;\n    }\n    O(t) {\n        this.element.toggleAttribute(this.name, !!t && t !== $e5ed8027d647799b$export$45b790e32b2810ee);\n    }\n}\nclass $e5ed8027d647799b$var$I extends $e5ed8027d647799b$var$R {\n    constructor(t, i, s, e, h){\n        super(t, i, s, e, h), this.type = 5;\n    }\n    _$AI(t, i = this) {\n        if ((t = $e5ed8027d647799b$var$N(this, t, i, 0) ?? $e5ed8027d647799b$export$45b790e32b2810ee) === $e5ed8027d647799b$export$9c068ae9cc5db4e8) return;\n        const s = this._$AH, e = t === $e5ed8027d647799b$export$45b790e32b2810ee && s !== $e5ed8027d647799b$export$45b790e32b2810ee || t.capture !== s.capture || t.once !== s.once || t.passive !== s.passive, h = t !== $e5ed8027d647799b$export$45b790e32b2810ee && (s === $e5ed8027d647799b$export$45b790e32b2810ee || e);\n        e && this.element.removeEventListener(this.name, this, s), h && this.element.addEventListener(this.name, this, t), this._$AH = t;\n    }\n    handleEvent(t) {\n        \"function\" == typeof this._$AH ? this._$AH.call(this.options?.host ?? this.element, t) : this._$AH.handleEvent(t);\n    }\n}\nclass $e5ed8027d647799b$var$L {\n    constructor(t, i, s){\n        this.element = t, this.type = 6, this._$AN = void 0, this._$AM = i, this.options = s;\n    }\n    get _$AU() {\n        return this._$AM._$AU;\n    }\n    _$AI(t) {\n        $e5ed8027d647799b$var$N(this, t);\n    }\n}\nconst $e5ed8027d647799b$export$8613d1ca9052b22e = {\n    j: $e5ed8027d647799b$var$e,\n    P: $e5ed8027d647799b$var$h,\n    A: $e5ed8027d647799b$var$o,\n    C: 1,\n    M: $e5ed8027d647799b$var$P,\n    L: $e5ed8027d647799b$var$S,\n    R: $e5ed8027d647799b$var$u,\n    V: $e5ed8027d647799b$var$N,\n    D: $e5ed8027d647799b$var$M,\n    I: $e5ed8027d647799b$var$R,\n    H: $e5ed8027d647799b$var$H,\n    N: $e5ed8027d647799b$var$I,\n    U: $e5ed8027d647799b$var$k,\n    B: $e5ed8027d647799b$var$L\n}, $e5ed8027d647799b$var$Z = $e5ed8027d647799b$var$t.litHtmlPolyfillSupport;\n$e5ed8027d647799b$var$Z?.($e5ed8027d647799b$var$V, $e5ed8027d647799b$var$M), ($e5ed8027d647799b$var$t.litHtmlVersions ??= []).push(\"3.1.0\");\nconst $e5ed8027d647799b$export$b3890eb0ae9dca99 = (t, i, s)=>{\n    const e = s?.renderBefore ?? i;\n    let h = e._$litPart$;\n    if (void 0 === h) {\n        const t = s?.renderBefore ?? null;\n        e._$litPart$ = h = new $e5ed8027d647799b$var$M(i.insertBefore($e5ed8027d647799b$var$l(), t), t, void 0, s ?? {});\n    }\n    return h._$AI(t), h;\n};\n\n\n\n\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ class $fe586ba0757c37f7$export$3f2f9f5909897157 extends (0, $27fcf98b67c2a783$export$c7c07a37856565d) {\n    constructor(){\n        super(...arguments), this.renderOptions = {\n            host: this\n        }, this._$Do = void 0;\n    }\n    createRenderRoot() {\n        const t = super.createRenderRoot();\n        return this.renderOptions.renderBefore ??= t.firstChild, t;\n    }\n    update(t) {\n        const i = this.render();\n        this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(t), this._$Do = (0, $e5ed8027d647799b$export$b3890eb0ae9dca99)(i, this.renderRoot, this.renderOptions);\n    }\n    connectedCallback() {\n        super.connectedCallback(), this._$Do?.setConnected(!0);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback(), this._$Do?.setConnected(!1);\n    }\n    render() {\n        return 0, $e5ed8027d647799b$export$9c068ae9cc5db4e8;\n    }\n}\n$fe586ba0757c37f7$export$3f2f9f5909897157._$litElement$ = !0, $fe586ba0757c37f7$export$3f2f9f5909897157[\"finalized\"] = !0, globalThis.litElementHydrateSupport?.({\n    LitElement: $fe586ba0757c37f7$export$3f2f9f5909897157\n});\nconst $fe586ba0757c37f7$var$r = globalThis.litElementPolyfillSupport;\n$fe586ba0757c37f7$var$r?.({\n    LitElement: $fe586ba0757c37f7$export$3f2f9f5909897157\n});\nconst $fe586ba0757c37f7$export$f5c524615a7708d6 = {\n    _$AK: (t, e, i)=>{\n        t._$AK(e, i);\n    },\n    _$AL: (t)=>t._$AL\n};\n(globalThis.litElementVersions ??= []).push(\"4.0.2\");\n\n\n/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ const $650ed036964a13b8$export$6acf61af03e62db = !1;\n\n\n\n\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ const $3baabda811939da5$export$9ba3b3f20a85bfa = {\n    ATTRIBUTE: 1,\n    CHILD: 2,\n    PROPERTY: 3,\n    BOOLEAN_ATTRIBUTE: 4,\n    EVENT: 5,\n    ELEMENT: 6\n}, $3baabda811939da5$export$99b43ad1ed32e735 = (t)=>(...e)=>({\n            _$litDirective$: t,\n            values: e\n        });\nclass $3baabda811939da5$export$befdefbdce210f91 {\n    constructor(t){}\n    get _$AU() {\n        return this._$AM._$AU;\n    }\n    _$AT(t, e, i) {\n        this._$Ct = t, this._$AM = e, this._$Ci = i;\n    }\n    _$AS(t, e) {\n        return this.update(t, e);\n    }\n    update(t, e) {\n        return this.render(...e);\n    }\n}\n\n\n\n\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ class $0c76f114343011b1$export$3bebd1f0e3943985 extends (0, $3baabda811939da5$export$befdefbdce210f91) {\n    constructor(i){\n        if (super(i), this.et = (0, $e5ed8027d647799b$export$45b790e32b2810ee), i.type !== (0, $3baabda811939da5$export$9ba3b3f20a85bfa).CHILD) throw Error(this.constructor.directiveName + \"() can only be used in child bindings\");\n    }\n    render(r) {\n        if (r === (0, $e5ed8027d647799b$export$45b790e32b2810ee) || null == r) return this.vt = void 0, this.et = r;\n        if (r === (0, $e5ed8027d647799b$export$9c068ae9cc5db4e8)) return r;\n        if (\"string\" != typeof r) throw Error(this.constructor.directiveName + \"() called with a non-string value\");\n        if (r === this.et) return this.vt;\n        this.et = r;\n        const s = [\n            r\n        ];\n        return s.raw = s, this.vt = {\n            _$litType$: this.constructor.resultType,\n            strings: s,\n            values: []\n        };\n    }\n}\n$0c76f114343011b1$export$3bebd1f0e3943985.directiveName = \"unsafeHTML\", $0c76f114343011b1$export$3bebd1f0e3943985.resultType = 1;\nconst $0c76f114343011b1$export$b6e69390c23686fb = (0, $3baabda811939da5$export$99b43ad1ed32e735)($0c76f114343011b1$export$3bebd1f0e3943985);\n\n\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ class $bfe18e8a91052d2d$var$t extends (0, $0c76f114343011b1$export$3bebd1f0e3943985) {\n}\n$bfe18e8a91052d2d$var$t.directiveName = \"unsafeSVG\", $bfe18e8a91052d2d$var$t.resultType = 2;\nconst $bfe18e8a91052d2d$export$1cb98903879b8bf5 = (0, $3baabda811939da5$export$99b43ad1ed32e735)($bfe18e8a91052d2d$var$t);\n\n\n\n\n\n\nvar $e8c17184f74ae6dd$exports = {};\n$e8c17184f74ae6dd$exports = \"@font-face{font-family:Material Icons Outlined;font-style:normal;font-weight:400;font-display:block;src:url(material-icons-outlined.af2186d9.woff2)format(\\\"woff2\\\"),url(material-icons-outlined.25bc5969.woff)format(\\\"woff\\\")}.material-icons-outlined{letter-spacing:normal;text-transform:none;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility;font-feature-settings:\\\"liga\\\";font-family:Material Icons Outlined;font-size:24px;font-style:normal;font-weight:400;line-height:1;display:inline-block}a{color:var(--color-4);font-weight:var(--font-weight-6);font-size:var(--size-4);text-decoration:none}a:hover{text-decoration:underline}hr{border-color:var(--color-6);width:100%}button{color:var(--color-0);font-weight:var(--font-weight-6);font-size:var(--size-3);text-align:center;background-color:var(--color-9);border:1px solid var(--color-10);cursor:pointer;text-decoration:none;transition:background-color .4s,border-color .4s}button.icon-btn{margin:var(--size-1)0;padding:var(--size-4)var(--size-3);border-radius:var(--radius-2);justify-content:center;align-items:center;display:flex}button.icon-btn span{margin-right:var(--size-2)}button:hover{background-color:var(--color-8);border-color:var(--color-9)}button:hover:disabled,button:disabled{color:var(--color-9);background-color:var(--color-7);border-color:var(--color-7);cursor:not-allowed}h1{font-size:var(--size-7)}h2{font-size:var(--size-4)}h2.sticky{padding:var(--size-3)0;background-color:var(--color-11);margin:0;position:sticky;top:0}h3{font-size:var(--size-3)}input[type=text],select{margin:var(--size-1)0 0 0;padding:var(--size-4)var(--size-3);color:var(--color-2);font-size:var(--size-3);background-color:var(--color-8);border:none;outline:none}input[type=text]::placeholder,select:required:invalid{color:var(--color-5)}input:-webkit-autofill{-webkit-box-shadow:0 0 0 30px var(--color-8)inset!important;-webkit-text-fill-color:var(--color-2)!important}input:-webkit-autofill:hover{-webkit-box-shadow:0 0 0 30px var(--color-8)inset!important;-webkit-text-fill-color:var(--color-2)!important}input:-webkit-autofill:focus{-webkit-box-shadow:0 0 0 30px var(--color-8)inset!important;-webkit-text-fill-color:var(--color-2)!important}input:-webkit-autofill:active{-webkit-box-shadow:0 0 0 30px var(--color-8)inset!important;-webkit-text-fill-color:var(--color-2)!important}select{cursor:pointer}dialog::backdrop{background:#00000080}content-link:first-of-type::part(a){border-radius:var(--radius-3)var(--radius-3)0 0}content-link:last-of-type::part(a){border-radius:0 0 var(--radius-3)var(--radius-3)}.warning-text{color:var(--red-7)}\";\n\n\nvar $ec807946e5e69539$exports = {};\n$ec807946e5e69539$exports = \":where(html){--animation-fade-in:fade-in .5s var(--ease-3);--animation-fade-in-bloom:fade-in-bloom 2s var(--ease-3);--animation-fade-out:fade-out .5s var(--ease-3);--animation-fade-out-bloom:fade-out-bloom 2s var(--ease-3);--animation-scale-up:scale-up .5s var(--ease-3);--animation-scale-down:scale-down .5s var(--ease-3);--animation-slide-out-up:slide-out-up .5s var(--ease-3);--animation-slide-out-down:slide-out-down .5s var(--ease-3);--animation-slide-out-right:slide-out-right .5s var(--ease-3);--animation-slide-out-left:slide-out-left .5s var(--ease-3);--animation-slide-in-up:slide-in-up .5s var(--ease-3);--animation-slide-in-down:slide-in-down .5s var(--ease-3);--animation-slide-in-right:slide-in-right .5s var(--ease-3);--animation-slide-in-left:slide-in-left .5s var(--ease-3);--animation-shake-x:shake-x .75s var(--ease-out-5);--animation-shake-y:shake-y .75s var(--ease-out-5);--animation-spin:spin 2s linear infinite;--animation-ping:ping 5s var(--ease-out-3)infinite;--animation-blink:blink 1s var(--ease-out-3)infinite;--animation-float:float 3s var(--ease-in-out-3)infinite;--animation-bounce:bounce 2s var(--ease-squish-2)infinite;--animation-pulse:pulse 2s var(--ease-out-3)infinite}@keyframes fade-in{to{opacity:1}}@keyframes fade-in-bloom{0%{filter:brightness()blur(20px);opacity:0}10%{filter:brightness(2)blur(10px);opacity:1}to{filter:brightness()blur();opacity:1}}@keyframes fade-out{to{opacity:0}}@keyframes fade-out-bloom{to{filter:brightness()blur(20px);opacity:0}10%{filter:brightness(2)blur(10px);opacity:1}0%{filter:brightness()blur();opacity:1}}@keyframes scale-up{to{transform:scale(1.25)}}@keyframes scale-down{to{transform:scale(.75)}}@keyframes slide-out-up{to{transform:translateY(-100%)}}@keyframes slide-out-down{to{transform:translateY(100%)}}@keyframes slide-out-right{to{transform:translate(100%)}}@keyframes slide-out-left{to{transform:translate(-100%)}}@keyframes slide-in-up{0%{transform:translateY(100%)}}@keyframes slide-in-down{0%{transform:translateY(-100%)}}@keyframes slide-in-right{0%{transform:translate(-100%)}}@keyframes slide-in-left{0%{transform:translate(100%)}}@keyframes shake-x{0%,to{transform:translate(0)}20%{transform:translate(-5%)}40%{transform:translate(5%)}60%{transform:translate(-5%)}80%{transform:translate(5%)}}@keyframes shake-y{0%,to{transform:translateY(0)}20%{transform:translateY(-5%)}40%{transform:translateY(5%)}60%{transform:translateY(-5%)}80%{transform:translateY(5%)}}@keyframes spin{to{transform:rotate(1turn)}}@keyframes ping{90%,to{opacity:0;transform:scale(2)}}@keyframes blink{0%,to{opacity:1}50%{opacity:.5}}@keyframes float{50%{transform:translateY(-25%)}}@keyframes bounce{25%{transform:translateY(-20%)}40%{transform:translateY(-3%)}0%,60%,to{transform:translateY(0)}}@keyframes pulse{50%{transform:scale(.9)}}@media (prefers-color-scheme:dark){@keyframes fade-in-bloom{0%{filter:brightness()blur(20px);opacity:0}10%{filter:brightness(.5)blur(10px);opacity:1}to{filter:brightness()blur();opacity:1}}@keyframes fade-out-bloom{to{filter:brightness()blur(20px);opacity:0}10%{filter:brightness(.5)blur(10px);opacity:1}0%{filter:brightness()blur();opacity:1}}}.fade-in{opacity:0;animation:fade-in .4s var(--ease-elastic-in-3)forwards}.spin,.spin-back{animation:spin .5s var(--ease-out-3)1}.spin-back{animation-direction:reverse}.slide-up-fade-in{opacity:0;animation:fade-in .4s var(--ease-elastic-in-3)forwards,slide-in-up .4s var(--ease-elastic-in-3)}\";\n\n\n\nconst $356a447a83d57522$export$bca14c5b3b88a9c9 = (0, $3233927aa82734f9$export$8d80f9cac07cdb3)((0, (/*@__PURE__*/$parcel$interopDefault($e8c17184f74ae6dd$exports))));\nconst $356a447a83d57522$export$7f9953c70dacfd7f = (0, $3233927aa82734f9$export$8d80f9cac07cdb3)((0, (/*@__PURE__*/$parcel$interopDefault($ec807946e5e69539$exports))));\n\n\nclass $031a10b16b9a3b8f$export$88f6863bd7f6a67c extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static properties = {\n        href: {},\n        selected: {\n            state: true\n        }\n    };\n    static styles = [\n        (0, $356a447a83d57522$export$bca14c5b3b88a9c9),\n        (0, $356a447a83d57522$export$7f9953c70dacfd7f)\n    ];\n    #updateSelected() {\n        const url = new URL(`${window.location.origin}/${this.href}`);\n        this.selected = (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).isActiveRoute(url.pathname);\n    }\n    constructor(){\n        super();\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).addEventListener(\"routechanged\", ()=>{\n            this.#updateSelected();\n        });\n    }\n    #onClick = (event)=>{\n        event.preventDefault();\n        const url = new URL(`${window.location.origin}/${this.href}`);\n        const queryParams = Object.fromEntries(url.searchParams.entries());\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).navigateTo(url.pathname, queryParams);\n    };\n    connectedCallback() {\n        super.connectedCallback();\n        this.#updateSelected();\n        this.addEventListener(\"click\", this.#onClick);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.removeEventListener(\"click\", this.#onClick);\n    }\n    render() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n        <a href=\"${this.href}\"\n           aria-disabled=\"${this.selected}\"\n           part=\"a ${this.selected ? \"active\" : \"\"}\">\n            <slot></slot>\n        </a>\n    `;\n    }\n}\ncustomElements.define(\"route-link\", $031a10b16b9a3b8f$export$88f6863bd7f6a67c);\n\n\n\nvar $d125bb14449a55ba$exports = {};\n$d125bb14449a55ba$exports = \"ul,li{margin:0;padding:0;list-style:none}li{display:inline-block}header{justify-content:space-between;align-items:baseline;display:flex}header h1{align-items:center;gap:.15em;display:flex}.pbw-logo{height:var(--size-7)}.version-txt{color:var(--color-6);font-weight:var(--font-weight-4);font-size:var(--size-3);line-height:var(--size-5);align-self:flex-end}.github-link{align-items:center;display:flex}.github-icon{fill:var(--color-5)}.github-icon:hover{fill:var(--color-2)}nav ul{margin-bottom:var(--size-4)}nav ul route-link::part(a){padding:var(--size-1)var(--size-2);border-radius:var(--radius-3);transition:background-color .4s,color .4s}nav ul route-link::part(a active){color:var(--color-8);background-color:var(--color-5);cursor:default;text-decoration:none;transition:background-color .8s,color .4s}\";\n\n\n\nclass $a2ce308324cf5a5c$export$22a378f9b7f1c84e extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static properties = {\n        debug: {\n            type: Boolean,\n            state: true\n        }\n    };\n    static styles = [\n        (0, $356a447a83d57522$export$bca14c5b3b88a9c9),\n        (0, $3233927aa82734f9$export$8d80f9cac07cdb3)((0, (/*@__PURE__*/$parcel$interopDefault($d125bb14449a55ba$exports))))\n    ];\n    #onRouteUpdated = ({ detail: { queryParams: queryParams } })=>{\n        this.debug = queryParams.debug === \"true\";\n    };\n    connectedCallback() {\n        super.connectedCallback();\n        this.debug = (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).queryParams.debug === \"true\";\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).addEventListener(\"routechanged\", this.#onRouteUpdated);\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).addEventListener(\"queryparams\", this.#onRouteUpdated);\n    }\n    disconnectedCallback() {\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).removeEventListener(\"routechanged\", this.#onRouteUpdated);\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).removeEventListener(\"queryparams\", this.#onRouteUpdated);\n    }\n    render() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <header>\n        <h1>\n          <img class=\"pbw-logo\" src=\"${0, (/*@__PURE__*/$parcel$interopDefault($b0c6b7520e7d4b94$exports))}\"/>\n          <span>Pillarbox</span>\n          <span class=\"version-txt\">${(0, $4OnIV.default).VERSION.pillarbox}</span>\n        </h1>\n        <a href=\"https://github.com/srgssr/pillarbox-web\" class=\"github-link\" title=\"Source on Github\">\n          ${(0, $bfe18e8a91052d2d$export$1cb98903879b8bf5)((0, (/*@__PURE__*/$parcel$interopDefault($1914347b4edf3c73$exports))))}\n        </a>\n      </header>\n      <nav>\n        <ul>\n          <li>\n            <route-link href=\"examples${this.debug ? \"?debug=true\" : \"\"}\">Examples</route-link>\n          </li>\n          <li>\n            <route-link href=\"search${this.debug ? \"?debug=true\" : \"\"}\">Search</route-link>\n          </li>\n          <li>\n            <route-link href=\"lists${this.debug ? \"?debug=true\" : \"\"}\">Lists</route-link>\n          </li>\n          <li>\n            <route-link href=\"settings${this.debug ? \"?debug=true\" : \"\"}\">Settings</route-link>\n          </li>\n        </ul>\n      </nav>\n    `;\n    }\n}\ncustomElements.define(\"pbw-header\", $a2ce308324cf5a5c$export$22a378f9b7f1c84e);\n\n\n\n\n\n\n\nclass $0deb0cd9c4b04181$export$f03679f0d852f0c9 extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static properties = {\n        route: {\n            state: true\n        }\n    };\n    constructor(){\n        super();\n        this.route = (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).currentRoute;\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).addEventListener(\"routechanged\", ({ detail: { route: route } })=>{\n            this.route?.destroy();\n            this.route = route;\n        });\n    }\n    render() {\n        return (0, $0c76f114343011b1$export$b6e69390c23686fb)(`<${this.route.component}></${this.route.component}>`);\n    }\n}\ncustomElements.define(\"route-outlet\", $0deb0cd9c4b04181$export$f03679f0d852f0c9);\n\n\n\n\n\n\n\nvar $406b40d5dbcaec7e$exports = {};\n$406b40d5dbcaec7e$exports = \".load-bar-container{padding:0 var(--size-3);background-color:var(--color-8);border-radius:var(--radius-2);align-items:center;display:flex}.load-bar-container input{width:90%}.load-bar-container button{background-color:var(--color-8);border:0}.drm-settings-container{display:none}.drm-settings-container input{border-radius:var(--radius-2)}.drm-settings-container select{border-right:var(--size-5)solid var(--color-8)}.drm-settings-container.active{flex-direction:column;display:flex}.load-bar-action{width:100%}.fade-in-grow{opacity:0;animation:fade-in .4s var(--ease-elastic-in-3)forwards,grow .4s ease}.shrink{opacity:0;animation:.4s reverse grow}@keyframes grow{0%{max-height:0}to{max-height:var(--size-15)}}\";\n\n\n\n\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ const $0e5c059fc79abe53$export$56cc687933817664 = (0, $3baabda811939da5$export$99b43ad1ed32e735)(class extends (0, $3baabda811939da5$export$befdefbdce210f91) {\n    constructor(t){\n        if (super(t), t.type !== (0, $3baabda811939da5$export$9ba3b3f20a85bfa).ATTRIBUTE || \"class\" !== t.name || t.strings?.length > 2) throw Error(\"`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.\");\n    }\n    render(t) {\n        return \" \" + Object.keys(t).filter((s)=>t[s]).join(\" \") + \" \";\n    }\n    update(s, [i]) {\n        if (void 0 === this.it) {\n            this.it = new Set, void 0 !== s.strings && (this.st = new Set(s.strings.join(\" \").split(/\\s/).filter((t)=>\"\" !== t)));\n            for(const t in i)i[t] && !this.st?.has(t) && this.it.add(t);\n            return this.render(i);\n        }\n        const r = s.element.classList;\n        for (const t of this.it)t in i || (r.remove(t), this.it.delete(t));\n        for(const t in i){\n            const s = !!i[t];\n            s === this.it.has(t) || this.st?.has(t) || (s ? (r.add(t), this.it.add(t)) : (r.remove(t), this.it.delete(t)));\n        }\n        return 0, $e5ed8027d647799b$export$9c068ae9cc5db4e8;\n    }\n});\n\n\n\n\nclass $de95cfbbb35218c3$export$4752de7af8489f99 extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static properties = {\n        src: {\n            type: String\n        },\n        drmSettings: {\n            type: Object\n        },\n        drmSettingsShown: {\n            state: true,\n            type: Boolean\n        }\n    };\n    static styles = [\n        (0, $356a447a83d57522$export$bca14c5b3b88a9c9),\n        (0, $356a447a83d57522$export$7f9953c70dacfd7f),\n        (0, $3233927aa82734f9$export$8d80f9cac07cdb3)((0, (/*@__PURE__*/$parcel$interopDefault($406b40d5dbcaec7e$exports))))\n    ];\n    constructor(){\n        super();\n        this.src = \"\";\n        this.#initDrmSettings();\n    }\n    #initDrmSettings() {\n        this.drmSettings = {\n            vendor: \"\",\n            certificateUrl: \"\",\n            licenseUrl: \"\"\n        };\n    }\n    #submitMedia() {\n        const src = this.src;\n        const type = src.startsWith(\"urn:\") ? \"srgssr/urn\" : undefined;\n        const keySystems = this.#keySystems;\n        /**\n     * Custom event dispatched by LoadMediaFormComponent when the user submits media.\n     *\n     * @event LoadMediaFormComponent#submit-media\n     * @type {CustomEvent}\n     * @property {Object} detail - The event detail object.\n     * @property {string} detail.src - The URL or URN of the media content to be loaded.\n     * @property {string | undefined} detail.type - The type of media. Undefined if the type cannot be determined.\n     * @property {Object | undefined} detail.keySystems - DRM key systems for the loaded media.\n     */ this.dispatchEvent(new CustomEvent(\"submit-media\", {\n            detail: {\n                src: src,\n                type: type,\n                keySystems: keySystems\n            }\n        }));\n    }\n    #handleLoadBarKeyUp(event) {\n        this.src = event.target.value;\n        if (event.key === \"Enter\" && this.src) this.#submitMedia();\n    }\n    get #keySystems() {\n        if (!this.drmSettings?.vendor) return undefined;\n        const certificateUrl = this.drmSettings.certificateUrl;\n        const licenseUrl = this.drmSettings.licenseUrl;\n        if (\"com.apple.fps.1_0\" === this.drmSettings.vendor) return {\n            [this.drmSettings.vendor]: {\n                certificateUrl: certificateUrl,\n                licenseUrl: licenseUrl\n            }\n        };\n        return {\n            [this.drmSettings.vendor]: {\n                licenseUrl: licenseUrl\n            }\n        };\n    }\n    render() {\n        const btnSettingsClassMap = {\n            \"spin\": this.drmSettingsShown === true,\n            \"spin-back\": this.drmSettingsShown === false\n        };\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <div class=\"fade-in\"\n           @animationend=\"${(e)=>e.target.classList.remove(\"fade-in\")}\">\n        <div class=\"load-bar-container\">\n          <i class=\"material-icons-outlined\">insert_link</i>\n          <input type=\"text\"\n                 placeholder=\"Enter a URL or URN to play its content...\"\n                 @keyup=\"${this.#handleLoadBarKeyUp}\"\n                 .value=\"${this.src ?? \"\"}\">\n          <button title=\"Open DRM Settings\"\n                  @click=\"${()=>this.drmSettingsShown = !this.drmSettingsShown}\">\n            <i class=\"material-icons-outlined ${(0, $0e5c059fc79abe53$export$56cc687933817664)(btnSettingsClassMap)}\"\n               @animationend=\"${(e)=>e.target.classList.remove(\"spin\", \"spin-back\")}\">\n              settings\n            </i>\n          </button>\n        </div>\n        \n        ${this.#drmSettingsTemplate()}\n\n        <button class=\"icon-btn load-bar-action\"\n                ?disabled=\"${!this.src}\"\n                @click=\"${this.#submitMedia}\">\n          <i class=\"material-icons-outlined\">play_circle</i> Play content\n        </button>\n      </div>\n    `;\n    }\n    updated(_changedProperties) {\n        super.updated(_changedProperties);\n        if (_changedProperties.has(\"drmSettingsShown\") && this.drmSettingsShown) this.shadowRoot.querySelector(\".drm-settings-container\").add(\"active\");\n    }\n    #onFormAnimationEnd(e) {\n        if (e.target.classList.contains(\"shrink\")) e.target.classList.add(\"active\");\n        e.target.classList.remove(\"fade-in-grow\", \"shrink\");\n    }\n    #formAnimationClassMap() {\n        return {\n            \"fade-in-grow\": this.drmSettingsShown === true,\n            \"shrink\": this.drmSettingsShown === false\n        };\n    }\n    #drmSettingsTemplate() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <form class=\"drm-settings-container ${(0, $0e5c059fc79abe53$export$56cc687933817664)(this.#formAnimationClassMap())}\"\n            aria-hidden=\"${!this.drmSettingsShown}\"\n            @reset=\"${this.#initDrmSettings}\"\n            @animationend=\"${(e)=>this.#onFormAnimationEnd(e)}\">\n        <h3>DRM Settings</h3>\n        <select aria-label=\"Select a DRM vendor\" required\n                .value=\"${this.drmSettings.vendor}\"\n                @change=\"${(e)=>this.drmSettings.vendor = e.target.value}\">\n          <option value=\"\" disabled selected hidden>Select a DRM vendor\n          </option>\n          <option value=\"com.widevine.alpha\">Widevine</option>\n          <option value=\"com.apple.fps.1_0\">Fairplay</option>\n          <option value=\"com.microsoft.playready\">PlayReady</option>\n        </select>\n        <input type=\"text\"\n               placeholder=\"Enter the license url...\"\n               .value=\"${this.drmSettings.licenseUrl}\"\n               @input=\"${(e)=>this.drmSettings.licenseUrl = e.target.value}\">\n        <input type=\"text\"\n               placeholder=\"Enter the certificate url...\"\n               .value=\"${this.drmSettings.certificateUrl}\"\n               @input=\"${(e)=>this.drmSettings.certificateUrl = e.target.value}\">\n        <button class=\"icon-btn warning-text\" type=\"reset\">\n          <i class=\"material-icons-outlined\">delete</i>Clear Settings\n        </button>\n        <hr>\n      </form>\n    `;\n    }\n}\ncustomElements.define(\"load-media-form\", $de95cfbbb35218c3$export$4752de7af8489f99);\n\n\n\n\nvar $3fb9073b849654e3$exports = {};\n$3fb9073b849654e3$exports = \"[part=a]{gap:var(--size-2);min-height:var(--size-10);color:var(--color-0);font-weight:var(--font-weight-6);font-size:var(--size-3);text-align:justify;background-color:var(--color-9);border:1px solid var(--color-10);padding-inline:var(--size-3);flex-direction:column;justify-content:center;margin:0;text-decoration:none;transition:background-color .4s,border-color .4s;display:flex}[part=a]:hover{background-color:var(--color-8);border-color:var(--color-9);text-decoration:none}[part=title]{white-space:nowrap;text-overflow:ellipsis;overflow:hidden}::slotted([slot=description]){color:var(--color-6);font-weight:var(--font-weight-5);font-size:var(--size-3);align-items:center;font-style:italic;display:flex}\";\n\n\nclass $769a58f5d65b2ce2$export$24e84480ca50488d extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static properties = {\n        href: {}\n    };\n    static styles = (0, $3233927aa82734f9$export$8d80f9cac07cdb3)((0, (/*@__PURE__*/$parcel$interopDefault($3fb9073b849654e3$exports))));\n    #onClick = (event)=>{\n        event.preventDefault();\n        const url = new URL(`${window.location.origin}/${this.href}`);\n        const queryParams = Object.fromEntries(url.searchParams.entries());\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).navigateTo(url.pathname, queryParams);\n    };\n    connectedCallback() {\n        super.connectedCallback();\n        this.addEventListener(\"click\", this.#onClick);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.removeEventListener(\"click\", this.#onClick);\n    }\n    render() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <a href=\"${this.href}\" title=\"${this.title}\" part=\"a\">\n        <span part=\"title\">${this.title}</span>\n        <slot part=\"description\" name=\"description\"></slot>\n      </a>\n    `;\n    }\n}\ncustomElements.define(\"content-link\", $769a58f5d65b2ce2$export$24e84480ca50488d);\n\n\nconst $d2794e412c64e2be$var$EXAMPLES = {\n    \"SRGSSR\": [\n        {\n            \"title\": \"Horizontal video\",\n            \"src\": \"urn:rts:video:6820736\",\n            \"type\": \"srgssr/urn\"\n        },\n        {\n            \"title\": \"Square video\",\n            \"src\": \"urn:rts:video:8393241\",\n            \"type\": \"srgssr/urn\"\n        },\n        {\n            \"title\": \"Vertical video\",\n            \"src\": \"urn:rts:video:13444390\",\n            \"type\": \"srgssr/urn\"\n        },\n        {\n            \"title\": \"Token-protected video\",\n            \"description\": \"Ski alpin, Slalom Messieurs\",\n            \"src\": \"urn:swisstxt:video:rts:c56ea781-99ad-40c3-8d9b-444cc5ac3aea\",\n            \"type\": \"srgssr/urn\"\n        },\n        {\n            \"title\": \"Superfluously token-protected video\",\n            \"description\": \"Telegiornale flash\",\n            \"src\": \"urn:rsi:video:15916771\",\n            \"type\": \"srgssr/urn\"\n        },\n        {\n            \"title\": \"DRM-protected video\",\n            \"description\": \"Top Models 8870\",\n            \"src\": \"urn:rts:video:13639837\",\n            \"type\": \"srgssr/urn\"\n        },\n        {\n            \"title\": \"Live video\",\n            \"description\": \"SRF 1\",\n            \"src\": \"urn:srf:video:c4927fcf-e1a0-0001-7edd-1ef01d441651\",\n            \"type\": \"srgssr/urn\"\n        },\n        {\n            \"title\": \"DVR video livestream\",\n            \"description\": \"RTS 1\",\n            \"src\": \"urn:rts:video:3608506\",\n            \"type\": \"srgssr/urn\"\n        },\n        {\n            \"title\": \"DVR audio livestream\",\n            \"description\": \"Couleur 3 (DVR)\",\n            \"src\": \"urn:rts:audio:3262363\",\n            \"type\": \"srgssr/urn\"\n        },\n        {\n            \"title\": \"On-demand audio stream\",\n            \"description\": \"Il lavoro di TerraProject per una fotografia documentaria\",\n            \"src\": \"urn:rsi:audio:8833144\",\n            \"type\": \"srgssr/urn\"\n        },\n        {\n            \"title\": \"Expired URN\",\n            \"description\": \"Content that is not available anymore\",\n            \"src\": \"urn:rts:video:13382911\",\n            \"type\": \"srgssr/urn\"\n        },\n        {\n            \"title\": \"Unknown URN\",\n            \"description\": \"Content that does not exist\",\n            \"src\": \"urn:srf:video:unknown\",\n            \"type\": \"srgssr/urn\"\n        }\n    ],\n    \"HLS\": [\n        {\n            \"title\": \"VOD - HLS\",\n            \"description\": \"Switzerland says sorry! The fondue invasion\",\n            \"src\": \"https://swi-vod.akamaized.net/videoJson/47603186/master.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"VOD - HLS (short)\",\n            \"description\": \"Des violents orages ont touch\\xe9 Ajaccio, chef-lieu de la Corse, jeudi\",\n            \"src\": \"https://rts-vod-amd.akamaized.net/ww/13317145/f1d49f18-f302-37ce-866c-1c1c9b76a824/master.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Brain Farm Skate Phantom Flex\",\n            \"description\": \"4K video\",\n            \"src\": \"https://sample.vodobox.net/skate_phantom_flex_4k/skate_phantom_flex_4k.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Video livestream - HLS\",\n            \"description\": \"Couleur 3 en vid\\xe9o (live)\",\n            \"src\": \"https://rtsc3video.akamaized.net/hls/live/2042837/c3video/3/playlist.m3u8?dw=0\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Video livestream with DVR - HLS\",\n            \"description\": \"Couleur 3 en vid\\xe9o (DVR)\",\n            \"src\": \"https://rtsc3video.akamaized.net/hls/live/2042837/c3video/3/playlist.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Video livestream with DVR and timestamps - HLS\",\n            \"description\": \"Tageschau\",\n            \"src\": \"https://tagesschau.akamaized.net/hls/live/2020115/tagesschau/tagesschau_1/master.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Audio livestream - HLS\",\n            \"description\": \"Couleur 3 (DVR)\",\n            \"src\": \"https://lsaplus.swisstxt.ch/audio/couleur3_96.stream/playlist.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Apple Basic 4:3\",\n            \"description\": \"4x3 aspect ratio, H.264 @ 30Hz\",\n            \"src\": \"https://devstreaming-cdn.apple.com/videos/streaming/examples/bipbop_4x3/bipbop_4x3_variant.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Apple Basic 16:9\",\n            \"description\": \"16x9 aspect ratio, H.264 @ 30Hz\",\n            \"src\": \"https://devstreaming-cdn.apple.com/videos/streaming/examples/bipbop_16x9/bipbop_16x9_variant.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Apple Advanced 16:9 (TS)\",\n            \"description\": \"16x9 aspect ratio, H.264 @ 30Hz and 60Hz, Transport stream\",\n            \"src\": \"https://devstreaming-cdn.apple.com/videos/streaming/examples/img_bipbop_adv_example_ts/master.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Apple Advanced 16:9 (fMP4)\",\n            \"description\": \"16x9 aspect ratio, H.264 @ 30Hz and 60Hz, Fragmented MP4\",\n            \"src\": \"https://devstreaming-cdn.apple.com/videos/streaming/examples/img_bipbop_adv_example_fmp4/master.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Apple Advanced 16:9 (HEVC/H.264)\",\n            \"description\": \"16x9 aspect ratio, H.264 and HEVC @ 30Hz and 60Hz\",\n            \"src\": \"https://devstreaming-cdn.apple.com/videos/streaming/examples/bipbop_adv_example_hevc/master.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Apple Atmos\",\n            \"src\": \"https://devstreaming-cdn.apple.com/videos/streaming/examples/adv_dv_atmos/main.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Apple WWDC Keynote 2023\",\n            \"src\": \"https://events-delivery.apple.com/0105cftwpxxsfrpdwklppzjhjocakrsk/m3u8/vod_index-PQsoJoECcKHTYzphNkXohHsQWACugmET.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Apple tv trailer\",\n            \"description\": \"Lot of audios and subtitles choices\",\n            \"src\": \"https://play-edge.itunes.apple.com/WebObjects/MZPlayLocal.woa/hls/subscription/playlist.m3u8?cc=CH&svcId=tvs.vds.4021&a=1522121579&isExternal=true&brandId=tvs.sbd.4000&id=518077009&l=en-GB&aec=UHD\\n\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Multiple subtitles and audio tracks\",\n            \"description\": \"On some devices codec may crash\",\n            \"src\": \"https://bitmovin-a.akamaihd.net/content/sintel/hls/playlist.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"4K, HEVC\",\n            \"src\": \"https://cdn.bitmovin.com/content/encoding_test_dash_hls/4k/hls/4k_profile/master.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"VoD, single audio track\",\n            \"src\": \"https://bitmovin-a.akamaihd.net/content/MI201109210084_1/m3u8s/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"AES-128\",\n            \"src\": \"https://bitmovin-a.akamaihd.net/content/art-of-motion_drm/m3u8s/11331.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"HLS - Fragmented MP4\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.ism/.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"HLS - Alternate audio language\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-multi-lang.ism/.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"HLS - Audio only\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-multi-lang.ism/.m3u8?filter=(type!=%22video%22)\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"HLS - Trickplay\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/no-handler-origin/tears-of-steel/tears-of-steel-trickplay.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Limiting bandwidth use\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.ism/.m3u8?max_bitrate=800000\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Dynamic Track Selection\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.ism/.m3u8?filter=%28type%3D%3D%22audio%22%26%26systemBitrate%3C100000%29%7C%7C%28type%3D%3D%22video%22%26%26systemBitrate%3C1024000%29\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Pure live\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/live/stable/live.isml/.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Timeshift (5 minutes)\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/live/stable/live.isml/.m3u8?time_shift=300\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Live audio\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/live/stable/live.isml/.m3u8?filter=(type!=%22video%22)\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Pure live (scte35)\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/live/stable/scte35.isml/.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"fMP4, clear\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-fmp4.ism/.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"fMP4, HEVC 4K\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-hevc.ism/.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        },\n        {\n            \"title\": \"Test1\",\n            \"description\": \"Forced subtitles\",\n            \"src\": \"https://prd.vod-srgssr.ch/origin/1053457/fr/master.m3u8?complexSubs=true\",\n            \"type\": \"application/x-mpegURL\"\n        }\n    ],\n    \"DASH\": [\n        {\n            \"title\": \"VoD - Dash (H264)\",\n            \"src\": \"https://storage.googleapis.com/wvmedia/clear/h264/tears/tears.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"VoD - Dash Widewine cenc (H264)\",\n            \"src\": \"https://storage.googleapis.com/wvmedia/cenc/h264/tears/tears.mpd\",\n            \"type\": \"application/dash+xml\",\n            \"keySystems\": {\n                \"com.widevine.alpha\": \"https://proxy.uat.widevine.com/proxy?video_id=2015_tears&provider=widevine_test\"\n            }\n        },\n        {\n            \"title\": \"VoD - Dash (H265)\",\n            \"src\": \"https://storage.googleapis.com/wvmedia/clear/hevc/tears/tears.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"VoD - Dash widewine cenc (H265)\",\n            \"src\": \"https://storage.googleapis.com/wvmedia/cenc/hevc/tears/tears.mpd\",\n            \"type\": \"application/dash+xml\",\n            \"keySystems\": {\n                \"com.widevine.alpha\": \"https://proxy.uat.widevine.com/proxy?video_id=2015_tears&provider=widevine_test\"\n            }\n        },\n        {\n            \"title\": \"VoD - Dash - MP4\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.mp4/.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - Fragmented MP4\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.ism/.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - TrickPlay\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/no-handler-origin/tears-of-steel/tears-of-steel-trickplay.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - Tiled thumbnails (live/timeline)\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-tiled-thumbnails-timeline.ism/.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - Accessibility - hard of hearing\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-hoh-subs.ism/.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - Single - fragmented TTML\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-en.ism/.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - Multiple - RFC 5646 language tags\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-rfc5646.ism/.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - Multiple - fragmented TTML\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-ttml.ism/.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - Audio only\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-multi-lang.ism/.mpd?filter=(type!=%22video%22)\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - Multiple audio codecs\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-multi-codec.ism/.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - Alternate audio language\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-multi-lang.ism/.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - Accessibility - audio description\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-desc-aud.ism/.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - Pure live\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/live/stable/live.isml/.mpd\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - Timeshift (5 minutes)\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/live/stable/live.isml/.mpd?time_shift=300\",\n            \"type\": \"application/dash+xml\"\n        },\n        {\n            \"title\": \"Dash - DVB DASH low latency\",\n            \"src\": \"https://demo.unified-streaming.com/k8s/live/stable/live-low-latency.isml/.mpd\",\n            \"type\": \"application/dash+xml\"\n        }\n    ],\n    \"MP4\": [\n        {\n            \"title\": \"VOD - MP4\",\n            \"description\": \"The dig\",\n            \"src\": \"https://media.swissinfo.ch/media/video/dddaff93-c2cd-4b6e-bdad-55f75a519480/rendition/154a844b-de1d-4854-93c1-5c61cd07e98c.mp4\",\n            \"type\": \"video/mp4\"\n        },\n        {\n            \"title\": \"AVC Progressive\",\n            \"src\": \"https://bitmovin-a.akamaihd.net/content/MI201109210084_1/MI201109210084_mpeg-4_hd_high_1080p25_10mbits.mp4\",\n            \"type\": \"video/mp4\"\n        }\n    ],\n    \"AOD\": [\n        {\n            \"title\": \"Audio HLS\",\n            \"description\": \"Content with PTS rollover\",\n            \"src\": \"https://cdn.rts.ch/audio-sample/playlist.m3u8\",\n            \"type\": \"application/x-mpegURL\"\n        }\n    ]\n};\nvar $d2794e412c64e2be$export$2e2bcd8739ae039 = $d2794e412c64e2be$var$EXAMPLES;\n\n\n\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ function* $e0ecebd5da923169$export$871de8747c9eaa88(o, f) {\n    if (void 0 !== o) {\n        let i = 0;\n        for (const t of o)yield f(t, i++);\n    }\n}\n\n\n\n\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ function $5478b4ac633a513e$export$a55877ca9db47377(n, r, t) {\n    return n ? r(n) : t?.(n);\n}\n\n\n\n\nclass $a3ab66be9c16fbba$export$ab3b36b1d858cfdc extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static styles = [\n        (0, $356a447a83d57522$export$bca14c5b3b88a9c9),\n        (0, $356a447a83d57522$export$7f9953c70dacfd7f),\n        (0, $3233927aa82734f9$export$dbf350e5966cf602)`\n      .example-section p {\n        margin-bottom: 0;\n        color: var(--color-5);\n        font-size: var(--size-3);\n        text-align: left;\n      }`\n    ];\n    render() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <load-media-form @submit-media=\"${(e)=>(0, $54e2f009849dffbd$export$3c8d206a213df2ed)(e.detail)}\">\n      </load-media-form>\n\n      <!-- List of examples -->\n      <div class=\"fade-in\"\n           @animationend=\"${(e)=>e.target.classList.remove(\"fade-in\")}\">\n        ${(0, $e0ecebd5da923169$export$871de8747c9eaa88)(Object.entries((0, $d2794e412c64e2be$export$2e2bcd8739ae039)), ([section, examples])=>(0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n          <section class=\"example-section\" data-section=\"${section}\">\n            <h2 class=\"sticky\">${section}</h2>\n            ${(0, $e0ecebd5da923169$export$871de8747c9eaa88)(examples, (example)=>(0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n              <content-link title=\"${example.description || example.title}\"\n                            href=\"examples?${(0, $54e2f009849dffbd$export$7b3648a3edd9643f)(example)}\">\n                ${(0, $5478b4ac633a513e$export$a55877ca9db47377)(example.description, ()=>(0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n                    <span slot=\"description\">${example.title}</span>\n                `)}\n              </content-link>\n            `)}\n          </section>\n        `)}\n      </div>\n    `;\n    }\n}\ncustomElements.define(\"examples-page\", $a3ab66be9c16fbba$export$ab3b36b1d858cfdc);\n(0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).addRoute(\"examples\", \"examples-page\");\n\n\n\n\n\nvar $5ed491bf9cfc16f6$exports = {};\n$5ed491bf9cfc16f6$exports = \"@font-face{font-family:Material Icons;font-style:normal;font-weight:400;font-display:block;src:url(material-icons.5d000324.woff2)format(\\\"woff2\\\"),url(material-icons.130ad2eb.woff)format(\\\"woff\\\")}.material-icons{letter-spacing:normal;text-transform:none;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility;font-feature-settings:\\\"liga\\\";font-family:Material Icons;font-size:24px;font-style:normal;font-weight:400;line-height:1;display:inline-block}@font-face{font-family:Material Icons Outlined;font-style:normal;font-weight:400;font-display:block;src:url(material-icons-outlined.af2186d9.woff2)format(\\\"woff2\\\"),url(material-icons-outlined.25bc5969.woff)format(\\\"woff\\\")}.material-icons-outlined{letter-spacing:normal;text-transform:none;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility;font-feature-settings:\\\"liga\\\";font-family:Material Icons Outlined;font-size:24px;font-style:normal;font-weight:400;line-height:1;display:inline-block}@font-face{font-family:Material Icons Round;font-style:normal;font-weight:400;font-display:block;src:url(material-icons-round.97b28aeb.woff2)format(\\\"woff2\\\"),url(material-icons-round.7e0c9743.woff)format(\\\"woff\\\")}.material-icons-round{letter-spacing:normal;text-transform:none;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility;font-feature-settings:\\\"liga\\\";font-family:Material Icons Round;font-size:24px;font-style:normal;font-weight:400;line-height:1;display:inline-block}@font-face{font-family:Material Icons Sharp;font-style:normal;font-weight:400;font-display:block;src:url(material-icons-sharp.eddc8920.woff2)format(\\\"woff2\\\"),url(material-icons-sharp.15a9d487.woff)format(\\\"woff\\\")}.material-icons-sharp{letter-spacing:normal;text-transform:none;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility;font-feature-settings:\\\"liga\\\";font-family:Material Icons Sharp;font-size:24px;font-style:normal;font-weight:400;line-height:1;display:inline-block}@font-face{font-family:Material Icons Two Tone;font-style:normal;font-weight:400;font-display:block;src:url(material-icons-two-tone.5a8a34ee.woff2)format(\\\"woff2\\\"),url(material-icons-two-tone.e63ec37b.woff)format(\\\"woff\\\")}.material-icons-two-tone{letter-spacing:normal;text-transform:none;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility;font-feature-settings:\\\"liga\\\";font-family:Material Icons Two Tone;font-size:24px;font-style:normal;font-weight:400;line-height:1;display:inline-block}.mi{letter-spacing:normal;text-transform:none;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility;font-feature-settings:\\\"liga\\\";font-family:Material Icons;font-size:24px;font-style:normal;font-weight:400;line-height:1;display:inline-block}.mi-outlined{letter-spacing:normal;text-transform:none;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility;font-feature-settings:\\\"liga\\\";font-family:Material Icons Outlined;font-size:24px;font-style:normal;font-weight:400;line-height:1;display:inline-block}.mi-round{letter-spacing:normal;text-transform:none;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility;font-feature-settings:\\\"liga\\\";font-family:Material Icons Round;font-size:24px;font-style:normal;font-weight:400;line-height:1;display:inline-block}.mi-sharp{letter-spacing:normal;text-transform:none;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility;font-feature-settings:\\\"liga\\\";font-family:Material Icons Sharp;font-size:24px;font-style:normal;font-weight:400;line-height:1;display:inline-block}.mi-two-tone{letter-spacing:normal;text-transform:none;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizelegibility;font-feature-settings:\\\"liga\\\";font-family:Material Icons Two Tone;font-size:24px;font-style:normal;font-weight:400;line-height:1;display:inline-block}.mi-123:before{content:\\\"\\\"}.mi-360:before{content:\\\"\\\"}.mi-10k:before{content:\\\"\\\"}.mi-10mp:before{content:\\\"\\\"}.mi-11mp:before{content:\\\"\\\"}.mi-12mp:before{content:\\\"\\\"}.mi-13mp:before{content:\\\"\\\"}.mi-14mp:before{content:\\\"\\\"}.mi-15mp:before{content:\\\"\\\"}.mi-16mp:before{content:\\\"\\\"}.mi-17mp:before{content:\\\"\\\"}.mi-18-up-rating:before{content:\\\"\\\"}.mi-18mp:before{content:\\\"\\\"}.mi-19mp:before{content:\\\"\\\"}.mi-1k:before{content:\\\"\\\"}.mi-1k-plus:before{content:\\\"\\\"}.mi-1x-mobiledata:before{content:\\\"\\\"}.mi-20mp:before{content:\\\"\\\"}.mi-21mp:before{content:\\\"\\\"}.mi-22mp:before{content:\\\"\\\"}.mi-23mp:before{content:\\\"\\\"}.mi-24mp:before{content:\\\"\\\"}.mi-2k:before{content:\\\"\\\"}.mi-2k-plus:before{content:\\\"\\\"}.mi-2mp:before{content:\\\"\\\"}.mi-30fps:before{content:\\\"\\\"}.mi-30fps-select:before{content:\\\"\\\"}.mi-3d-rotation:before{content:\\\"\\\"}.mi-3g-mobiledata:before{content:\\\"\\\"}.mi-3k:before{content:\\\"\\\"}.mi-3k-plus:before{content:\\\"\\\"}.mi-3mp:before{content:\\\"\\\"}.mi-3p:before{content:\\\"\\\"}.mi-4g-mobiledata:before{content:\\\"\\\"}.mi-4g-plus-mobiledata:before{content:\\\"\\\"}.mi-4k:before{content:\\\"\\\"}.mi-4k-plus:before{content:\\\"\\\"}.mi-4mp:before{content:\\\"\\\"}.mi-5g:before{content:\\\"\\\"}.mi-5k:before{content:\\\"\\\"}.mi-5k-plus:before{content:\\\"\\\"}.mi-5mp:before{content:\\\"\\\"}.mi-60fps:before{content:\\\"\\\"}.mi-60fps-select:before{content:\\\"\\\"}.mi-6-ft-apart:before{content:\\\"\\\"}.mi-6k:before{content:\\\"\\\"}.mi-6k-plus:before{content:\\\"\\\"}.mi-6mp:before{content:\\\"\\\"}.mi-7k:before{content:\\\"\\\"}.mi-7k-plus:before{content:\\\"\\\"}.mi-7mp:before{content:\\\"\\\"}.mi-8k:before{content:\\\"\\\"}.mi-8k-plus:before{content:\\\"\\\"}.mi-8mp:before{content:\\\"\\\"}.mi-9k:before{content:\\\"\\\"}.mi-9k-plus:before{content:\\\"\\\"}.mi-9mp:before{content:\\\"\\\"}.mi-abc:before{content:\\\"\\\"}.mi-ac-unit:before{content:\\\"\\\"}.mi-access-alarm:before{content:\\\"\\\"}.mi-access-alarms:before{content:\\\"\\\"}.mi-access-time:before{content:\\\"\\\"}.mi-access-time-filled:before{content:\\\"\\\"}.mi-accessibility:before{content:\\\"\\\"}.mi-accessibility-new:before{content:\\\"\\\"}.mi-accessible:before{content:\\\"\\\"}.mi-accessible-forward:before{content:\\\"\\\"}.mi-account-balance:before{content:\\\"\\\"}.mi-account-balance-wallet:before{content:\\\"\\\"}.mi-account-box:before{content:\\\"\\\"}.mi-account-circle:before{content:\\\"\\\"}.mi-account-tree:before{content:\\\"\\\"}.mi-ad-units:before{content:\\\"\\\"}.mi-adb:before{content:\\\"\\\"}.mi-add:before{content:\\\"\\\"}.mi-add-a-photo:before{content:\\\"\\\"}.mi-add-alarm:before{content:\\\"\\\"}.mi-add-alert:before{content:\\\"\\\"}.mi-add-box:before{content:\\\"\\\"}.mi-add-business:before{content:\\\"\\\"}.mi-add-call:before{content:\\\"\\\"}.mi-add-card:before{content:\\\"\\\"}.mi-add-chart:before{content:\\\"\\\"}.mi-add-circle:before{content:\\\"\\\"}.mi-add-circle-outline:before{content:\\\"\\\"}.mi-add-comment:before{content:\\\"\\\"}.mi-add-home:before{content:\\\"\\\"}.mi-add-home-work:before{content:\\\"\\\"}.mi-add-ic-call:before{content:\\\"\\\"}.mi-add-link:before{content:\\\"\\\"}.mi-add-location:before{content:\\\"\\\"}.mi-add-location-alt:before{content:\\\"\\\"}.mi-add-moderator:before{content:\\\"\\\"}.mi-add-photo-alternate:before{content:\\\"\\\"}.mi-add-reaction:before{content:\\\"\\\"}.mi-add-road:before{content:\\\"\\\"}.mi-add-shopping-cart:before{content:\\\"\\\"}.mi-add-task:before{content:\\\"\\\"}.mi-add-to-drive:before{content:\\\"\\\"}.mi-add-to-home-screen:before{content:\\\"\\\"}.mi-add-to-photos:before{content:\\\"\\\"}.mi-add-to-queue:before{content:\\\"\\\"}.mi-addchart:before{content:\\\"\\\"}.mi-adf-scanner:before{content:\\\"\\\"}.mi-adjust:before{content:\\\"\\\"}.mi-admin-panel-settings:before{content:\\\"\\\"}.mi-adobe:before{content:\\\"\\\"}.mi-ads-click:before{content:\\\"\\\"}.mi-agriculture:before{content:\\\"\\\"}.mi-air:before{content:\\\"\\\"}.mi-airline-seat-flat:before{content:\\\"\\\"}.mi-airline-seat-flat-angled:before{content:\\\"\\\"}.mi-airline-seat-individual-suite:before{content:\\\"\\\"}.mi-airline-seat-legroom-extra:before{content:\\\"\\\"}.mi-airline-seat-legroom-normal:before{content:\\\"\\\"}.mi-airline-seat-legroom-reduced:before{content:\\\"\\\"}.mi-airline-seat-recline-extra:before{content:\\\"\\\"}.mi-airline-seat-recline-normal:before{content:\\\"\\\"}.mi-airline-stops:before{content:\\\"\\\"}.mi-airlines:before{content:\\\"\\\"}.mi-airplane-ticket:before{content:\\\"\\\"}.mi-airplanemode-active:before{content:\\\"\\\"}.mi-airplanemode-inactive:before,.mi-airplanemode-off:before{content:\\\"\\\"}.mi-airplanemode-on:before{content:\\\"\\\"}.mi-airplay:before{content:\\\"\\\"}.mi-airport-shuttle:before{content:\\\"\\\"}.mi-alarm:before{content:\\\"\\\"}.mi-alarm-add:before{content:\\\"\\\"}.mi-alarm-off:before{content:\\\"\\\"}.mi-alarm-on:before{content:\\\"\\\"}.mi-album:before{content:\\\"\\\"}.mi-align-horizontal-center:before{content:\\\"\\\"}.mi-align-horizontal-left:before{content:\\\"\\\"}.mi-align-horizontal-right:before{content:\\\"\\\"}.mi-align-vertical-bottom:before{content:\\\"\\\"}.mi-align-vertical-center:before{content:\\\"\\\"}.mi-align-vertical-top:before{content:\\\"\\\"}.mi-all-inbox:before{content:\\\"\\\"}.mi-all-inclusive:before{content:\\\"\\\"}.mi-all-out:before{content:\\\"\\\"}.mi-alt-route:before{content:\\\"\\\"}.mi-alternate-email:before{content:\\\"\\\"}.mi-amp-stories:before{content:\\\"\\\"}.mi-analytics:before{content:\\\"\\\"}.mi-anchor:before{content:\\\"\\\"}.mi-android:before{content:\\\"\\\"}.mi-animation:before{content:\\\"\\\"}.mi-announcement:before{content:\\\"\\\"}.mi-aod:before{content:\\\"\\\"}.mi-apartment:before{content:\\\"\\\"}.mi-api:before{content:\\\"\\\"}.mi-app-blocking:before{content:\\\"\\\"}.mi-app-registration:before{content:\\\"\\\"}.mi-app-settings-alt:before{content:\\\"\\\"}.mi-app-shortcut:before{content:\\\"\\\"}.mi-apple:before{content:\\\"\\\"}.mi-approval:before{content:\\\"\\\"}.mi-apps:before{content:\\\"\\\"}.mi-apps-outage:before{content:\\\"\\\"}.mi-architecture:before{content:\\\"\\\"}.mi-archive:before{content:\\\"\\\"}.mi-area-chart:before{content:\\\"\\\"}.mi-arrow-back:before{content:\\\"\\\"}.mi-arrow-back-ios:before{content:\\\"\\\"}.mi-arrow-back-ios-new:before{content:\\\"\\\"}.mi-arrow-circle-down:before{content:\\\"\\\"}.mi-arrow-circle-left:before{content:\\\"\\\"}.mi-arrow-circle-right:before{content:\\\"\\\"}.mi-arrow-circle-up:before{content:\\\"\\\"}.mi-arrow-downward:before{content:\\\"\\\"}.mi-arrow-drop-down:before{content:\\\"\\\"}.mi-arrow-drop-down-circle:before{content:\\\"\\\"}.mi-arrow-drop-up:before{content:\\\"\\\"}.mi-arrow-forward:before{content:\\\"\\\"}.mi-arrow-forward-ios:before{content:\\\"\\\"}.mi-arrow-left:before{content:\\\"\\\"}.mi-arrow-outward:before{content:\\\"\\\"}.mi-arrow-right:before{content:\\\"\\\"}.mi-arrow-right-alt:before{content:\\\"\\\"}.mi-arrow-upward:before{content:\\\"\\\"}.mi-art-track:before{content:\\\"\\\"}.mi-article:before{content:\\\"\\\"}.mi-aspect-ratio:before{content:\\\"\\\"}.mi-assessment:before{content:\\\"\\\"}.mi-assignment:before{content:\\\"\\\"}.mi-assignment-add:before{content:\\\"\\\"}.mi-assignment-ind:before{content:\\\"\\\"}.mi-assignment-late:before{content:\\\"\\\"}.mi-assignment-return:before{content:\\\"\\\"}.mi-assignment-returned:before{content:\\\"\\\"}.mi-assignment-turned-in:before{content:\\\"\\\"}.mi-assist-walker:before{content:\\\"\\\"}.mi-assistant:before{content:\\\"\\\"}.mi-assistant-direction:before{content:\\\"\\\"}.mi-assistant-navigation:before{content:\\\"\\\"}.mi-assistant-photo:before{content:\\\"\\\"}.mi-assured-workload:before{content:\\\"\\\"}.mi-atm:before{content:\\\"\\\"}.mi-attach-email:before{content:\\\"\\\"}.mi-attach-file:before{content:\\\"\\\"}.mi-attach-money:before{content:\\\"\\\"}.mi-attachment:before{content:\\\"\\\"}.mi-attractions:before{content:\\\"\\\"}.mi-attribution:before{content:\\\"\\\"}.mi-audio-file:before{content:\\\"\\\"}.mi-audiotrack:before{content:\\\"\\\"}.mi-auto-awesome:before{content:\\\"\\\"}.mi-auto-awesome-mosaic:before{content:\\\"\\\"}.mi-auto-awesome-motion:before{content:\\\"\\\"}.mi-auto-delete:before{content:\\\"\\\"}.mi-auto-fix-high:before{content:\\\"\\\"}.mi-auto-fix-normal:before{content:\\\"\\\"}.mi-auto-fix-off:before{content:\\\"\\\"}.mi-auto-graph:before{content:\\\"\\\"}.mi-auto-mode:before{content:\\\"\\\"}.mi-auto-stories:before{content:\\\"\\\"}.mi-autofps-select:before{content:\\\"\\\"}.mi-autorenew:before{content:\\\"\\\"}.mi-av-timer:before{content:\\\"\\\"}.mi-baby-changing-station:before{content:\\\"\\\"}.mi-back-hand:before{content:\\\"\\\"}.mi-backpack:before{content:\\\"\\\"}.mi-backspace:before{content:\\\"\\\"}.mi-backup:before{content:\\\"\\\"}.mi-backup-table:before{content:\\\"\\\"}.mi-badge:before{content:\\\"\\\"}.mi-bakery-dining:before{content:\\\"\\\"}.mi-balance:before{content:\\\"\\\"}.mi-balcony:before{content:\\\"\\\"}.mi-ballot:before{content:\\\"\\\"}.mi-bar-chart:before{content:\\\"\\\"}.mi-barcode-reader:before{content:\\\"\\\"}.mi-batch-prediction:before{content:\\\"\\\"}.mi-bathroom:before{content:\\\"\\\"}.mi-bathtub:before{content:\\\"\\\"}.mi-battery-0-bar:before{content:\\\"\\\"}.mi-battery-1-bar:before{content:\\\"\\\"}.mi-battery-20:before{content:\\\"\\\"}.mi-battery-2-bar:before{content:\\\"\\\"}.mi-battery-30:before{content:\\\"\\\"}.mi-battery-3-bar:before{content:\\\"\\\"}.mi-battery-4-bar:before{content:\\\"\\\"}.mi-battery-50:before{content:\\\"\\\"}.mi-battery-5-bar:before{content:\\\"\\\"}.mi-battery-60:before{content:\\\"\\\"}.mi-battery-6-bar:before{content:\\\"\\\"}.mi-battery-80:before{content:\\\"\\\"}.mi-battery-90:before{content:\\\"\\\"}.mi-battery-alert:before{content:\\\"\\\"}.mi-battery-charging-20:before{content:\\\"\\\"}.mi-battery-charging-30:before{content:\\\"\\\"}.mi-battery-charging-50:before{content:\\\"\\\"}.mi-battery-charging-60:before{content:\\\"\\\"}.mi-battery-charging-80:before{content:\\\"\\\"}.mi-battery-charging-90:before{content:\\\"\\\"}.mi-battery-charging-full:before{content:\\\"\\\"}.mi-battery-full:before{content:\\\"\\\"}.mi-battery-saver:before{content:\\\"\\\"}.mi-battery-std:before{content:\\\"\\\"}.mi-battery-unknown:before{content:\\\"\\\"}.mi-beach-access:before{content:\\\"\\\"}.mi-bed:before{content:\\\"\\\"}.mi-bedroom-baby:before{content:\\\"\\\"}.mi-bedroom-child:before{content:\\\"\\\"}.mi-bedroom-parent:before{content:\\\"\\\"}.mi-bedtime:before{content:\\\"\\\"}.mi-bedtime-off:before{content:\\\"\\\"}.mi-beenhere:before{content:\\\"\\\"}.mi-bento:before{content:\\\"\\\"}.mi-bike-scooter:before{content:\\\"\\\"}.mi-biotech:before{content:\\\"\\\"}.mi-blender:before{content:\\\"\\\"}.mi-blind:before{content:\\\"\\\"}.mi-blinds:before{content:\\\"\\\"}.mi-blinds-closed:before{content:\\\"\\\"}.mi-block:before{content:\\\"\\\"}.mi-block-flipped:before{content:\\\"\\\"}.mi-bloodtype:before{content:\\\"\\\"}.mi-bluetooth:before{content:\\\"\\\"}.mi-bluetooth-audio:before{content:\\\"\\\"}.mi-bluetooth-connected:before{content:\\\"\\\"}.mi-bluetooth-disabled:before{content:\\\"\\\"}.mi-bluetooth-drive:before{content:\\\"\\\"}.mi-bluetooth-searching:before{content:\\\"\\\"}.mi-blur-circular:before{content:\\\"\\\"}.mi-blur-linear:before{content:\\\"\\\"}.mi-blur-off:before{content:\\\"\\\"}.mi-blur-on:before{content:\\\"\\\"}.mi-bolt:before{content:\\\"\\\"}.mi-book:before{content:\\\"\\\"}.mi-book-online:before{content:\\\"\\\"}.mi-bookmark:before{content:\\\"\\\"}.mi-bookmark-add:before{content:\\\"\\\"}.mi-bookmark-added:before{content:\\\"\\\"}.mi-bookmark-border:before,.mi-bookmark-outline:before{content:\\\"\\\"}.mi-bookmark-remove:before{content:\\\"\\\"}.mi-bookmarks:before{content:\\\"\\\"}.mi-border-all:before{content:\\\"\\\"}.mi-border-bottom:before{content:\\\"\\\"}.mi-border-clear:before{content:\\\"\\\"}.mi-border-color:before{content:\\\"\\\"}.mi-border-horizontal:before{content:\\\"\\\"}.mi-border-inner:before{content:\\\"\\\"}.mi-border-left:before{content:\\\"\\\"}.mi-border-outer:before{content:\\\"\\\"}.mi-border-right:before{content:\\\"\\\"}.mi-border-style:before{content:\\\"\\\"}.mi-border-top:before{content:\\\"\\\"}.mi-border-vertical:before{content:\\\"\\\"}.mi-boy:before{content:\\\"\\\"}.mi-branding-watermark:before{content:\\\"\\\"}.mi-breakfast-dining:before{content:\\\"\\\"}.mi-brightness-1:before{content:\\\"\\\"}.mi-brightness-2:before{content:\\\"\\\"}.mi-brightness-3:before{content:\\\"\\\"}.mi-brightness-4:before{content:\\\"\\\"}.mi-brightness-5:before{content:\\\"\\\"}.mi-brightness-6:before{content:\\\"\\\"}.mi-brightness-7:before{content:\\\"\\\"}.mi-brightness-auto:before{content:\\\"\\\"}.mi-brightness-high:before{content:\\\"\\\"}.mi-brightness-low:before{content:\\\"\\\"}.mi-brightness-medium:before{content:\\\"\\\"}.mi-broadcast-on-home:before{content:\\\"\\\"}.mi-broadcast-on-personal:before{content:\\\"\\\"}.mi-broken-image:before{content:\\\"\\\"}.mi-browse-gallery:before{content:\\\"\\\"}.mi-browser-not-supported:before{content:\\\"\\\"}.mi-browser-updated:before{content:\\\"\\\"}.mi-brunch-dining:before{content:\\\"\\\"}.mi-brush:before{content:\\\"\\\"}.mi-bubble-chart:before{content:\\\"\\\"}.mi-bug-report:before{content:\\\"\\\"}.mi-build:before{content:\\\"\\\"}.mi-build-circle:before{content:\\\"\\\"}.mi-bungalow:before{content:\\\"\\\"}.mi-burst-mode:before{content:\\\"\\\"}.mi-bus-alert:before{content:\\\"\\\"}.mi-business:before{content:\\\"\\\"}.mi-business-center:before{content:\\\"\\\"}.mi-cabin:before{content:\\\"\\\"}.mi-cable:before{content:\\\"\\\"}.mi-cached:before{content:\\\"\\\"}.mi-cake:before{content:\\\"\\\"}.mi-calculate:before{content:\\\"\\\"}.mi-calendar-month:before{content:\\\"\\\"}.mi-calendar-today:before{content:\\\"\\\"}.mi-calendar-view-day:before{content:\\\"\\\"}.mi-calendar-view-month:before{content:\\\"\\\"}.mi-calendar-view-week:before{content:\\\"\\\"}.mi-call:before{content:\\\"\\\"}.mi-call-end:before{content:\\\"\\\"}.mi-call-made:before{content:\\\"\\\"}.mi-call-merge:before{content:\\\"\\\"}.mi-call-missed:before{content:\\\"\\\"}.mi-call-missed-outgoing:before{content:\\\"\\\"}.mi-call-received:before{content:\\\"\\\"}.mi-call-split:before{content:\\\"\\\"}.mi-call-to-action:before{content:\\\"\\\"}.mi-camera:before{content:\\\"\\\"}.mi-camera-alt:before{content:\\\"\\\"}.mi-camera-enhance:before{content:\\\"\\\"}.mi-camera-front:before{content:\\\"\\\"}.mi-camera-indoor:before{content:\\\"\\\"}.mi-camera-outdoor:before{content:\\\"\\\"}.mi-camera-rear:before{content:\\\"\\\"}.mi-camera-roll:before{content:\\\"\\\"}.mi-cameraswitch:before{content:\\\"\\\"}.mi-campaign:before{content:\\\"\\\"}.mi-cancel:before{content:\\\"\\\"}.mi-cancel-presentation:before{content:\\\"\\\"}.mi-cancel-schedule-send:before{content:\\\"\\\"}.mi-candlestick-chart:before{content:\\\"\\\"}.mi-car-crash:before{content:\\\"\\\"}.mi-car-rental:before{content:\\\"\\\"}.mi-car-repair:before{content:\\\"\\\"}.mi-card-giftcard:before{content:\\\"\\\"}.mi-card-membership:before{content:\\\"\\\"}.mi-card-travel:before{content:\\\"\\\"}.mi-carpenter:before{content:\\\"\\\"}.mi-cases:before{content:\\\"\\\"}.mi-casino:before{content:\\\"\\\"}.mi-cast:before{content:\\\"\\\"}.mi-cast-connected:before{content:\\\"\\\"}.mi-cast-for-education:before{content:\\\"\\\"}.mi-castle:before{content:\\\"\\\"}.mi-catching-pokemon:before{content:\\\"\\\"}.mi-category:before{content:\\\"\\\"}.mi-celebration:before{content:\\\"\\\"}.mi-cell-tower:before{content:\\\"\\\"}.mi-cell-wifi:before{content:\\\"\\\"}.mi-center-focus-strong:before{content:\\\"\\\"}.mi-center-focus-weak:before{content:\\\"\\\"}.mi-chair:before{content:\\\"\\\"}.mi-chair-alt:before{content:\\\"\\\"}.mi-chalet:before{content:\\\"\\\"}.mi-change-circle:before{content:\\\"\\\"}.mi-change-history:before{content:\\\"\\\"}.mi-charging-station:before{content:\\\"\\\"}.mi-chat:before{content:\\\"\\\"}.mi-chat-bubble:before{content:\\\"\\\"}.mi-chat-bubble-outline:before{content:\\\"\\\"}.mi-check:before{content:\\\"\\\"}.mi-check-box:before{content:\\\"\\\"}.mi-check-box-outline-blank:before{content:\\\"\\\"}.mi-check-circle:before{content:\\\"\\\"}.mi-check-circle-outline:before{content:\\\"\\\"}.mi-checklist:before{content:\\\"\\\"}.mi-checklist-rtl:before{content:\\\"\\\"}.mi-checkroom:before{content:\\\"\\\"}.mi-chevron-left:before{content:\\\"\\\"}.mi-chevron-right:before{content:\\\"\\\"}.mi-child-care:before{content:\\\"\\\"}.mi-child-friendly:before{content:\\\"\\\"}.mi-chrome-reader-mode:before{content:\\\"\\\"}.mi-church:before{content:\\\"\\\"}.mi-circle:before{content:\\\"\\\"}.mi-circle-notifications:before{content:\\\"\\\"}.mi-class:before{content:\\\"\\\"}.mi-clean-hands:before{content:\\\"\\\"}.mi-cleaning-services:before{content:\\\"\\\"}.mi-clear:before{content:\\\"\\\"}.mi-clear-all:before{content:\\\"\\\"}.mi-close:before{content:\\\"\\\"}.mi-close-fullscreen:before{content:\\\"\\\"}.mi-closed-caption:before{content:\\\"\\\"}.mi-closed-caption-disabled:before{content:\\\"\\\"}.mi-closed-caption-off:before{content:\\\"\\\"}.mi-cloud:before{content:\\\"\\\"}.mi-cloud-circle:before{content:\\\"\\\"}.mi-cloud-done:before{content:\\\"\\\"}.mi-cloud-download:before{content:\\\"\\\"}.mi-cloud-off:before{content:\\\"\\\"}.mi-cloud-queue:before{content:\\\"\\\"}.mi-cloud-sync:before{content:\\\"\\\"}.mi-cloud-upload:before{content:\\\"\\\"}.mi-cloudy-snowing:before{content:\\\"\\\"}.mi-co2:before{content:\\\"\\\"}.mi-co-present:before{content:\\\"\\\"}.mi-code:before{content:\\\"\\\"}.mi-code-off:before{content:\\\"\\\"}.mi-coffee:before{content:\\\"\\\"}.mi-coffee-maker:before{content:\\\"\\\"}.mi-collections:before{content:\\\"\\\"}.mi-collections-bookmark:before{content:\\\"\\\"}.mi-color-lens:before{content:\\\"\\\"}.mi-colorize:before{content:\\\"\\\"}.mi-comment:before{content:\\\"\\\"}.mi-comment-bank:before{content:\\\"\\\"}.mi-comments-disabled:before{content:\\\"\\\"}.mi-commit:before{content:\\\"\\\"}.mi-commute:before{content:\\\"\\\"}.mi-compare:before{content:\\\"\\\"}.mi-compare-arrows:before{content:\\\"\\\"}.mi-compass-calibration:before{content:\\\"\\\"}.mi-compost:before{content:\\\"\\\"}.mi-compress:before{content:\\\"\\\"}.mi-computer:before{content:\\\"\\\"}.mi-confirmation-num:before,.mi-confirmation-number:before{content:\\\"\\\"}.mi-connect-without-contact:before{content:\\\"\\\"}.mi-connected-tv:before{content:\\\"\\\"}.mi-connecting-airports:before{content:\\\"\\\"}.mi-construction:before{content:\\\"\\\"}.mi-contact-emergency:before{content:\\\"\\\"}.mi-contact-mail:before{content:\\\"\\\"}.mi-contact-page:before{content:\\\"\\\"}.mi-contact-phone:before{content:\\\"\\\"}.mi-contact-support:before{content:\\\"\\\"}.mi-contactless:before{content:\\\"\\\"}.mi-contacts:before{content:\\\"\\\"}.mi-content-copy:before{content:\\\"\\\"}.mi-content-cut:before{content:\\\"\\\"}.mi-content-paste:before{content:\\\"\\\"}.mi-content-paste-go:before{content:\\\"\\\"}.mi-content-paste-off:before{content:\\\"\\\"}.mi-content-paste-search:before{content:\\\"\\\"}.mi-contrast:before{content:\\\"\\\"}.mi-control-camera:before{content:\\\"\\\"}.mi-control-point:before{content:\\\"\\\"}.mi-control-point-duplicate:before{content:\\\"\\\"}.mi-conveyor-belt:before{content:\\\"\\\"}.mi-cookie:before{content:\\\"\\\"}.mi-copy:before{content:\\\"\\\"}.mi-copy-all:before{content:\\\"\\\"}.mi-copyright:before{content:\\\"\\\"}.mi-coronavirus:before{content:\\\"\\\"}.mi-corporate-fare:before{content:\\\"\\\"}.mi-cottage:before{content:\\\"\\\"}.mi-countertops:before{content:\\\"\\\"}.mi-create:before{content:\\\"\\\"}.mi-create-new-folder:before{content:\\\"\\\"}.mi-credit-card:before{content:\\\"\\\"}.mi-credit-card-off:before{content:\\\"\\\"}.mi-credit-score:before{content:\\\"\\\"}.mi-crib:before{content:\\\"\\\"}.mi-crisis-alert:before{content:\\\"\\\"}.mi-crop:before{content:\\\"\\\"}.mi-crop-16-9:before{content:\\\"\\\"}.mi-crop-3-2:before{content:\\\"\\\"}.mi-crop-5-4:before{content:\\\"\\\"}.mi-crop-7-5:before{content:\\\"\\\"}.mi-crop-din:before{content:\\\"\\\"}.mi-crop-free:before{content:\\\"\\\"}.mi-crop-landscape:before{content:\\\"\\\"}.mi-crop-original:before{content:\\\"\\\"}.mi-crop-portrait:before{content:\\\"\\\"}.mi-crop-rotate:before{content:\\\"\\\"}.mi-crop-square:before{content:\\\"\\\"}.mi-cruelty-free:before{content:\\\"\\\"}.mi-css:before{content:\\\"\\\"}.mi-currency-bitcoin:before{content:\\\"\\\"}.mi-currency-exchange:before{content:\\\"\\\"}.mi-currency-franc:before{content:\\\"\\\"}.mi-currency-lira:before{content:\\\"\\\"}.mi-currency-pound:before{content:\\\"\\\"}.mi-currency-ruble:before{content:\\\"\\\"}.mi-currency-rupee:before{content:\\\"\\\"}.mi-currency-yen:before{content:\\\"\\\"}.mi-currency-yuan:before{content:\\\"\\\"}.mi-curtains:before{content:\\\"\\\"}.mi-curtains-closed:before{content:\\\"\\\"}.mi-cut:before{content:\\\"\\\"}.mi-cyclone:before{content:\\\"\\\"}.mi-dangerous:before{content:\\\"\\\"}.mi-dark-mode:before{content:\\\"\\\"}.mi-dashboard:before{content:\\\"\\\"}.mi-dashboard-customize:before{content:\\\"\\\"}.mi-data-array:before{content:\\\"\\\"}.mi-data-exploration:before{content:\\\"\\\"}.mi-data-object:before{content:\\\"\\\"}.mi-data-saver-off:before{content:\\\"\\\"}.mi-data-saver-on:before{content:\\\"\\\"}.mi-data-thresholding:before{content:\\\"\\\"}.mi-data-usage:before{content:\\\"\\\"}.mi-dataset:before{content:\\\"\\\"}.mi-dataset-linked:before{content:\\\"\\\"}.mi-date-range:before{content:\\\"\\\"}.mi-deblur:before{content:\\\"\\\"}.mi-deck:before{content:\\\"\\\"}.mi-dehaze:before{content:\\\"\\\"}.mi-delete:before{content:\\\"\\\"}.mi-delete-forever:before{content:\\\"\\\"}.mi-delete-outline:before{content:\\\"\\\"}.mi-delete-sweep:before{content:\\\"\\\"}.mi-delivery-dining:before{content:\\\"\\\"}.mi-density-large:before{content:\\\"\\\"}.mi-density-medium:before{content:\\\"\\\"}.mi-density-small:before{content:\\\"\\\"}.mi-departure-board:before{content:\\\"\\\"}.mi-description:before{content:\\\"\\\"}.mi-deselect:before{content:\\\"\\\"}.mi-design-services:before{content:\\\"\\\"}.mi-desk:before{content:\\\"\\\"}.mi-desktop-access-disabled:before{content:\\\"\\\"}.mi-desktop-mac:before{content:\\\"\\\"}.mi-desktop-windows:before{content:\\\"\\\"}.mi-details:before{content:\\\"\\\"}.mi-developer-board:before{content:\\\"\\\"}.mi-developer-board-off:before{content:\\\"\\\"}.mi-developer-mode:before{content:\\\"\\\"}.mi-device-hub:before{content:\\\"\\\"}.mi-device-thermostat:before{content:\\\"\\\"}.mi-device-unknown:before{content:\\\"\\\"}.mi-devices:before{content:\\\"\\\"}.mi-devices-fold:before{content:\\\"\\\"}.mi-devices-other:before{content:\\\"\\\"}.mi-dew-point:before{content:\\\"\\\"}.mi-dialer-sip:before{content:\\\"\\\"}.mi-dialpad:before{content:\\\"\\\"}.mi-diamond:before{content:\\\"\\\"}.mi-difference:before{content:\\\"\\\"}.mi-dining:before{content:\\\"\\\"}.mi-dinner-dining:before{content:\\\"\\\"}.mi-directions:before{content:\\\"\\\"}.mi-directions-bike:before{content:\\\"\\\"}.mi-directions-boat:before{content:\\\"\\\"}.mi-directions-boat-filled:before{content:\\\"\\\"}.mi-directions-bus:before{content:\\\"\\\"}.mi-directions-bus-filled:before{content:\\\"\\\"}.mi-directions-car:before{content:\\\"\\\"}.mi-directions-car-filled:before{content:\\\"\\\"}.mi-directions-ferry:before{content:\\\"\\\"}.mi-directions-off:before{content:\\\"\\\"}.mi-directions-railway:before{content:\\\"\\\"}.mi-directions-railway-filled:before{content:\\\"\\\"}.mi-directions-run:before{content:\\\"\\\"}.mi-directions-subway:before{content:\\\"\\\"}.mi-directions-subway-filled:before{content:\\\"\\\"}.mi-directions-train:before{content:\\\"\\\"}.mi-directions-transit:before{content:\\\"\\\"}.mi-directions-transit-filled:before{content:\\\"\\\"}.mi-directions-walk:before{content:\\\"\\\"}.mi-dirty-lens:before{content:\\\"\\\"}.mi-disabled-by-default:before{content:\\\"\\\"}.mi-disabled-visible:before{content:\\\"\\\"}.mi-disc-full:before{content:\\\"\\\"}.mi-discord:before{content:\\\"\\\"}.mi-discount:before{content:\\\"\\\"}.mi-display-settings:before{content:\\\"\\\"}.mi-diversity-1:before{content:\\\"\\\"}.mi-diversity-2:before{content:\\\"\\\"}.mi-diversity-3:before{content:\\\"\\\"}.mi-dnd-forwardslash:before{content:\\\"\\\"}.mi-dns:before{content:\\\"\\\"}.mi-do-disturb:before{content:\\\"\\\"}.mi-do-disturb-alt:before{content:\\\"\\\"}.mi-do-disturb-off:before{content:\\\"\\\"}.mi-do-disturb-on:before{content:\\\"\\\"}.mi-do-not-disturb:before{content:\\\"\\\"}.mi-do-not-disturb-alt:before{content:\\\"\\\"}.mi-do-not-disturb-off:before{content:\\\"\\\"}.mi-do-not-disturb-on:before{content:\\\"\\\"}.mi-do-not-disturb-on-total-silence:before{content:\\\"\\\"}.mi-do-not-step:before{content:\\\"\\\"}.mi-do-not-touch:before{content:\\\"\\\"}.mi-dock:before{content:\\\"\\\"}.mi-document-scanner:before{content:\\\"\\\"}.mi-domain:before{content:\\\"\\\"}.mi-domain-add:before{content:\\\"\\\"}.mi-domain-disabled:before{content:\\\"\\\"}.mi-domain-verification:before{content:\\\"\\\"}.mi-done:before{content:\\\"\\\"}.mi-done-all:before{content:\\\"\\\"}.mi-done-outline:before{content:\\\"\\\"}.mi-donut-large:before{content:\\\"\\\"}.mi-donut-small:before{content:\\\"\\\"}.mi-door-back:before{content:\\\"\\\"}.mi-door-front:before{content:\\\"\\\"}.mi-door-sliding:before{content:\\\"\\\"}.mi-doorbell:before{content:\\\"\\\"}.mi-double-arrow:before{content:\\\"\\\"}.mi-downhill-skiing:before{content:\\\"\\\"}.mi-download:before{content:\\\"\\\"}.mi-download-done:before{content:\\\"\\\"}.mi-download-for-offline:before{content:\\\"\\\"}.mi-downloading:before{content:\\\"\\\"}.mi-drafts:before{content:\\\"\\\"}.mi-drag-handle:before{content:\\\"\\\"}.mi-drag-indicator:before{content:\\\"\\\"}.mi-draw:before{content:\\\"\\\"}.mi-drive-eta:before{content:\\\"\\\"}.mi-drive-file-move:before{content:\\\"\\\"}.mi-drive-file-move-outline:before{content:\\\"\\\"}.mi-drive-file-move-rtl:before{content:\\\"\\\"}.mi-drive-file-rename-outline:before{content:\\\"\\\"}.mi-drive-folder-upload:before{content:\\\"\\\"}.mi-dry:before{content:\\\"\\\"}.mi-dry-cleaning:before{content:\\\"\\\"}.mi-duo:before{content:\\\"\\\"}.mi-dvr:before{content:\\\"\\\"}.mi-dynamic-feed:before{content:\\\"\\\"}.mi-dynamic-form:before{content:\\\"\\\"}.mi-e-mobiledata:before{content:\\\"\\\"}.mi-earbuds:before{content:\\\"\\\"}.mi-earbuds-battery:before{content:\\\"\\\"}.mi-east:before{content:\\\"\\\"}.mi-eco:before{content:\\\"\\\"}.mi-edgesensor-high:before{content:\\\"\\\"}.mi-edgesensor-low:before{content:\\\"\\\"}.mi-edit:before{content:\\\"\\\"}.mi-edit-attributes:before{content:\\\"\\\"}.mi-edit-calendar:before{content:\\\"\\\"}.mi-edit-document:before{content:\\\"\\\"}.mi-edit-location:before{content:\\\"\\\"}.mi-edit-location-alt:before{content:\\\"\\\"}.mi-edit-note:before{content:\\\"\\\"}.mi-edit-notifications:before{content:\\\"\\\"}.mi-edit-off:before{content:\\\"\\\"}.mi-edit-road:before{content:\\\"\\\"}.mi-edit-square:before{content:\\\"\\\"}.mi-egg:before{content:\\\"\\\"}.mi-egg-alt:before{content:\\\"\\\"}.mi-eject:before{content:\\\"\\\"}.mi-elderly:before{content:\\\"\\\"}.mi-elderly-woman:before{content:\\\"\\\"}.mi-electric-bike:before{content:\\\"\\\"}.mi-electric-bolt:before{content:\\\"\\\"}.mi-electric-car:before{content:\\\"\\\"}.mi-electric-meter:before{content:\\\"\\\"}.mi-electric-moped:before{content:\\\"\\\"}.mi-electric-rickshaw:before{content:\\\"\\\"}.mi-electric-scooter:before{content:\\\"\\\"}.mi-electrical-services:before{content:\\\"\\\"}.mi-elevator:before{content:\\\"\\\"}.mi-email:before{content:\\\"\\\"}.mi-emergency:before{content:\\\"\\\"}.mi-emergency-recording:before{content:\\\"\\\"}.mi-emergency-share:before{content:\\\"\\\"}.mi-emoji-emotions:before{content:\\\"\\\"}.mi-emoji-events:before{content:\\\"\\\"}.mi-emoji-flags:before{content:\\\"\\\"}.mi-emoji-food-beverage:before{content:\\\"\\\"}.mi-emoji-nature:before{content:\\\"\\\"}.mi-emoji-objects:before{content:\\\"\\\"}.mi-emoji-people:before{content:\\\"\\\"}.mi-emoji-symbols:before{content:\\\"\\\"}.mi-emoji-transportation:before{content:\\\"\\\"}.mi-energy-savings-leaf:before{content:\\\"\\\"}.mi-engineering:before{content:\\\"\\\"}.mi-enhance-photo-translate:before{content:\\\"\\\"}.mi-enhanced-encryption:before{content:\\\"\\\"}.mi-equalizer:before{content:\\\"\\\"}.mi-error:before{content:\\\"\\\"}.mi-error-outline:before{content:\\\"\\\"}.mi-escalator:before{content:\\\"\\\"}.mi-escalator-warning:before{content:\\\"\\\"}.mi-euro:before{content:\\\"\\\"}.mi-euro-symbol:before{content:\\\"\\\"}.mi-ev-station:before{content:\\\"\\\"}.mi-event:before{content:\\\"\\\"}.mi-event-available:before{content:\\\"\\\"}.mi-event-busy:before{content:\\\"\\\"}.mi-event-note:before{content:\\\"\\\"}.mi-event-repeat:before{content:\\\"\\\"}.mi-event-seat:before{content:\\\"\\\"}.mi-exit-to-app:before{content:\\\"\\\"}.mi-expand:before{content:\\\"\\\"}.mi-expand-circle-down:before{content:\\\"\\\"}.mi-expand-less:before{content:\\\"\\\"}.mi-expand-more:before{content:\\\"\\\"}.mi-explicit:before{content:\\\"\\\"}.mi-explore:before{content:\\\"\\\"}.mi-explore-off:before{content:\\\"\\\"}.mi-exposure:before{content:\\\"\\\"}.mi-exposure-minus-1:before{content:\\\"\\\"}.mi-exposure-minus-2:before{content:\\\"\\\"}.mi-exposure-neg-1:before{content:\\\"\\\"}.mi-exposure-neg-2:before{content:\\\"\\\"}.mi-exposure-plus-1:before{content:\\\"\\\"}.mi-exposure-plus-2:before{content:\\\"\\\"}.mi-exposure-zero:before{content:\\\"\\\"}.mi-extension:before{content:\\\"\\\"}.mi-extension-off:before{content:\\\"\\\"}.mi-face:before{content:\\\"\\\"}.mi-face-2:before{content:\\\"\\\"}.mi-face-3:before{content:\\\"\\\"}.mi-face-4:before{content:\\\"\\\"}.mi-face-5:before{content:\\\"\\\"}.mi-face-6:before{content:\\\"\\\"}.mi-face-retouching-natural:before{content:\\\"\\\"}.mi-face-retouching-off:before{content:\\\"\\\"}.mi-face-unlock:before{content:\\\"\\\"}.mi-facebook:before{content:\\\"\\\"}.mi-fact-check:before{content:\\\"\\\"}.mi-factory:before{content:\\\"\\\"}.mi-family-restroom:before{content:\\\"\\\"}.mi-fast-forward:before{content:\\\"\\\"}.mi-fast-rewind:before{content:\\\"\\\"}.mi-fastfood:before{content:\\\"\\\"}.mi-favorite:before{content:\\\"\\\"}.mi-favorite-border:before,.mi-favorite-outline:before{content:\\\"\\\"}.mi-fax:before{content:\\\"\\\"}.mi-featured-play-list:before{content:\\\"\\\"}.mi-featured-video:before{content:\\\"\\\"}.mi-feed:before{content:\\\"\\\"}.mi-feedback:before{content:\\\"\\\"}.mi-female:before{content:\\\"\\\"}.mi-fence:before{content:\\\"\\\"}.mi-festival:before{content:\\\"\\\"}.mi-fiber-dvr:before{content:\\\"\\\"}.mi-fiber-manual-record:before{content:\\\"\\\"}.mi-fiber-new:before{content:\\\"\\\"}.mi-fiber-pin:before{content:\\\"\\\"}.mi-fiber-smart-record:before{content:\\\"\\\"}.mi-file-copy:before{content:\\\"\\\"}.mi-file-download:before{content:\\\"\\\"}.mi-file-download-done:before{content:\\\"\\\"}.mi-file-download-off:before{content:\\\"\\\"}.mi-file-open:before{content:\\\"\\\"}.mi-file-present:before{content:\\\"\\\"}.mi-file-upload:before{content:\\\"\\\"}.mi-file-upload-off:before{content:\\\"\\\"}.mi-filter:before{content:\\\"\\\"}.mi-filter-1:before{content:\\\"\\\"}.mi-filter-2:before{content:\\\"\\\"}.mi-filter-3:before{content:\\\"\\\"}.mi-filter-4:before{content:\\\"\\\"}.mi-filter-5:before{content:\\\"\\\"}.mi-filter-6:before{content:\\\"\\\"}.mi-filter-7:before{content:\\\"\\\"}.mi-filter-8:before{content:\\\"\\\"}.mi-filter-9:before{content:\\\"\\\"}.mi-filter-9-plus:before{content:\\\"\\\"}.mi-filter-alt:before{content:\\\"\\\"}.mi-filter-alt-off:before{content:\\\"\\\"}.mi-filter-b-and-w:before{content:\\\"\\\"}.mi-filter-center-focus:before{content:\\\"\\\"}.mi-filter-drama:before{content:\\\"\\\"}.mi-filter-frames:before{content:\\\"\\\"}.mi-filter-hdr:before{content:\\\"\\\"}.mi-filter-list:before{content:\\\"\\\"}.mi-filter-list-alt:before{content:\\\"\\\"}.mi-filter-list-off:before{content:\\\"\\\"}.mi-filter-none:before{content:\\\"\\\"}.mi-filter-tilt-shift:before{content:\\\"\\\"}.mi-filter-vintage:before{content:\\\"\\\"}.mi-find-in-page:before{content:\\\"\\\"}.mi-find-replace:before{content:\\\"\\\"}.mi-fingerprint:before{content:\\\"\\\"}.mi-fire-extinguisher:before{content:\\\"\\\"}.mi-fire-hydrant:before{content:\\\"\\\"}.mi-fire-hydrant-alt:before{content:\\\"\\\"}.mi-fire-truck:before{content:\\\"\\\"}.mi-fireplace:before{content:\\\"\\\"}.mi-first-page:before{content:\\\"\\\"}.mi-fit-screen:before{content:\\\"\\\"}.mi-fitbit:before{content:\\\"\\\"}.mi-fitness-center:before{content:\\\"\\\"}.mi-flag:before{content:\\\"\\\"}.mi-flag-circle:before{content:\\\"\\\"}.mi-flaky:before{content:\\\"\\\"}.mi-flare:before{content:\\\"\\\"}.mi-flash-auto:before{content:\\\"\\\"}.mi-flash-off:before{content:\\\"\\\"}.mi-flash-on:before{content:\\\"\\\"}.mi-flashlight-off:before{content:\\\"\\\"}.mi-flashlight-on:before{content:\\\"\\\"}.mi-flatware:before{content:\\\"\\\"}.mi-flight:before{content:\\\"\\\"}.mi-flight-class:before{content:\\\"\\\"}.mi-flight-land:before{content:\\\"\\\"}.mi-flight-takeoff:before{content:\\\"\\\"}.mi-flip:before{content:\\\"\\\"}.mi-flip-camera-android:before{content:\\\"\\\"}.mi-flip-camera-ios:before{content:\\\"\\\"}.mi-flip-to-back:before{content:\\\"\\\"}.mi-flip-to-front:before{content:\\\"\\\"}.mi-flood:before{content:\\\"\\\"}.mi-flourescent:before,.mi-fluorescent:before{content:\\\"\\\"}.mi-flutter-dash:before{content:\\\"\\\"}.mi-fmd-bad:before{content:\\\"\\\"}.mi-fmd-good:before{content:\\\"\\\"}.mi-foggy:before{content:\\\"\\\"}.mi-folder:before{content:\\\"\\\"}.mi-folder-copy:before{content:\\\"\\\"}.mi-folder-delete:before{content:\\\"\\\"}.mi-folder-off:before{content:\\\"\\\"}.mi-folder-open:before{content:\\\"\\\"}.mi-folder-shared:before{content:\\\"\\\"}.mi-folder-special:before{content:\\\"\\\"}.mi-folder-zip:before{content:\\\"\\\"}.mi-follow-the-signs:before{content:\\\"\\\"}.mi-font-download:before{content:\\\"\\\"}.mi-font-download-off:before{content:\\\"\\\"}.mi-food-bank:before{content:\\\"\\\"}.mi-forest:before{content:\\\"\\\"}.mi-fork-left:before{content:\\\"\\\"}.mi-fork-right:before{content:\\\"\\\"}.mi-forklift:before{content:\\\"\\\"}.mi-format-align-center:before{content:\\\"\\\"}.mi-format-align-justify:before{content:\\\"\\\"}.mi-format-align-left:before{content:\\\"\\\"}.mi-format-align-right:before{content:\\\"\\\"}.mi-format-bold:before{content:\\\"\\\"}.mi-format-clear:before{content:\\\"\\\"}.mi-format-color-fill:before{content:\\\"\\\"}.mi-format-color-reset:before{content:\\\"\\\"}.mi-format-color-text:before{content:\\\"\\\"}.mi-format-indent-decrease:before{content:\\\"\\\"}.mi-format-indent-increase:before{content:\\\"\\\"}.mi-format-italic:before{content:\\\"\\\"}.mi-format-line-spacing:before{content:\\\"\\\"}.mi-format-list-bulleted:before{content:\\\"\\\"}.mi-format-list-bulleted-add:before{content:\\\"\\\"}.mi-format-list-numbered:before{content:\\\"\\\"}.mi-format-list-numbered-rtl:before{content:\\\"\\\"}.mi-format-overline:before{content:\\\"\\\"}.mi-format-paint:before{content:\\\"\\\"}.mi-format-quote:before{content:\\\"\\\"}.mi-format-shapes:before{content:\\\"\\\"}.mi-format-size:before{content:\\\"\\\"}.mi-format-strikethrough:before{content:\\\"\\\"}.mi-format-textdirection-l-to-r:before{content:\\\"\\\"}.mi-format-textdirection-r-to-l:before{content:\\\"\\\"}.mi-format-underline:before,.mi-format-underlined:before{content:\\\"\\\"}.mi-fort:before{content:\\\"\\\"}.mi-forum:before{content:\\\"\\\"}.mi-forward:before{content:\\\"\\\"}.mi-forward-10:before{content:\\\"\\\"}.mi-forward-30:before{content:\\\"\\\"}.mi-forward-5:before{content:\\\"\\\"}.mi-forward-to-inbox:before{content:\\\"\\\"}.mi-foundation:before{content:\\\"\\\"}.mi-free-breakfast:before{content:\\\"\\\"}.mi-free-cancellation:before{content:\\\"\\\"}.mi-front-hand:before{content:\\\"\\\"}.mi-front-loader:before{content:\\\"\\\"}.mi-fullscreen:before{content:\\\"\\\"}.mi-fullscreen-exit:before{content:\\\"\\\"}.mi-functions:before{content:\\\"\\\"}.mi-g-mobiledata:before{content:\\\"\\\"}.mi-g-translate:before{content:\\\"\\\"}.mi-gamepad:before{content:\\\"\\\"}.mi-games:before{content:\\\"\\\"}.mi-garage:before{content:\\\"\\\"}.mi-gas-meter:before{content:\\\"\\\"}.mi-gavel:before{content:\\\"\\\"}.mi-generating-tokens:before{content:\\\"\\\"}.mi-gesture:before{content:\\\"\\\"}.mi-get-app:before{content:\\\"\\\"}.mi-gif:before{content:\\\"\\\"}.mi-gif-box:before{content:\\\"\\\"}.mi-girl:before{content:\\\"\\\"}.mi-gite:before{content:\\\"\\\"}.mi-goat:before{content:\\\"􏿽\\\"}.mi-golf-course:before{content:\\\"\\\"}.mi-gpp-bad:before{content:\\\"\\\"}.mi-gpp-good:before{content:\\\"\\\"}.mi-gpp-maybe:before{content:\\\"\\\"}.mi-gps-fixed:before{content:\\\"\\\"}.mi-gps-not-fixed:before{content:\\\"\\\"}.mi-gps-off:before{content:\\\"\\\"}.mi-grade:before{content:\\\"\\\"}.mi-gradient:before{content:\\\"\\\"}.mi-grading:before{content:\\\"\\\"}.mi-grain:before{content:\\\"\\\"}.mi-graphic-eq:before{content:\\\"\\\"}.mi-grass:before{content:\\\"\\\"}.mi-grid-3x3:before{content:\\\"\\\"}.mi-grid-4x4:before{content:\\\"\\\"}.mi-grid-goldenratio:before{content:\\\"\\\"}.mi-grid-off:before{content:\\\"\\\"}.mi-grid-on:before{content:\\\"\\\"}.mi-grid-view:before{content:\\\"\\\"}.mi-group:before{content:\\\"\\\"}.mi-group-add:before{content:\\\"\\\"}.mi-group-off:before{content:\\\"\\\"}.mi-group-remove:before{content:\\\"\\\"}.mi-group-work:before{content:\\\"\\\"}.mi-groups:before{content:\\\"\\\"}.mi-groups-2:before{content:\\\"\\\"}.mi-groups-3:before{content:\\\"\\\"}.mi-h-mobiledata:before{content:\\\"\\\"}.mi-h-plus-mobiledata:before{content:\\\"\\\"}.mi-hail:before{content:\\\"\\\"}.mi-handshake:before{content:\\\"\\\"}.mi-handyman:before{content:\\\"\\\"}.mi-hardware:before{content:\\\"\\\"}.mi-hd:before{content:\\\"\\\"}.mi-hdr-auto:before{content:\\\"\\\"}.mi-hdr-auto-select:before{content:\\\"\\\"}.mi-hdr-enhanced-select:before{content:\\\"\\\"}.mi-hdr-off:before{content:\\\"\\\"}.mi-hdr-off-select:before{content:\\\"\\\"}.mi-hdr-on:before{content:\\\"\\\"}.mi-hdr-on-select:before{content:\\\"\\\"}.mi-hdr-plus:before{content:\\\"\\\"}.mi-hdr-strong:before{content:\\\"\\\"}.mi-hdr-weak:before{content:\\\"\\\"}.mi-headphones:before{content:\\\"\\\"}.mi-headphones-battery:before{content:\\\"\\\"}.mi-headset:before{content:\\\"\\\"}.mi-headset-mic:before{content:\\\"\\\"}.mi-headset-off:before{content:\\\"\\\"}.mi-healing:before{content:\\\"\\\"}.mi-health-and-safety:before{content:\\\"\\\"}.mi-hearing:before{content:\\\"\\\"}.mi-hearing-disabled:before{content:\\\"\\\"}.mi-heart-broken:before{content:\\\"\\\"}.mi-heat-pump:before{content:\\\"\\\"}.mi-height:before{content:\\\"\\\"}.mi-help:before{content:\\\"\\\"}.mi-help-center:before{content:\\\"\\\"}.mi-help-outline:before{content:\\\"\\\"}.mi-hevc:before{content:\\\"\\\"}.mi-hexagon:before{content:\\\"\\\"}.mi-hide-image:before{content:\\\"\\\"}.mi-hide-source:before{content:\\\"\\\"}.mi-high-quality:before{content:\\\"\\\"}.mi-highlight:before{content:\\\"\\\"}.mi-highlight-alt:before{content:\\\"\\\"}.mi-highlight-off:before,.mi-highlight-remove:before{content:\\\"\\\"}.mi-hiking:before{content:\\\"\\\"}.mi-history:before{content:\\\"\\\"}.mi-history-edu:before{content:\\\"\\\"}.mi-history-toggle-off:before{content:\\\"\\\"}.mi-hive:before{content:\\\"\\\"}.mi-hls:before{content:\\\"\\\"}.mi-hls-off:before{content:\\\"\\\"}.mi-holiday-village:before{content:\\\"\\\"}.mi-home:before{content:\\\"\\\"}.mi-home-filled:before{content:\\\"\\\"}.mi-home-max:before{content:\\\"\\\"}.mi-home-mini:before{content:\\\"\\\"}.mi-home-repair-service:before{content:\\\"\\\"}.mi-home-work:before{content:\\\"\\\"}.mi-horizontal-distribute:before{content:\\\"\\\"}.mi-horizontal-rule:before{content:\\\"\\\"}.mi-horizontal-split:before{content:\\\"\\\"}.mi-hot-tub:before{content:\\\"\\\"}.mi-hotel:before{content:\\\"\\\"}.mi-hotel-class:before{content:\\\"\\\"}.mi-hourglass-bottom:before{content:\\\"\\\"}.mi-hourglass-disabled:before{content:\\\"\\\"}.mi-hourglass-empty:before{content:\\\"\\\"}.mi-hourglass-full:before{content:\\\"\\\"}.mi-hourglass-top:before{content:\\\"\\\"}.mi-house:before{content:\\\"\\\"}.mi-house-siding:before{content:\\\"\\\"}.mi-houseboat:before{content:\\\"\\\"}.mi-how-to-reg:before{content:\\\"\\\"}.mi-how-to-vote:before{content:\\\"\\\"}.mi-html:before{content:\\\"\\\"}.mi-http:before{content:\\\"\\\"}.mi-https:before{content:\\\"\\\"}.mi-hub:before{content:\\\"\\\"}.mi-hvac:before{content:\\\"\\\"}.mi-ice-skating:before{content:\\\"\\\"}.mi-icecream:before{content:\\\"\\\"}.mi-image:before{content:\\\"\\\"}.mi-image-aspect-ratio:before{content:\\\"\\\"}.mi-image-not-supported:before{content:\\\"\\\"}.mi-image-search:before{content:\\\"\\\"}.mi-imagesearch-roller:before{content:\\\"\\\"}.mi-import-contacts:before{content:\\\"\\\"}.mi-import-export:before{content:\\\"\\\"}.mi-important-devices:before{content:\\\"\\\"}.mi-inbox:before{content:\\\"\\\"}.mi-incomplete-circle:before{content:\\\"\\\"}.mi-indeterminate-check-box:before{content:\\\"\\\"}.mi-info:before{content:\\\"\\\"}.mi-info-outline:before{content:\\\"\\\"}.mi-input:before{content:\\\"\\\"}.mi-insert-chart:before{content:\\\"\\\"}.mi-insert-chart-outlined:before{content:\\\"\\\"}.mi-insert-comment:before{content:\\\"\\\"}.mi-insert-drive-file:before{content:\\\"\\\"}.mi-insert-emoticon:before{content:\\\"\\\"}.mi-insert-invitation:before{content:\\\"\\\"}.mi-insert-link:before{content:\\\"\\\"}.mi-insert-page-break:before{content:\\\"\\\"}.mi-insert-photo:before{content:\\\"\\\"}.mi-insights:before{content:\\\"\\\"}.mi-install-desktop:before{content:\\\"\\\"}.mi-install-mobile:before{content:\\\"\\\"}.mi-integration-instructions:before{content:\\\"\\\"}.mi-interests:before{content:\\\"\\\"}.mi-interpreter-mode:before{content:\\\"\\\"}.mi-inventory:before{content:\\\"\\\"}.mi-inventory-2:before{content:\\\"\\\"}.mi-invert-colors:before{content:\\\"\\\"}.mi-invert-colors-off:before{content:\\\"\\\"}.mi-invert-colors-on:before{content:\\\"\\\"}.mi-ios-share:before{content:\\\"\\\"}.mi-iron:before{content:\\\"\\\"}.mi-iso:before{content:\\\"\\\"}.mi-javascript:before{content:\\\"\\\"}.mi-join-full:before{content:\\\"\\\"}.mi-join-inner:before{content:\\\"\\\"}.mi-join-left:before{content:\\\"\\\"}.mi-join-right:before{content:\\\"\\\"}.mi-kayaking:before{content:\\\"\\\"}.mi-kebab-dining:before{content:\\\"\\\"}.mi-key:before{content:\\\"\\\"}.mi-key-off:before{content:\\\"\\\"}.mi-keyboard:before{content:\\\"\\\"}.mi-keyboard-alt:before{content:\\\"\\\"}.mi-keyboard-arrow-down:before{content:\\\"\\\"}.mi-keyboard-arrow-left:before{content:\\\"\\\"}.mi-keyboard-arrow-right:before{content:\\\"\\\"}.mi-keyboard-arrow-up:before{content:\\\"\\\"}.mi-keyboard-backspace:before{content:\\\"\\\"}.mi-keyboard-capslock:before{content:\\\"\\\"}.mi-keyboard-command:before{content:\\\"\\\"}.mi-keyboard-command-key:before{content:\\\"\\\"}.mi-keyboard-control:before{content:\\\"\\\"}.mi-keyboard-control-key:before{content:\\\"\\\"}.mi-keyboard-double-arrow-down:before{content:\\\"\\\"}.mi-keyboard-double-arrow-left:before{content:\\\"\\\"}.mi-keyboard-double-arrow-right:before{content:\\\"\\\"}.mi-keyboard-double-arrow-up:before{content:\\\"\\\"}.mi-keyboard-hide:before{content:\\\"\\\"}.mi-keyboard-option:before{content:\\\"\\\"}.mi-keyboard-option-key:before{content:\\\"\\\"}.mi-keyboard-return:before{content:\\\"\\\"}.mi-keyboard-tab:before{content:\\\"\\\"}.mi-keyboard-voice:before{content:\\\"\\\"}.mi-king-bed:before{content:\\\"\\\"}.mi-kitchen:before{content:\\\"\\\"}.mi-kitesurfing:before{content:\\\"\\\"}.mi-label:before{content:\\\"\\\"}.mi-label-important:before{content:\\\"\\\"}.mi-label-important-outline:before{content:\\\"\\\"}.mi-label-off:before{content:\\\"\\\"}.mi-label-outline:before{content:\\\"\\\"}.mi-lan:before{content:\\\"\\\"}.mi-landscape:before{content:\\\"\\\"}.mi-landslide:before{content:\\\"\\\"}.mi-language:before{content:\\\"\\\"}.mi-laptop:before{content:\\\"\\\"}.mi-laptop-chromebook:before{content:\\\"\\\"}.mi-laptop-mac:before{content:\\\"\\\"}.mi-laptop-windows:before{content:\\\"\\\"}.mi-last-page:before{content:\\\"\\\"}.mi-launch:before{content:\\\"\\\"}.mi-layers:before{content:\\\"\\\"}.mi-layers-clear:before{content:\\\"\\\"}.mi-leaderboard:before{content:\\\"\\\"}.mi-leak-add:before{content:\\\"\\\"}.mi-leak-remove:before{content:\\\"\\\"}.mi-leave-bags-at-home:before{content:\\\"\\\"}.mi-legend-toggle:before{content:\\\"\\\"}.mi-lens:before{content:\\\"\\\"}.mi-lens-blur:before{content:\\\"\\\"}.mi-library-add:before{content:\\\"\\\"}.mi-library-add-check:before{content:\\\"\\\"}.mi-library-books:before{content:\\\"\\\"}.mi-library-music:before{content:\\\"\\\"}.mi-light:before{content:\\\"\\\"}.mi-light-mode:before{content:\\\"\\\"}.mi-lightbulb:before{content:\\\"\\\"}.mi-lightbulb-circle:before{content:\\\"\\\"}.mi-lightbulb-outline:before{content:\\\"\\\"}.mi-line-axis:before{content:\\\"\\\"}.mi-line-style:before{content:\\\"\\\"}.mi-line-weight:before{content:\\\"\\\"}.mi-linear-scale:before{content:\\\"\\\"}.mi-link:before{content:\\\"\\\"}.mi-link-off:before{content:\\\"\\\"}.mi-linked-camera:before{content:\\\"\\\"}.mi-liquor:before{content:\\\"\\\"}.mi-list:before{content:\\\"\\\"}.mi-list-alt:before{content:\\\"\\\"}.mi-live-help:before{content:\\\"\\\"}.mi-live-tv:before{content:\\\"\\\"}.mi-living:before{content:\\\"\\\"}.mi-local-activity:before{content:\\\"\\\"}.mi-local-airport:before{content:\\\"\\\"}.mi-local-atm:before{content:\\\"\\\"}.mi-local-attraction:before{content:\\\"\\\"}.mi-local-bar:before{content:\\\"\\\"}.mi-local-cafe:before{content:\\\"\\\"}.mi-local-car-wash:before{content:\\\"\\\"}.mi-local-convenience-store:before{content:\\\"\\\"}.mi-local-dining:before{content:\\\"\\\"}.mi-local-drink:before{content:\\\"\\\"}.mi-local-fire-department:before{content:\\\"\\\"}.mi-local-florist:before{content:\\\"\\\"}.mi-local-gas-station:before{content:\\\"\\\"}.mi-local-grocery-store:before{content:\\\"\\\"}.mi-local-hospital:before{content:\\\"\\\"}.mi-local-hotel:before{content:\\\"\\\"}.mi-local-laundry-service:before{content:\\\"\\\"}.mi-local-library:before{content:\\\"\\\"}.mi-local-mall:before{content:\\\"\\\"}.mi-local-movies:before{content:\\\"\\\"}.mi-local-offer:before{content:\\\"\\\"}.mi-local-parking:before{content:\\\"\\\"}.mi-local-pharmacy:before{content:\\\"\\\"}.mi-local-phone:before{content:\\\"\\\"}.mi-local-pizza:before{content:\\\"\\\"}.mi-local-play:before{content:\\\"\\\"}.mi-local-police:before{content:\\\"\\\"}.mi-local-post-office:before{content:\\\"\\\"}.mi-local-print-shop:before,.mi-local-printshop:before{content:\\\"\\\"}.mi-local-restaurant:before{content:\\\"\\\"}.mi-local-see:before{content:\\\"\\\"}.mi-local-shipping:before{content:\\\"\\\"}.mi-local-taxi:before{content:\\\"\\\"}.mi-location-city:before{content:\\\"\\\"}.mi-location-disabled:before{content:\\\"\\\"}.mi-location-history:before{content:\\\"\\\"}.mi-location-off:before{content:\\\"\\\"}.mi-location-on:before{content:\\\"\\\"}.mi-location-pin:before{content:\\\"\\\"}.mi-location-searching:before{content:\\\"\\\"}.mi-lock:before{content:\\\"\\\"}.mi-lock-clock:before{content:\\\"\\\"}.mi-lock-open:before{content:\\\"\\\"}.mi-lock-outline:before{content:\\\"\\\"}.mi-lock-person:before{content:\\\"\\\"}.mi-lock-reset:before{content:\\\"\\\"}.mi-login:before{content:\\\"\\\"}.mi-logo-dev:before{content:\\\"\\\"}.mi-logout:before{content:\\\"\\\"}.mi-looks:before{content:\\\"\\\"}.mi-looks-3:before{content:\\\"\\\"}.mi-looks-4:before{content:\\\"\\\"}.mi-looks-5:before{content:\\\"\\\"}.mi-looks-6:before{content:\\\"\\\"}.mi-looks-one:before{content:\\\"\\\"}.mi-looks-two:before{content:\\\"\\\"}.mi-loop:before{content:\\\"\\\"}.mi-loupe:before{content:\\\"\\\"}.mi-low-priority:before{content:\\\"\\\"}.mi-loyalty:before{content:\\\"\\\"}.mi-lte-mobiledata:before{content:\\\"\\\"}.mi-lte-plus-mobiledata:before{content:\\\"\\\"}.mi-luggage:before{content:\\\"\\\"}.mi-lunch-dining:before{content:\\\"\\\"}.mi-lyrics:before{content:\\\"\\\"}.mi-macro-off:before{content:\\\"\\\"}.mi-mail:before{content:\\\"\\\"}.mi-mail-lock:before{content:\\\"\\\"}.mi-mail-outline:before{content:\\\"\\\"}.mi-male:before{content:\\\"\\\"}.mi-man:before{content:\\\"\\\"}.mi-man-2:before{content:\\\"\\\"}.mi-man-3:before{content:\\\"\\\"}.mi-man-4:before{content:\\\"\\\"}.mi-manage-accounts:before{content:\\\"\\\"}.mi-manage-history:before{content:\\\"\\\"}.mi-manage-search:before{content:\\\"\\\"}.mi-map:before{content:\\\"\\\"}.mi-maps-home-work:before{content:\\\"\\\"}.mi-maps-ugc:before{content:\\\"\\\"}.mi-margin:before{content:\\\"\\\"}.mi-mark-as-unread:before{content:\\\"\\\"}.mi-mark-chat-read:before{content:\\\"\\\"}.mi-mark-chat-unread:before{content:\\\"\\\"}.mi-mark-email-read:before{content:\\\"\\\"}.mi-mark-email-unread:before{content:\\\"\\\"}.mi-mark-unread-chat-alt:before{content:\\\"\\\"}.mi-markunread:before{content:\\\"\\\"}.mi-markunread-mailbox:before{content:\\\"\\\"}.mi-masks:before{content:\\\"\\\"}.mi-maximize:before{content:\\\"\\\"}.mi-media-bluetooth-off:before{content:\\\"\\\"}.mi-media-bluetooth-on:before{content:\\\"\\\"}.mi-mediation:before{content:\\\"\\\"}.mi-medical-information:before{content:\\\"\\\"}.mi-medical-services:before{content:\\\"\\\"}.mi-medication:before{content:\\\"\\\"}.mi-medication-liquid:before{content:\\\"\\\"}.mi-meeting-room:before{content:\\\"\\\"}.mi-memory:before{content:\\\"\\\"}.mi-menu:before{content:\\\"\\\"}.mi-menu-book:before{content:\\\"\\\"}.mi-menu-open:before{content:\\\"\\\"}.mi-merge:before{content:\\\"\\\"}.mi-merge-type:before{content:\\\"\\\"}.mi-message:before{content:\\\"\\\"}.mi-messenger:before{content:\\\"\\\"}.mi-messenger-outline:before{content:\\\"\\\"}.mi-mic:before{content:\\\"\\\"}.mi-mic-external-off:before{content:\\\"\\\"}.mi-mic-external-on:before{content:\\\"\\\"}.mi-mic-none:before{content:\\\"\\\"}.mi-mic-off:before{content:\\\"\\\"}.mi-microwave:before{content:\\\"\\\"}.mi-military-tech:before{content:\\\"\\\"}.mi-minimize:before{content:\\\"\\\"}.mi-minor-crash:before{content:\\\"\\\"}.mi-miscellaneous-services:before{content:\\\"\\\"}.mi-missed-video-call:before{content:\\\"\\\"}.mi-mms:before{content:\\\"\\\"}.mi-mobile-friendly:before{content:\\\"\\\"}.mi-mobile-off:before{content:\\\"\\\"}.mi-mobile-screen-share:before{content:\\\"\\\"}.mi-mobiledata-off:before{content:\\\"\\\"}.mi-mode:before{content:\\\"\\\"}.mi-mode-comment:before{content:\\\"\\\"}.mi-mode-edit:before{content:\\\"\\\"}.mi-mode-edit-outline:before{content:\\\"\\\"}.mi-mode-fan-off:before{content:\\\"\\\"}.mi-mode-night:before{content:\\\"\\\"}.mi-mode-of-travel:before{content:\\\"\\\"}.mi-mode-standby:before{content:\\\"\\\"}.mi-model-training:before{content:\\\"\\\"}.mi-monetization-on:before{content:\\\"\\\"}.mi-money:before{content:\\\"\\\"}.mi-money-off:before{content:\\\"\\\"}.mi-money-off-csred:before{content:\\\"\\\"}.mi-monitor:before{content:\\\"\\\"}.mi-monitor-heart:before{content:\\\"\\\"}.mi-monitor-weight:before{content:\\\"\\\"}.mi-monochrome-photos:before{content:\\\"\\\"}.mi-mood:before{content:\\\"\\\"}.mi-mood-bad:before{content:\\\"\\\"}.mi-moped:before{content:\\\"\\\"}.mi-more:before{content:\\\"\\\"}.mi-more-horiz:before{content:\\\"\\\"}.mi-more-time:before{content:\\\"\\\"}.mi-more-vert:before{content:\\\"\\\"}.mi-mosque:before{content:\\\"\\\"}.mi-motion-photos-auto:before{content:\\\"\\\"}.mi-motion-photos-off:before{content:\\\"\\\"}.mi-motion-photos-on:before{content:\\\"\\\"}.mi-motion-photos-pause:before{content:\\\"\\\"}.mi-motion-photos-paused:before{content:\\\"\\\"}.mi-motorcycle:before{content:\\\"\\\"}.mi-mouse:before{content:\\\"\\\"}.mi-move-down:before{content:\\\"\\\"}.mi-move-to-inbox:before{content:\\\"\\\"}.mi-move-up:before{content:\\\"\\\"}.mi-movie:before{content:\\\"\\\"}.mi-movie-creation:before{content:\\\"\\\"}.mi-movie-edit:before{content:\\\"\\\"}.mi-movie-filter:before{content:\\\"\\\"}.mi-moving:before{content:\\\"\\\"}.mi-mp:before{content:\\\"\\\"}.mi-multiline-chart:before{content:\\\"\\\"}.mi-multiple-stop:before{content:\\\"\\\"}.mi-multitrack-audio:before{content:\\\"\\\"}.mi-museum:before{content:\\\"\\\"}.mi-music-note:before{content:\\\"\\\"}.mi-music-off:before{content:\\\"\\\"}.mi-music-video:before{content:\\\"\\\"}.mi-my-library-add:before{content:\\\"\\\"}.mi-my-library-books:before{content:\\\"\\\"}.mi-my-library-music:before{content:\\\"\\\"}.mi-my-location:before{content:\\\"\\\"}.mi-nat:before{content:\\\"\\\"}.mi-nature:before{content:\\\"\\\"}.mi-nature-people:before{content:\\\"\\\"}.mi-navigate-before:before{content:\\\"\\\"}.mi-navigate-next:before{content:\\\"\\\"}.mi-navigation:before{content:\\\"\\\"}.mi-near-me:before{content:\\\"\\\"}.mi-near-me-disabled:before{content:\\\"\\\"}.mi-nearby-error:before{content:\\\"\\\"}.mi-nearby-off:before{content:\\\"\\\"}.mi-nest-cam-wired-stand:before{content:\\\"\\\"}.mi-network-cell:before{content:\\\"\\\"}.mi-network-check:before{content:\\\"\\\"}.mi-network-locked:before{content:\\\"\\\"}.mi-network-ping:before{content:\\\"\\\"}.mi-network-wifi:before{content:\\\"\\\"}.mi-network-wifi-1-bar:before{content:\\\"\\\"}.mi-network-wifi-2-bar:before{content:\\\"\\\"}.mi-network-wifi-3-bar:before{content:\\\"\\\"}.mi-new-label:before{content:\\\"\\\"}.mi-new-releases:before{content:\\\"\\\"}.mi-newspaper:before{content:\\\"\\\"}.mi-next-plan:before{content:\\\"\\\"}.mi-next-week:before{content:\\\"\\\"}.mi-nfc:before{content:\\\"\\\"}.mi-night-shelter:before{content:\\\"\\\"}.mi-nightlife:before{content:\\\"\\\"}.mi-nightlight:before{content:\\\"\\\"}.mi-nightlight-round:before{content:\\\"\\\"}.mi-nights-stay:before{content:\\\"\\\"}.mi-no-accounts:before{content:\\\"\\\"}.mi-no-adult-content:before{content:\\\"\\\"}.mi-no-backpack:before{content:\\\"\\\"}.mi-no-cell:before{content:\\\"\\\"}.mi-no-crash:before{content:\\\"\\\"}.mi-no-drinks:before{content:\\\"\\\"}.mi-no-encryption:before{content:\\\"\\\"}.mi-no-encryption-gmailerrorred:before{content:\\\"\\\"}.mi-no-flash:before{content:\\\"\\\"}.mi-no-food:before{content:\\\"\\\"}.mi-no-luggage:before{content:\\\"\\\"}.mi-no-meals:before{content:\\\"\\\"}.mi-no-meals-ouline:before{content:\\\"\\\"}.mi-no-meeting-room:before{content:\\\"\\\"}.mi-no-photography:before{content:\\\"\\\"}.mi-no-sim:before{content:\\\"\\\"}.mi-no-stroller:before{content:\\\"\\\"}.mi-no-transfer:before{content:\\\"\\\"}.mi-noise-aware:before{content:\\\"\\\"}.mi-noise-control-off:before{content:\\\"\\\"}.mi-nordic-walking:before{content:\\\"\\\"}.mi-north:before{content:\\\"\\\"}.mi-north-east:before{content:\\\"\\\"}.mi-north-west:before{content:\\\"\\\"}.mi-not-accessible:before{content:\\\"\\\"}.mi-not-interested:before{content:\\\"\\\"}.mi-not-listed-location:before{content:\\\"\\\"}.mi-not-started:before{content:\\\"\\\"}.mi-note:before{content:\\\"\\\"}.mi-note-add:before{content:\\\"\\\"}.mi-note-alt:before{content:\\\"\\\"}.mi-notes:before{content:\\\"\\\"}.mi-notification-add:before{content:\\\"\\\"}.mi-notification-important:before{content:\\\"\\\"}.mi-notifications:before{content:\\\"\\\"}.mi-notifications-active:before{content:\\\"\\\"}.mi-notifications-none:before{content:\\\"\\\"}.mi-notifications-off:before{content:\\\"\\\"}.mi-notifications-on:before{content:\\\"\\\"}.mi-notifications-paused:before{content:\\\"\\\"}.mi-now-wallpaper:before{content:\\\"\\\"}.mi-now-widgets:before{content:\\\"\\\"}.mi-numbers:before{content:\\\"\\\"}.mi-offline-bolt:before{content:\\\"\\\"}.mi-offline-pin:before{content:\\\"\\\"}.mi-offline-share:before{content:\\\"\\\"}.mi-oil-barrel:before{content:\\\"\\\"}.mi-on-device-training:before{content:\\\"\\\"}.mi-ondemand-video:before{content:\\\"\\\"}.mi-online-prediction:before{content:\\\"\\\"}.mi-opacity:before{content:\\\"\\\"}.mi-open-in-browser:before{content:\\\"\\\"}.mi-open-in-full:before{content:\\\"\\\"}.mi-open-in-new:before{content:\\\"\\\"}.mi-open-in-new-off:before{content:\\\"\\\"}.mi-open-with:before{content:\\\"\\\"}.mi-other-houses:before{content:\\\"\\\"}.mi-outbond:before{content:\\\"\\\"}.mi-outbound:before{content:\\\"\\\"}.mi-outbox:before{content:\\\"\\\"}.mi-outdoor-grill:before{content:\\\"\\\"}.mi-outgoing-mail:before{content:\\\"\\\"}.mi-outlet:before{content:\\\"\\\"}.mi-outlined-flag:before{content:\\\"\\\"}.mi-output:before{content:\\\"\\\"}.mi-padding:before{content:\\\"\\\"}.mi-pages:before{content:\\\"\\\"}.mi-pageview:before{content:\\\"\\\"}.mi-paid:before{content:\\\"\\\"}.mi-palette:before{content:\\\"\\\"}.mi-pallet:before{content:\\\"\\\"}.mi-pan-tool:before{content:\\\"\\\"}.mi-pan-tool-alt:before{content:\\\"\\\"}.mi-panorama:before{content:\\\"\\\"}.mi-panorama-fish-eye:before,.mi-panorama-fisheye:before{content:\\\"\\\"}.mi-panorama-horizontal:before{content:\\\"\\\"}.mi-panorama-horizontal-select:before{content:\\\"\\\"}.mi-panorama-photosphere:before{content:\\\"\\\"}.mi-panorama-photosphere-select:before{content:\\\"\\\"}.mi-panorama-vertical:before{content:\\\"\\\"}.mi-panorama-vertical-select:before{content:\\\"\\\"}.mi-panorama-wide-angle:before{content:\\\"\\\"}.mi-panorama-wide-angle-select:before{content:\\\"\\\"}.mi-paragliding:before{content:\\\"\\\"}.mi-park:before{content:\\\"\\\"}.mi-party-mode:before{content:\\\"\\\"}.mi-password:before{content:\\\"\\\"}.mi-paste:before{content:\\\"\\\"}.mi-pattern:before{content:\\\"\\\"}.mi-pause:before{content:\\\"\\\"}.mi-pause-circle:before{content:\\\"\\\"}.mi-pause-circle-filled:before{content:\\\"\\\"}.mi-pause-circle-outline:before{content:\\\"\\\"}.mi-pause-presentation:before{content:\\\"\\\"}.mi-payment:before{content:\\\"\\\"}.mi-payments:before{content:\\\"\\\"}.mi-paypal:before{content:\\\"\\\"}.mi-pedal-bike:before{content:\\\"\\\"}.mi-pending:before{content:\\\"\\\"}.mi-pending-actions:before{content:\\\"\\\"}.mi-pentagon:before{content:\\\"\\\"}.mi-people:before{content:\\\"\\\"}.mi-people-alt:before{content:\\\"\\\"}.mi-people-outline:before{content:\\\"\\\"}.mi-percent:before{content:\\\"\\\"}.mi-perm-camera-mic:before{content:\\\"\\\"}.mi-perm-contact-cal:before,.mi-perm-contact-calendar:before{content:\\\"\\\"}.mi-perm-data-setting:before{content:\\\"\\\"}.mi-perm-device-info:before,.mi-perm-device-information:before{content:\\\"\\\"}.mi-perm-identity:before{content:\\\"\\\"}.mi-perm-media:before{content:\\\"\\\"}.mi-perm-phone-msg:before{content:\\\"\\\"}.mi-perm-scan-wifi:before{content:\\\"\\\"}.mi-person:before{content:\\\"\\\"}.mi-person-2:before{content:\\\"\\\"}.mi-person-3:before{content:\\\"\\\"}.mi-person-4:before{content:\\\"\\\"}.mi-person-add:before{content:\\\"\\\"}.mi-person-add-alt:before{content:\\\"\\\"}.mi-person-add-alt-1:before{content:\\\"\\\"}.mi-person-add-disabled:before{content:\\\"\\\"}.mi-person-off:before{content:\\\"\\\"}.mi-person-outline:before{content:\\\"\\\"}.mi-person-pin:before{content:\\\"\\\"}.mi-person-pin-circle:before{content:\\\"\\\"}.mi-person-remove:before{content:\\\"\\\"}.mi-person-remove-alt-1:before{content:\\\"\\\"}.mi-person-search:before{content:\\\"\\\"}.mi-personal-injury:before{content:\\\"\\\"}.mi-personal-video:before{content:\\\"\\\"}.mi-pest-control:before{content:\\\"\\\"}.mi-pest-control-rodent:before{content:\\\"\\\"}.mi-pets:before{content:\\\"\\\"}.mi-phishing:before{content:\\\"\\\"}.mi-phone:before{content:\\\"\\\"}.mi-phone-android:before{content:\\\"\\\"}.mi-phone-bluetooth-speaker:before{content:\\\"\\\"}.mi-phone-callback:before{content:\\\"\\\"}.mi-phone-disabled:before{content:\\\"\\\"}.mi-phone-enabled:before{content:\\\"\\\"}.mi-phone-forwarded:before{content:\\\"\\\"}.mi-phone-in-talk:before{content:\\\"\\\"}.mi-phone-iphone:before{content:\\\"\\\"}.mi-phone-locked:before{content:\\\"\\\"}.mi-phone-missed:before{content:\\\"\\\"}.mi-phone-paused:before{content:\\\"\\\"}.mi-phonelink:before{content:\\\"\\\"}.mi-phonelink-erase:before{content:\\\"\\\"}.mi-phonelink-lock:before{content:\\\"\\\"}.mi-phonelink-off:before{content:\\\"\\\"}.mi-phonelink-ring:before{content:\\\"\\\"}.mi-phonelink-setup:before{content:\\\"\\\"}.mi-photo:before{content:\\\"\\\"}.mi-photo-album:before{content:\\\"\\\"}.mi-photo-camera:before{content:\\\"\\\"}.mi-photo-camera-back:before{content:\\\"\\\"}.mi-photo-camera-front:before{content:\\\"\\\"}.mi-photo-filter:before{content:\\\"\\\"}.mi-photo-library:before{content:\\\"\\\"}.mi-photo-size-select-actual:before{content:\\\"\\\"}.mi-photo-size-select-large:before{content:\\\"\\\"}.mi-photo-size-select-small:before{content:\\\"\\\"}.mi-php:before{content:\\\"\\\"}.mi-piano:before{content:\\\"\\\"}.mi-piano-off:before{content:\\\"\\\"}.mi-picture-as-pdf:before{content:\\\"\\\"}.mi-picture-in-picture:before{content:\\\"\\\"}.mi-picture-in-picture-alt:before{content:\\\"\\\"}.mi-pie-chart:before{content:\\\"\\\"}.mi-pie-chart-outline:before{content:\\\"\\\"}.mi-pie-chart-outlined:before{content:\\\"\\\"}.mi-pin:before{content:\\\"\\\"}.mi-pin-drop:before{content:\\\"\\\"}.mi-pin-end:before{content:\\\"\\\"}.mi-pin-invoke:before{content:\\\"\\\"}.mi-pinch:before{content:\\\"\\\"}.mi-pivot-table-chart:before{content:\\\"\\\"}.mi-pix:before{content:\\\"\\\"}.mi-place:before{content:\\\"\\\"}.mi-plagiarism:before{content:\\\"\\\"}.mi-play-arrow:before{content:\\\"\\\"}.mi-play-circle:before{content:\\\"\\\"}.mi-play-circle-fill:before,.mi-play-circle-filled:before{content:\\\"\\\"}.mi-play-circle-outline:before{content:\\\"\\\"}.mi-play-disabled:before{content:\\\"\\\"}.mi-play-for-work:before{content:\\\"\\\"}.mi-play-lesson:before{content:\\\"\\\"}.mi-playlist-add:before{content:\\\"\\\"}.mi-playlist-add-check:before{content:\\\"\\\"}.mi-playlist-add-check-circle:before{content:\\\"\\\"}.mi-playlist-add-circle:before{content:\\\"\\\"}.mi-playlist-play:before{content:\\\"\\\"}.mi-playlist-remove:before{content:\\\"\\\"}.mi-plumbing:before{content:\\\"\\\"}.mi-plus-one:before{content:\\\"\\\"}.mi-podcasts:before{content:\\\"\\\"}.mi-point-of-sale:before{content:\\\"\\\"}.mi-policy:before{content:\\\"\\\"}.mi-poll:before{content:\\\"\\\"}.mi-polyline:before{content:\\\"\\\"}.mi-polymer:before{content:\\\"\\\"}.mi-pool:before{content:\\\"\\\"}.mi-portable-wifi-off:before{content:\\\"\\\"}.mi-portrait:before{content:\\\"\\\"}.mi-post-add:before{content:\\\"\\\"}.mi-power:before{content:\\\"\\\"}.mi-power-input:before{content:\\\"\\\"}.mi-power-off:before{content:\\\"\\\"}.mi-power-settings-new:before{content:\\\"\\\"}.mi-precision-manufacturing:before{content:\\\"\\\"}.mi-pregnant-woman:before{content:\\\"\\\"}.mi-present-to-all:before{content:\\\"\\\"}.mi-preview:before{content:\\\"\\\"}.mi-price-change:before{content:\\\"\\\"}.mi-price-check:before{content:\\\"\\\"}.mi-print:before{content:\\\"\\\"}.mi-print-disabled:before{content:\\\"\\\"}.mi-priority-high:before{content:\\\"\\\"}.mi-privacy-tip:before{content:\\\"\\\"}.mi-private-connectivity:before{content:\\\"\\\"}.mi-production-quantity-limits:before{content:\\\"\\\"}.mi-propane:before{content:\\\"\\\"}.mi-propane-tank:before{content:\\\"\\\"}.mi-psychology:before{content:\\\"\\\"}.mi-psychology-alt:before{content:\\\"\\\"}.mi-public:before{content:\\\"\\\"}.mi-public-off:before{content:\\\"\\\"}.mi-publish:before{content:\\\"\\\"}.mi-published-with-changes:before{content:\\\"\\\"}.mi-punch-clock:before{content:\\\"\\\"}.mi-push-pin:before{content:\\\"\\\"}.mi-qr-code:before{content:\\\"\\\"}.mi-qr-code-2:before{content:\\\"\\\"}.mi-qr-code-scanner:before{content:\\\"\\\"}.mi-query-builder:before{content:\\\"\\\"}.mi-query-stats:before{content:\\\"\\\"}.mi-question-answer:before{content:\\\"\\\"}.mi-question-mark:before{content:\\\"\\\"}.mi-queue:before{content:\\\"\\\"}.mi-queue-music:before{content:\\\"\\\"}.mi-queue-play-next:before{content:\\\"\\\"}.mi-quick-contacts-dialer:before{content:\\\"\\\"}.mi-quick-contacts-mail:before{content:\\\"\\\"}.mi-quickreply:before{content:\\\"\\\"}.mi-quiz:before{content:\\\"\\\"}.mi-quora:before{content:\\\"\\\"}.mi-r-mobiledata:before{content:\\\"\\\"}.mi-radar:before{content:\\\"\\\"}.mi-radio:before{content:\\\"\\\"}.mi-radio-button-checked:before{content:\\\"\\\"}.mi-radio-button-off:before{content:\\\"\\\"}.mi-radio-button-on:before{content:\\\"\\\"}.mi-radio-button-unchecked:before{content:\\\"\\\"}.mi-railway-alert:before{content:\\\"\\\"}.mi-ramen-dining:before{content:\\\"\\\"}.mi-ramp-left:before{content:\\\"\\\"}.mi-ramp-right:before{content:\\\"\\\"}.mi-rate-review:before{content:\\\"\\\"}.mi-raw-off:before{content:\\\"\\\"}.mi-raw-on:before{content:\\\"\\\"}.mi-read-more:before{content:\\\"\\\"}.mi-real-estate-agent:before{content:\\\"\\\"}.mi-rebase-edit:before{content:\\\"\\\"}.mi-receipt:before{content:\\\"\\\"}.mi-receipt-long:before{content:\\\"\\\"}.mi-recent-actors:before{content:\\\"\\\"}.mi-recommend:before{content:\\\"\\\"}.mi-record-voice-over:before{content:\\\"\\\"}.mi-rectangle:before{content:\\\"\\\"}.mi-recycling:before{content:\\\"\\\"}.mi-reddit:before{content:\\\"\\\"}.mi-redeem:before{content:\\\"\\\"}.mi-redo:before{content:\\\"\\\"}.mi-reduce-capacity:before{content:\\\"\\\"}.mi-refresh:before{content:\\\"\\\"}.mi-remember-me:before{content:\\\"\\\"}.mi-remove:before{content:\\\"\\\"}.mi-remove-circle:before{content:\\\"\\\"}.mi-remove-circle-outline:before{content:\\\"\\\"}.mi-remove-done:before{content:\\\"\\\"}.mi-remove-from-queue:before{content:\\\"\\\"}.mi-remove-moderator:before{content:\\\"\\\"}.mi-remove-red-eye:before{content:\\\"\\\"}.mi-remove-road:before{content:\\\"\\\"}.mi-remove-shopping-cart:before{content:\\\"\\\"}.mi-reorder:before{content:\\\"\\\"}.mi-repartition:before{content:\\\"\\\"}.mi-repeat:before{content:\\\"\\\"}.mi-repeat-on:before{content:\\\"\\\"}.mi-repeat-one:before{content:\\\"\\\"}.mi-repeat-one-on:before{content:\\\"\\\"}.mi-replay:before{content:\\\"\\\"}.mi-replay-10:before{content:\\\"\\\"}.mi-replay-30:before{content:\\\"\\\"}.mi-replay-5:before{content:\\\"\\\"}.mi-replay-circle-filled:before{content:\\\"\\\"}.mi-reply:before{content:\\\"\\\"}.mi-reply-all:before{content:\\\"\\\"}.mi-report:before{content:\\\"\\\"}.mi-report-gmailerrorred:before{content:\\\"\\\"}.mi-report-off:before{content:\\\"\\\"}.mi-report-problem:before{content:\\\"\\\"}.mi-request-page:before{content:\\\"\\\"}.mi-request-quote:before{content:\\\"\\\"}.mi-reset-tv:before{content:\\\"\\\"}.mi-restart-alt:before{content:\\\"\\\"}.mi-restaurant:before{content:\\\"\\\"}.mi-restaurant-menu:before{content:\\\"\\\"}.mi-restore:before{content:\\\"\\\"}.mi-restore-from-trash:before{content:\\\"\\\"}.mi-restore-page:before{content:\\\"\\\"}.mi-reviews:before{content:\\\"\\\"}.mi-rice-bowl:before{content:\\\"\\\"}.mi-ring-volume:before{content:\\\"\\\"}.mi-rocket:before{content:\\\"\\\"}.mi-rocket-launch:before{content:\\\"\\\"}.mi-roller-shades:before{content:\\\"\\\"}.mi-roller-shades-closed:before{content:\\\"\\\"}.mi-roller-skating:before{content:\\\"\\\"}.mi-roofing:before{content:\\\"\\\"}.mi-room:before{content:\\\"\\\"}.mi-room-preferences:before{content:\\\"\\\"}.mi-room-service:before{content:\\\"\\\"}.mi-rotate-90-degrees-ccw:before{content:\\\"\\\"}.mi-rotate-90-degrees-cw:before{content:\\\"\\\"}.mi-rotate-left:before{content:\\\"\\\"}.mi-rotate-right:before{content:\\\"\\\"}.mi-roundabout-left:before{content:\\\"\\\"}.mi-roundabout-right:before{content:\\\"\\\"}.mi-rounded-corner:before{content:\\\"\\\"}.mi-route:before{content:\\\"\\\"}.mi-router:before{content:\\\"\\\"}.mi-rowing:before{content:\\\"\\\"}.mi-rss-feed:before{content:\\\"\\\"}.mi-rsvp:before{content:\\\"\\\"}.mi-rtt:before{content:\\\"\\\"}.mi-rule:before{content:\\\"\\\"}.mi-rule-folder:before{content:\\\"\\\"}.mi-run-circle:before{content:\\\"\\\"}.mi-running-with-errors:before{content:\\\"\\\"}.mi-rv-hookup:before{content:\\\"\\\"}.mi-safety-check:before{content:\\\"\\\"}.mi-safety-divider:before{content:\\\"\\\"}.mi-sailing:before{content:\\\"\\\"}.mi-sanitizer:before{content:\\\"\\\"}.mi-satellite:before{content:\\\"\\\"}.mi-satellite-alt:before{content:\\\"\\\"}.mi-save:before{content:\\\"\\\"}.mi-save-alt:before{content:\\\"\\\"}.mi-save-as:before{content:\\\"\\\"}.mi-saved-search:before{content:\\\"\\\"}.mi-savings:before{content:\\\"\\\"}.mi-scale:before{content:\\\"\\\"}.mi-scanner:before{content:\\\"\\\"}.mi-scatter-plot:before{content:\\\"\\\"}.mi-schedule:before{content:\\\"\\\"}.mi-schedule-send:before{content:\\\"\\\"}.mi-schema:before{content:\\\"\\\"}.mi-school:before{content:\\\"\\\"}.mi-science:before{content:\\\"\\\"}.mi-score:before{content:\\\"\\\"}.mi-scoreboard:before{content:\\\"\\\"}.mi-screen-lock-landscape:before{content:\\\"\\\"}.mi-screen-lock-portrait:before{content:\\\"\\\"}.mi-screen-lock-rotation:before{content:\\\"\\\"}.mi-screen-rotation:before{content:\\\"\\\"}.mi-screen-rotation-alt:before{content:\\\"\\\"}.mi-screen-search-desktop:before{content:\\\"\\\"}.mi-screen-share:before{content:\\\"\\\"}.mi-screenshot:before{content:\\\"\\\"}.mi-screenshot-monitor:before{content:\\\"\\\"}.mi-scuba-diving:before{content:\\\"\\\"}.mi-sd:before{content:\\\"\\\"}.mi-sd-card:before{content:\\\"\\\"}.mi-sd-card-alert:before{content:\\\"\\\"}.mi-sd-storage:before{content:\\\"\\\"}.mi-search:before{content:\\\"\\\"}.mi-search-off:before{content:\\\"\\\"}.mi-security:before{content:\\\"\\\"}.mi-security-update:before{content:\\\"\\\"}.mi-security-update-good:before{content:\\\"\\\"}.mi-security-update-warning:before{content:\\\"\\\"}.mi-segment:before{content:\\\"\\\"}.mi-select-all:before{content:\\\"\\\"}.mi-self-improvement:before{content:\\\"\\\"}.mi-sell:before{content:\\\"\\\"}.mi-send:before{content:\\\"\\\"}.mi-send-and-archive:before{content:\\\"\\\"}.mi-send-time-extension:before{content:\\\"\\\"}.mi-send-to-mobile:before{content:\\\"\\\"}.mi-sensor-door:before{content:\\\"\\\"}.mi-sensor-occupied:before{content:\\\"\\\"}.mi-sensor-window:before{content:\\\"\\\"}.mi-sensors:before{content:\\\"\\\"}.mi-sensors-off:before{content:\\\"\\\"}.mi-sentiment-dissatisfied:before{content:\\\"\\\"}.mi-sentiment-neutral:before{content:\\\"\\\"}.mi-sentiment-satisfied:before{content:\\\"\\\"}.mi-sentiment-satisfied-alt:before{content:\\\"\\\"}.mi-sentiment-very-dissatisfied:before{content:\\\"\\\"}.mi-sentiment-very-satisfied:before{content:\\\"\\\"}.mi-set-meal:before{content:\\\"\\\"}.mi-settings:before{content:\\\"\\\"}.mi-settings-accessibility:before{content:\\\"\\\"}.mi-settings-applications:before{content:\\\"\\\"}.mi-settings-backup-restore:before{content:\\\"\\\"}.mi-settings-bluetooth:before{content:\\\"\\\"}.mi-settings-brightness:before{content:\\\"\\\"}.mi-settings-cell:before{content:\\\"\\\"}.mi-settings-display:before{content:\\\"\\\"}.mi-settings-ethernet:before{content:\\\"\\\"}.mi-settings-input-antenna:before{content:\\\"\\\"}.mi-settings-input-component:before{content:\\\"\\\"}.mi-settings-input-composite:before{content:\\\"\\\"}.mi-settings-input-hdmi:before{content:\\\"\\\"}.mi-settings-input-svideo:before{content:\\\"\\\"}.mi-settings-overscan:before{content:\\\"\\\"}.mi-settings-phone:before{content:\\\"\\\"}.mi-settings-power:before{content:\\\"\\\"}.mi-settings-remote:before{content:\\\"\\\"}.mi-settings-suggest:before{content:\\\"\\\"}.mi-settings-system-daydream:before{content:\\\"\\\"}.mi-settings-voice:before{content:\\\"\\\"}.mi-severe-cold:before{content:\\\"\\\"}.mi-shape-line:before{content:\\\"\\\"}.mi-share:before{content:\\\"\\\"}.mi-share-arrival-time:before{content:\\\"\\\"}.mi-share-location:before{content:\\\"\\\"}.mi-shelves:before{content:\\\"\\\"}.mi-shield:before{content:\\\"\\\"}.mi-shield-moon:before{content:\\\"\\\"}.mi-shop:before{content:\\\"\\\"}.mi-shop-2:before{content:\\\"\\\"}.mi-shop-two:before{content:\\\"\\\"}.mi-shopify:before{content:\\\"\\\"}.mi-shopping-bag:before{content:\\\"\\\"}.mi-shopping-basket:before{content:\\\"\\\"}.mi-shopping-cart:before{content:\\\"\\\"}.mi-shopping-cart-checkout:before{content:\\\"\\\"}.mi-short-text:before{content:\\\"\\\"}.mi-shortcut:before{content:\\\"\\\"}.mi-show-chart:before{content:\\\"\\\"}.mi-shower:before{content:\\\"\\\"}.mi-shuffle:before{content:\\\"\\\"}.mi-shuffle-on:before{content:\\\"\\\"}.mi-shutter-speed:before{content:\\\"\\\"}.mi-sick:before{content:\\\"\\\"}.mi-sign-language:before{content:\\\"\\\"}.mi-signal-cellular-0-bar:before{content:\\\"\\\"}.mi-signal-cellular-1-bar:before{content:\\\"\\\"}.mi-signal-cellular-2-bar:before{content:\\\"\\\"}.mi-signal-cellular-3-bar:before{content:\\\"\\\"}.mi-signal-cellular-4-bar:before{content:\\\"\\\"}.mi-signal-cellular-alt:before{content:\\\"\\\"}.mi-signal-cellular-alt-1-bar:before{content:\\\"\\\"}.mi-signal-cellular-alt-2-bar:before{content:\\\"\\\"}.mi-signal-cellular-connected-no-internet-0-bar:before{content:\\\"\\\"}.mi-signal-cellular-connected-no-internet-1-bar:before{content:\\\"\\\"}.mi-signal-cellular-connected-no-internet-2-bar:before{content:\\\"\\\"}.mi-signal-cellular-connected-no-internet-3-bar:before{content:\\\"\\\"}.mi-signal-cellular-connected-no-internet-4-bar:before{content:\\\"\\\"}.mi-signal-cellular-no-sim:before{content:\\\"\\\"}.mi-signal-cellular-nodata:before{content:\\\"\\\"}.mi-signal-cellular-null:before{content:\\\"\\\"}.mi-signal-cellular-off:before{content:\\\"\\\"}.mi-signal-wifi-0-bar:before{content:\\\"\\\"}.mi-signal-wifi-1-bar:before{content:\\\"\\\"}.mi-signal-wifi-1-bar-lock:before{content:\\\"\\\"}.mi-signal-wifi-2-bar:before{content:\\\"\\\"}.mi-signal-wifi-2-bar-lock:before{content:\\\"\\\"}.mi-signal-wifi-3-bar:before{content:\\\"\\\"}.mi-signal-wifi-3-bar-lock:before{content:\\\"\\\"}.mi-signal-wifi-4-bar:before{content:\\\"\\\"}.mi-signal-wifi-4-bar-lock:before{content:\\\"\\\"}.mi-signal-wifi-bad:before{content:\\\"\\\"}.mi-signal-wifi-connected-no-internet-0:before{content:\\\"\\\"}.mi-signal-wifi-connected-no-internet-1:before{content:\\\"\\\"}.mi-signal-wifi-connected-no-internet-2:before{content:\\\"\\\"}.mi-signal-wifi-connected-no-internet-3:before{content:\\\"\\\"}.mi-signal-wifi-connected-no-internet-4:before{content:\\\"\\\"}.mi-signal-wifi-off:before{content:\\\"\\\"}.mi-signal-wifi-statusbar-1-bar:before{content:\\\"\\\"}.mi-signal-wifi-statusbar-2-bar:before{content:\\\"\\\"}.mi-signal-wifi-statusbar-3-bar:before{content:\\\"\\\"}.mi-signal-wifi-statusbar-4-bar:before{content:\\\"\\\"}.mi-signal-wifi-statusbar-connected-no-internet:before{content:\\\"\\\"}.mi-signal-wifi-statusbar-connected-no-internet-1:before{content:\\\"\\\"}.mi-signal-wifi-statusbar-connected-no-internet-2:before{content:\\\"\\\"}.mi-signal-wifi-statusbar-connected-no-internet-3:before{content:\\\"\\\"}.mi-signal-wifi-statusbar-connected-no-internet-4:before{content:\\\"\\\"}.mi-signal-wifi-statusbar-not-connected:before{content:\\\"\\\"}.mi-signal-wifi-statusbar-null:before{content:\\\"\\\"}.mi-signpost:before{content:\\\"\\\"}.mi-sim-card:before{content:\\\"\\\"}.mi-sim-card-alert:before{content:\\\"\\\"}.mi-sim-card-download:before{content:\\\"\\\"}.mi-single-bed:before{content:\\\"\\\"}.mi-sip:before{content:\\\"\\\"}.mi-skateboarding:before{content:\\\"\\\"}.mi-skip-next:before{content:\\\"\\\"}.mi-skip-previous:before{content:\\\"\\\"}.mi-sledding:before{content:\\\"\\\"}.mi-slideshow:before{content:\\\"\\\"}.mi-slow-motion-video:before{content:\\\"\\\"}.mi-smart-button:before{content:\\\"\\\"}.mi-smart-display:before{content:\\\"\\\"}.mi-smart-screen:before{content:\\\"\\\"}.mi-smart-toy:before{content:\\\"\\\"}.mi-smartphone:before{content:\\\"\\\"}.mi-smoke-free:before{content:\\\"\\\"}.mi-smoking-rooms:before{content:\\\"\\\"}.mi-sms:before{content:\\\"\\\"}.mi-sms-failed:before{content:\\\"\\\"}.mi-snapchat:before{content:\\\"\\\"}.mi-snippet-folder:before{content:\\\"\\\"}.mi-snooze:before{content:\\\"\\\"}.mi-snowboarding:before{content:\\\"\\\"}.mi-snowing:before{content:\\\"\\\"}.mi-snowmobile:before{content:\\\"\\\"}.mi-snowshoeing:before{content:\\\"\\\"}.mi-soap:before{content:\\\"\\\"}.mi-social-distance:before{content:\\\"\\\"}.mi-solar-power:before{content:\\\"\\\"}.mi-sort:before{content:\\\"\\\"}.mi-sort-by-alpha:before{content:\\\"\\\"}.mi-sos:before{content:\\\"\\\"}.mi-soup-kitchen:before{content:\\\"\\\"}.mi-source:before{content:\\\"\\\"}.mi-south:before{content:\\\"\\\"}.mi-south-america:before{content:\\\"\\\"}.mi-south-east:before{content:\\\"\\\"}.mi-south-west:before{content:\\\"\\\"}.mi-spa:before{content:\\\"\\\"}.mi-space-bar:before{content:\\\"\\\"}.mi-space-dashboard:before{content:\\\"\\\"}.mi-spatial-audio:before{content:\\\"\\\"}.mi-spatial-audio-off:before{content:\\\"\\\"}.mi-spatial-tracking:before{content:\\\"\\\"}.mi-speaker:before{content:\\\"\\\"}.mi-speaker-group:before{content:\\\"\\\"}.mi-speaker-notes:before{content:\\\"\\\"}.mi-speaker-notes-off:before{content:\\\"\\\"}.mi-speaker-phone:before{content:\\\"\\\"}.mi-speed:before{content:\\\"\\\"}.mi-spellcheck:before{content:\\\"\\\"}.mi-splitscreen:before{content:\\\"\\\"}.mi-spoke:before{content:\\\"\\\"}.mi-sports:before{content:\\\"\\\"}.mi-sports-bar:before{content:\\\"\\\"}.mi-sports-baseball:before{content:\\\"\\\"}.mi-sports-basketball:before{content:\\\"\\\"}.mi-sports-cricket:before{content:\\\"\\\"}.mi-sports-esports:before{content:\\\"\\\"}.mi-sports-football:before{content:\\\"\\\"}.mi-sports-golf:before{content:\\\"\\\"}.mi-sports-gymnastics:before{content:\\\"\\\"}.mi-sports-handball:before{content:\\\"\\\"}.mi-sports-hockey:before{content:\\\"\\\"}.mi-sports-kabaddi:before{content:\\\"\\\"}.mi-sports-martial-arts:before{content:\\\"\\\"}.mi-sports-mma:before{content:\\\"\\\"}.mi-sports-motorsports:before{content:\\\"\\\"}.mi-sports-rugby:before{content:\\\"\\\"}.mi-sports-score:before{content:\\\"\\\"}.mi-sports-soccer:before{content:\\\"\\\"}.mi-sports-tennis:before{content:\\\"\\\"}.mi-sports-volleyball:before{content:\\\"\\\"}.mi-square:before{content:\\\"\\\"}.mi-square-foot:before{content:\\\"\\\"}.mi-ssid-chart:before{content:\\\"\\\"}.mi-stacked-bar-chart:before{content:\\\"\\\"}.mi-stacked-line-chart:before{content:\\\"\\\"}.mi-stadium:before{content:\\\"\\\"}.mi-stairs:before{content:\\\"\\\"}.mi-star:before{content:\\\"\\\"}.mi-star-border:before{content:\\\"\\\"}.mi-star-border-purple500:before{content:\\\"\\\"}.mi-star-half:before{content:\\\"\\\"}.mi-star-outline:before{content:\\\"\\\"}.mi-star-purple500:before{content:\\\"\\\"}.mi-star-rate:before{content:\\\"\\\"}.mi-stars:before{content:\\\"\\\"}.mi-start:before{content:\\\"\\\"}.mi-stay-current-landscape:before{content:\\\"\\\"}.mi-stay-current-portrait:before{content:\\\"\\\"}.mi-stay-primary-landscape:before{content:\\\"\\\"}.mi-stay-primary-portrait:before{content:\\\"\\\"}.mi-sticky-note-2:before{content:\\\"\\\"}.mi-stop:before{content:\\\"\\\"}.mi-stop-circle:before{content:\\\"\\\"}.mi-stop-screen-share:before{content:\\\"\\\"}.mi-storage:before{content:\\\"\\\"}.mi-store:before{content:\\\"\\\"}.mi-store-mall-directory:before{content:\\\"\\\"}.mi-storefront:before{content:\\\"\\\"}.mi-storm:before{content:\\\"\\\"}.mi-straight:before{content:\\\"\\\"}.mi-straighten:before{content:\\\"\\\"}.mi-stream:before{content:\\\"\\\"}.mi-streetview:before{content:\\\"\\\"}.mi-strikethrough-s:before{content:\\\"\\\"}.mi-stroller:before{content:\\\"\\\"}.mi-style:before{content:\\\"\\\"}.mi-subdirectory-arrow-left:before{content:\\\"\\\"}.mi-subdirectory-arrow-right:before{content:\\\"\\\"}.mi-subject:before{content:\\\"\\\"}.mi-subscript:before{content:\\\"\\\"}.mi-subscriptions:before{content:\\\"\\\"}.mi-subtitles:before{content:\\\"\\\"}.mi-subtitles-off:before{content:\\\"\\\"}.mi-subway:before{content:\\\"\\\"}.mi-summarize:before{content:\\\"\\\"}.mi-sunny:before{content:\\\"\\\"}.mi-sunny-snowing:before{content:\\\"\\\"}.mi-superscript:before{content:\\\"\\\"}.mi-supervised-user-circle:before{content:\\\"\\\"}.mi-supervisor-account:before{content:\\\"\\\"}.mi-support:before{content:\\\"\\\"}.mi-support-agent:before{content:\\\"\\\"}.mi-surfing:before{content:\\\"\\\"}.mi-surround-sound:before{content:\\\"\\\"}.mi-swap-calls:before{content:\\\"\\\"}.mi-swap-horiz:before{content:\\\"\\\"}.mi-swap-horizontal-circle:before{content:\\\"\\\"}.mi-swap-vert:before{content:\\\"\\\"}.mi-swap-vert-circle:before,.mi-swap-vertical-circle:before{content:\\\"\\\"}.mi-swipe:before{content:\\\"\\\"}.mi-swipe-down:before{content:\\\"\\\"}.mi-swipe-down-alt:before{content:\\\"\\\"}.mi-swipe-left:before{content:\\\"\\\"}.mi-swipe-left-alt:before{content:\\\"\\\"}.mi-swipe-right:before{content:\\\"\\\"}.mi-swipe-right-alt:before{content:\\\"\\\"}.mi-swipe-up:before{content:\\\"\\\"}.mi-swipe-up-alt:before{content:\\\"\\\"}.mi-swipe-vertical:before{content:\\\"\\\"}.mi-switch-access-shortcut:before{content:\\\"\\\"}.mi-switch-access-shortcut-add:before{content:\\\"\\\"}.mi-switch-account:before{content:\\\"\\\"}.mi-switch-camera:before{content:\\\"\\\"}.mi-switch-left:before{content:\\\"\\\"}.mi-switch-right:before{content:\\\"\\\"}.mi-switch-video:before{content:\\\"\\\"}.mi-synagogue:before{content:\\\"\\\"}.mi-sync:before{content:\\\"\\\"}.mi-sync-alt:before{content:\\\"\\\"}.mi-sync-disabled:before{content:\\\"\\\"}.mi-sync-lock:before{content:\\\"\\\"}.mi-sync-problem:before{content:\\\"\\\"}.mi-system-security-update:before{content:\\\"\\\"}.mi-system-security-update-good:before{content:\\\"\\\"}.mi-system-security-update-warning:before{content:\\\"\\\"}.mi-system-update:before{content:\\\"\\\"}.mi-system-update-alt:before,.mi-system-update-tv:before{content:\\\"\\\"}.mi-tab:before{content:\\\"\\\"}.mi-tab-unselected:before{content:\\\"\\\"}.mi-table-bar:before{content:\\\"\\\"}.mi-table-chart:before{content:\\\"\\\"}.mi-table-restaurant:before{content:\\\"\\\"}.mi-table-rows:before{content:\\\"\\\"}.mi-table-view:before{content:\\\"\\\"}.mi-tablet:before{content:\\\"\\\"}.mi-tablet-android:before{content:\\\"\\\"}.mi-tablet-mac:before{content:\\\"\\\"}.mi-tag:before{content:\\\"\\\"}.mi-tag-faces:before{content:\\\"\\\"}.mi-takeout-dining:before{content:\\\"\\\"}.mi-tap-and-play:before{content:\\\"\\\"}.mi-tapas:before{content:\\\"\\\"}.mi-task:before{content:\\\"\\\"}.mi-task-alt:before{content:\\\"\\\"}.mi-taxi-alert:before{content:\\\"\\\"}.mi-telegram:before{content:\\\"\\\"}.mi-temple-buddhist:before{content:\\\"\\\"}.mi-temple-hindu:before{content:\\\"\\\"}.mi-terminal:before{content:\\\"\\\"}.mi-terrain:before{content:\\\"\\\"}.mi-text-decrease:before{content:\\\"\\\"}.mi-text-fields:before{content:\\\"\\\"}.mi-text-format:before{content:\\\"\\\"}.mi-text-increase:before{content:\\\"\\\"}.mi-text-rotate-up:before{content:\\\"\\\"}.mi-text-rotate-vertical:before{content:\\\"\\\"}.mi-text-rotation-angledown:before{content:\\\"\\\"}.mi-text-rotation-angleup:before{content:\\\"\\\"}.mi-text-rotation-down:before{content:\\\"\\\"}.mi-text-rotation-none:before{content:\\\"\\\"}.mi-text-snippet:before{content:\\\"\\\"}.mi-textsms:before{content:\\\"\\\"}.mi-texture:before{content:\\\"\\\"}.mi-theater-comedy:before{content:\\\"\\\"}.mi-theaters:before{content:\\\"\\\"}.mi-thermostat:before{content:\\\"\\\"}.mi-thermostat-auto:before{content:\\\"\\\"}.mi-thumb-down:before{content:\\\"\\\"}.mi-thumb-down-alt:before{content:\\\"\\\"}.mi-thumb-down-off-alt:before{content:\\\"\\\"}.mi-thumb-up:before{content:\\\"\\\"}.mi-thumb-up-alt:before{content:\\\"\\\"}.mi-thumb-up-off-alt:before{content:\\\"\\\"}.mi-thumbs-up-down:before{content:\\\"\\\"}.mi-thunderstorm:before{content:\\\"\\\"}.mi-tiktok:before{content:\\\"\\\"}.mi-time-to-leave:before{content:\\\"\\\"}.mi-timelapse:before{content:\\\"\\\"}.mi-timeline:before{content:\\\"\\\"}.mi-timer:before{content:\\\"\\\"}.mi-timer-10:before{content:\\\"\\\"}.mi-timer-10-select:before{content:\\\"\\\"}.mi-timer-3:before{content:\\\"\\\"}.mi-timer-3-select:before{content:\\\"\\\"}.mi-timer-off:before{content:\\\"\\\"}.mi-tips-and-updates:before{content:\\\"\\\"}.mi-tire-repair:before{content:\\\"\\\"}.mi-title:before{content:\\\"\\\"}.mi-toc:before{content:\\\"\\\"}.mi-today:before{content:\\\"\\\"}.mi-toggle-off:before{content:\\\"\\\"}.mi-toggle-on:before{content:\\\"\\\"}.mi-token:before{content:\\\"\\\"}.mi-toll:before{content:\\\"\\\"}.mi-tonality:before{content:\\\"\\\"}.mi-topic:before{content:\\\"\\\"}.mi-tornado:before{content:\\\"\\\"}.mi-touch-app:before{content:\\\"\\\"}.mi-tour:before{content:\\\"\\\"}.mi-toys:before{content:\\\"\\\"}.mi-track-changes:before{content:\\\"\\\"}.mi-traffic:before{content:\\\"\\\"}.mi-train:before{content:\\\"\\\"}.mi-tram:before{content:\\\"\\\"}.mi-transcribe:before{content:\\\"\\\"}.mi-transfer-within-a-station:before{content:\\\"\\\"}.mi-transform:before{content:\\\"\\\"}.mi-transgender:before{content:\\\"\\\"}.mi-transit-enterexit:before{content:\\\"\\\"}.mi-translate:before{content:\\\"\\\"}.mi-travel-explore:before{content:\\\"\\\"}.mi-trending-down:before{content:\\\"\\\"}.mi-trending-flat:before,.mi-trending-neutral:before{content:\\\"\\\"}.mi-trending-up:before{content:\\\"\\\"}.mi-trip-origin:before{content:\\\"\\\"}.mi-trolley:before{content:\\\"\\\"}.mi-troubleshoot:before{content:\\\"\\\"}.mi-try:before{content:\\\"\\\"}.mi-tsunami:before{content:\\\"\\\"}.mi-tty:before{content:\\\"\\\"}.mi-tune:before{content:\\\"\\\"}.mi-tungsten:before{content:\\\"\\\"}.mi-turn-left:before{content:\\\"\\\"}.mi-turn-right:before{content:\\\"\\\"}.mi-turn-sharp-left:before{content:\\\"\\\"}.mi-turn-sharp-right:before{content:\\\"\\\"}.mi-turn-slight-left:before{content:\\\"\\\"}.mi-turn-slight-right:before{content:\\\"\\\"}.mi-turned-in:before{content:\\\"\\\"}.mi-turned-in-not:before{content:\\\"\\\"}.mi-tv:before{content:\\\"\\\"}.mi-tv-off:before{content:\\\"\\\"}.mi-two-wheeler:before{content:\\\"\\\"}.mi-type-specimen:before{content:\\\"\\\"}.mi-u-turn-left:before{content:\\\"\\\"}.mi-u-turn-right:before{content:\\\"\\\"}.mi-umbrella:before{content:\\\"\\\"}.mi-unarchive:before{content:\\\"\\\"}.mi-undo:before{content:\\\"\\\"}.mi-unfold-less:before{content:\\\"\\\"}.mi-unfold-less-double:before{content:\\\"\\\"}.mi-unfold-more:before{content:\\\"\\\"}.mi-unfold-more-double:before{content:\\\"\\\"}.mi-unpublished:before{content:\\\"\\\"}.mi-unsubscribe:before{content:\\\"\\\"}.mi-upcoming:before{content:\\\"\\\"}.mi-update:before{content:\\\"\\\"}.mi-update-disabled:before{content:\\\"\\\"}.mi-upgrade:before{content:\\\"\\\"}.mi-upload:before{content:\\\"\\\"}.mi-upload-file:before{content:\\\"\\\"}.mi-usb:before{content:\\\"\\\"}.mi-usb-off:before{content:\\\"\\\"}.mi-vaccines:before{content:\\\"\\\"}.mi-vape-free:before{content:\\\"\\\"}.mi-vaping-rooms:before{content:\\\"\\\"}.mi-verified:before{content:\\\"\\\"}.mi-verified-user:before{content:\\\"\\\"}.mi-vertical-align-bottom:before{content:\\\"\\\"}.mi-vertical-align-center:before{content:\\\"\\\"}.mi-vertical-align-top:before{content:\\\"\\\"}.mi-vertical-distribute:before{content:\\\"\\\"}.mi-vertical-shades:before{content:\\\"\\\"}.mi-vertical-shades-closed:before{content:\\\"\\\"}.mi-vertical-split:before{content:\\\"\\\"}.mi-vibration:before{content:\\\"\\\"}.mi-video-call:before{content:\\\"\\\"}.mi-video-camera-back:before{content:\\\"\\\"}.mi-video-camera-front:before{content:\\\"\\\"}.mi-video-chat:before{content:\\\"\\\"}.mi-video-collection:before{content:\\\"\\\"}.mi-video-file:before{content:\\\"\\\"}.mi-video-label:before{content:\\\"\\\"}.mi-video-library:before{content:\\\"\\\"}.mi-video-settings:before{content:\\\"\\\"}.mi-video-stable:before{content:\\\"\\\"}.mi-videocam:before{content:\\\"\\\"}.mi-videocam-off:before{content:\\\"\\\"}.mi-videogame-asset:before{content:\\\"\\\"}.mi-videogame-asset-off:before{content:\\\"\\\"}.mi-view-agenda:before{content:\\\"\\\"}.mi-view-array:before{content:\\\"\\\"}.mi-view-carousel:before{content:\\\"\\\"}.mi-view-column:before{content:\\\"\\\"}.mi-view-comfortable:before,.mi-view-comfy:before{content:\\\"\\\"}.mi-view-comfy-alt:before{content:\\\"\\\"}.mi-view-compact:before{content:\\\"\\\"}.mi-view-compact-alt:before{content:\\\"\\\"}.mi-view-cozy:before{content:\\\"\\\"}.mi-view-day:before{content:\\\"\\\"}.mi-view-headline:before{content:\\\"\\\"}.mi-view-in-ar:before{content:\\\"\\\"}.mi-view-kanban:before{content:\\\"\\\"}.mi-view-list:before{content:\\\"\\\"}.mi-view-module:before{content:\\\"\\\"}.mi-view-quilt:before{content:\\\"\\\"}.mi-view-sidebar:before{content:\\\"\\\"}.mi-view-stream:before{content:\\\"\\\"}.mi-view-timeline:before{content:\\\"\\\"}.mi-view-week:before{content:\\\"\\\"}.mi-vignette:before{content:\\\"\\\"}.mi-villa:before{content:\\\"\\\"}.mi-visibility:before{content:\\\"\\\"}.mi-visibility-off:before{content:\\\"\\\"}.mi-voice-chat:before{content:\\\"\\\"}.mi-voice-over-off:before{content:\\\"\\\"}.mi-voicemail:before{content:\\\"\\\"}.mi-volcano:before{content:\\\"\\\"}.mi-volume-down:before{content:\\\"\\\"}.mi-volume-down-alt:before{content:\\\"\\\"}.mi-volume-mute:before{content:\\\"\\\"}.mi-volume-off:before{content:\\\"\\\"}.mi-volume-up:before{content:\\\"\\\"}.mi-volunteer-activism:before{content:\\\"\\\"}.mi-vpn-key:before{content:\\\"\\\"}.mi-vpn-key-off:before{content:\\\"\\\"}.mi-vpn-lock:before{content:\\\"\\\"}.mi-vrpano:before{content:\\\"\\\"}.mi-wallet:before{content:\\\"\\\"}.mi-wallet-giftcard:before{content:\\\"\\\"}.mi-wallet-membership:before{content:\\\"\\\"}.mi-wallet-travel:before{content:\\\"\\\"}.mi-wallpaper:before{content:\\\"\\\"}.mi-warehouse:before{content:\\\"\\\"}.mi-warning:before{content:\\\"\\\"}.mi-warning-amber:before{content:\\\"\\\"}.mi-wash:before{content:\\\"\\\"}.mi-watch:before{content:\\\"\\\"}.mi-watch-later:before{content:\\\"\\\"}.mi-watch-off:before{content:\\\"\\\"}.mi-water:before{content:\\\"\\\"}.mi-water-damage:before{content:\\\"\\\"}.mi-water-drop:before{content:\\\"\\\"}.mi-waterfall-chart:before{content:\\\"\\\"}.mi-waves:before{content:\\\"\\\"}.mi-waving-hand:before{content:\\\"\\\"}.mi-wb-auto:before{content:\\\"\\\"}.mi-wb-cloudy:before{content:\\\"\\\"}.mi-wb-incandescent:before{content:\\\"\\\"}.mi-wb-iridescent:before{content:\\\"\\\"}.mi-wb-shade:before{content:\\\"\\\"}.mi-wb-sunny:before{content:\\\"\\\"}.mi-wb-twighlight:before{content:\\\"\\\"}.mi-wb-twilight:before{content:\\\"\\\"}.mi-wc:before{content:\\\"\\\"}.mi-web:before{content:\\\"\\\"}.mi-web-asset:before{content:\\\"\\\"}.mi-web-asset-off:before{content:\\\"\\\"}.mi-web-stories:before{content:\\\"\\\"}.mi-webhook:before{content:\\\"\\\"}.mi-wechat:before{content:\\\"\\\"}.mi-weekend:before{content:\\\"\\\"}.mi-west:before{content:\\\"\\\"}.mi-whatshot:before{content:\\\"\\\"}.mi-wheelchair-pickup:before{content:\\\"\\\"}.mi-where-to-vote:before{content:\\\"\\\"}.mi-widgets:before{content:\\\"\\\"}.mi-width-full:before{content:\\\"\\\"}.mi-width-normal:before{content:\\\"\\\"}.mi-width-wide:before{content:\\\"\\\"}.mi-wifi:before{content:\\\"\\\"}.mi-wifi-1-bar:before{content:\\\"\\\"}.mi-wifi-2-bar:before{content:\\\"\\\"}.mi-wifi-calling:before{content:\\\"\\\"}.mi-wifi-calling-1:before{content:\\\"\\\"}.mi-wifi-calling-2:before{content:\\\"\\\"}.mi-wifi-calling-3:before{content:\\\"\\\"}.mi-wifi-channel:before{content:\\\"\\\"}.mi-wifi-find:before{content:\\\"\\\"}.mi-wifi-lock:before{content:\\\"\\\"}.mi-wifi-off:before{content:\\\"\\\"}.mi-wifi-password:before{content:\\\"\\\"}.mi-wifi-protected-setup:before{content:\\\"\\\"}.mi-wifi-tethering:before{content:\\\"\\\"}.mi-wifi-tethering-error:before{content:\\\"\\\"}.mi-wifi-tethering-error-rounded:before{content:\\\"\\\"}.mi-wifi-tethering-off:before{content:\\\"\\\"}.mi-wind-power:before{content:\\\"\\\"}.mi-window:before{content:\\\"\\\"}.mi-wine-bar:before{content:\\\"\\\"}.mi-woman:before{content:\\\"\\\"}.mi-woman-2:before{content:\\\"\\\"}.mi-woo-commerce:before{content:\\\"\\\"}.mi-wordpress:before{content:\\\"\\\"}.mi-work:before{content:\\\"\\\"}.mi-work-history:before{content:\\\"\\\"}.mi-work-off:before{content:\\\"\\\"}.mi-work-outline:before{content:\\\"\\\"}.mi-workspace-premium:before{content:\\\"\\\"}.mi-workspaces:before{content:\\\"\\\"}.mi-workspaces-filled:before{content:\\\"\\\"}.mi-workspaces-outline:before{content:\\\"\\\"}.mi-wrap-text:before{content:\\\"\\\"}.mi-wrong-location:before{content:\\\"\\\"}.mi-wysiwyg:before{content:\\\"\\\"}.mi-yard:before{content:\\\"\\\"}.mi-youtube-searched-for:before{content:\\\"\\\"}.mi-zoom-in:before{content:\\\"\\\"}.mi-zoom-in-map:before{content:\\\"\\\"}.mi-zoom-out:before{content:\\\"\\\"}.mi-zoom-out-map:before{content:\\\"\\\"}.results-container{margin-top:var(--size-3);flex-direction:column;display:flex}.results-container.empty,.results-container.no-results{gap:var(--size-3);min-height:var(--size-12);margin-top:var(--size-10);color:var(--gray-8);justify-content:center;align-items:center}.results-container.empty:before,.results-container.no-results:before{font-size:var(--size-9)}.results-container.empty:after,.results-container.no-results:after{font-family:var(--font-sans)}.results-container.empty:before{content:\\\"\\\"}.results-container.empty:after{content:\\\"Enter something to search\\\"}.results-container.no-results:before{content:\\\"\\\"}.results-container.no-results:after{content:\\\"No results\\\"}intersection-observer::part(sentinel){height:var(--size-9);margin-top:var(--size-4);background-color:var(--color-9);border:1px solid var(--color-10);border-radius:var(--radius-3);animation:var(--animation-blink);width:100%}\";\n\n\n\n\nvar $04672841e8d67895$exports = {};\n$04672841e8d67895$exports = \".search-bar-container{margin:0 0 var(--size-1)0;padding:0 var(--size-2);background-color:var(--color-8);border-radius:var(--radius-2);align-items:center;display:flex}.search-bar-container input{width:90%}.search-bar-container button{background-color:var(--color-8);border:0;align-items:center;display:flex}\";\n\n\n\nvar $4OnIV = parcelRequire(\"4OnIV\");\nconst $10959f7350a8fa7f$var$DEFAULT_BU = \"rsi\";\nclass $10959f7350a8fa7f$export$623254183196058d extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static properties = {\n        bu: {\n            type: String\n        },\n        query: {\n            type: String\n        }\n    };\n    static styles = [\n        (0, $356a447a83d57522$export$bca14c5b3b88a9c9),\n        (0, $356a447a83d57522$export$7f9953c70dacfd7f),\n        (0, $3233927aa82734f9$export$8d80f9cac07cdb3)((0, (/*@__PURE__*/$parcel$interopDefault($04672841e8d67895$exports))))\n    ];\n    constructor(){\n        super();\n        this.bu = $10959f7350a8fa7f$var$DEFAULT_BU;\n        this.query = \"\";\n    }\n    #handleSearchBarKeyUp() {\n        this.query = this.renderRoot.querySelector(\"input\").value;\n    }\n    #handleSelectChange(e) {\n        this.bu = e.target.value;\n    }\n    updated(_changedProperties) {\n        super.updated(_changedProperties);\n        if ([\n            \"bu\",\n            \"query\"\n        ].some((property)=>_changedProperties.has(property))) {\n            const query = this.query ?? \"\";\n            const bu = this.bu ?? $10959f7350a8fa7f$var$DEFAULT_BU;\n            /**\n       * Custom event dispatched by SearchBarComponent when the value of the bar changes.\n       *\n       * @event SearchBarComponent#change\n       * @type {CustomEvent}\n       * @property {Object} detail - The event detail object.\n       * @property {string} detail.query - The query on the search bar.a\n       * @property {string} detail.bu - The selected bu.\n       */ this.dispatchEvent(new CustomEvent(\"change\", {\n                detail: {\n                    query: query,\n                    bu: bu\n                }\n            }));\n        }\n    }\n    #clearSearchBar() {\n        this.query = \"\";\n        this.renderRoot.querySelector(\"input\").value = \"\";\n    }\n    render() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <div class=\"search-bar-container fade-in\"\n           @animationend=\"${(e)=>e.target.classList.remove(\"fade-in\")}\">\n        <select aria-label=\"Select a business unit\"\n                .value=\"${this.bu ?? $10959f7350a8fa7f$var$DEFAULT_BU}\"\n                @change=\"${this.#handleSelectChange}\">\n          <option value=\"rsi\" selected>RSI</option>\n          <option value=\"rtr\">RTR</option>\n          <option value=\"rts\">RTS</option>\n          <option value=\"srf\">SRF</option>\n          <option value=\"swi\">SWI</option>\n        </select>\n        <input type=\"text\"\n               placeholder=\"Search for content...\"\n               @keyup=\"${(0, $4OnIV.default).fn.debounce(this.#handleSearchBarKeyUp, 500)}\"\n               .value=\"${this.query ?? \"\"}\">\n        <button title=\"Clear search\"\n                @click=\"${this.#clearSearchBar}\">\n          <i class=\"material-icons-outlined\">close</i>\n        </button>\n      </div>\n    `;\n    }\n}\ncustomElements.define(\"search-bar\", $10959f7350a8fa7f$export$623254183196058d);\n\n\nconst $ea2ff1e94ba678e0$var$IL_DEFAULT_HOST = \"il.srgssr.ch\";\nconst $ea2ff1e94ba678e0$var$DEFAULT_QUERY_PARAMS = {\n    \"vector\": \"srgplay\"\n};\nconst $ea2ff1e94ba678e0$var$DEFAULT_SEARCH_PARAMS = {\n    \"includeAggregations\": false,\n    \"includeSuggestions\": false,\n    \"sortBy\": \"default\",\n    \"sortDir\": \"desc\",\n    \"pageSize\": 50,\n    ...$ea2ff1e94ba678e0$var$DEFAULT_QUERY_PARAMS\n};\nconst $ea2ff1e94ba678e0$var$DEFAULT_SHOWLIST_PARAMS = {\n    \"onlyActiveShows\": true,\n    ...$ea2ff1e94ba678e0$var$DEFAULT_QUERY_PARAMS\n};\nconst $ea2ff1e94ba678e0$var$toMedia = ({ title: title, urn: urn, mediaType: mediaType, date: date, duration: duration })=>({\n        title: title,\n        urn: urn,\n        mediaType: mediaType,\n        date: date,\n        duration: duration\n    });\n/**\n * Class representing a provider for the integration layer.\n *\n * @class\n */ class $ea2ff1e94ba678e0$var$ILProvider {\n    /**\n   * Creates an instance of ILProvider.\n   *\n   * @param {string} [hostName='il.srgssr.ch'] - The hostname for the integration layer (without the protocol).\n   */ constructor(hostName = $ea2ff1e94ba678e0$var$IL_DEFAULT_HOST){\n        this.baseUrl = `${hostName}/integrationlayer/2.0`;\n    }\n    /**\n   * Performs a search for media content based on the provided business unit and query.\n   *\n   * @param {string} bu - The business unit for which the search is performed (rsi, rtr, rts, srf or swi).\n   * @param {string} query - The search query.\n   * @param {AbortSignal} [signal=undefined] - (Optional) An abort signal,\n   * allows to abort the query through an abort controller.\n   *\n   * @returns {Promise<{ results: Array<{ title: string, urn: string }>, next: function }>} - A promise\n   * that resolves to an object containing :\n   * - `results`: An array of objects containing the title, URN, media type, date, and duration of the search results.\n   * - `next`: A function that, when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */ async search(bu, query, signal) {\n        const data = await this.#fetch(`/${bu.toLowerCase()}/searchResultMediaList`, {\n            ...$ea2ff1e94ba678e0$var$DEFAULT_SEARCH_PARAMS,\n            \"q\": query\n        }, signal);\n        const toResults = (data)=>data.searchResultMediaList.map($ea2ff1e94ba678e0$var$toMedia);\n        return {\n            results: toResults(data),\n            next: data.next ? this.#nextProvider(data.next, toResults) : undefined\n        };\n    }\n    /**\n   * Retrieves a list of topics for the specified business unit and transmission type.\n   *\n   * @param {string} bu - The business unit for which to retrieve topics (rsi, rtr, rts, srf, or swi).\n   * @param {string} [transmission='tv'] - The transmission type ('tv' or 'radio').\n   *\n   * @returns {Promise<Array<{ title: string, urn: string }>>} - A promise that resolves to an array\n   * of objects containing the title and URN of the topics.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */ async topics(bu, transmission = \"tv\") {\n        const data = await this.#fetch(`/${bu.toLowerCase()}/topicList/${transmission}`);\n        return data.topicList.map(({ title: title, urn: urn })=>({\n                title: title,\n                urn: urn\n            }));\n    }\n    /**\n   * Retrieves the latest media content for a specific topic.\n   *\n   * @param {string} topicUrn - The URN (Unique Resource Name) of the topic.\n   * @param {number} [pageSize=30] - The maximum number of episodes to retrieve.\n   *\n   * @returns {Promise<{ results: Array<{ title: string, urn: string }>, next: function }>} - A promise\n   * that resolves to an object containing :\n   * - `results`: An array of objects containing the title, URN, media type, date, and duration of the medias.\n   * - `next`: A function that, when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */ async latestByTopic(topicUrn, pageSize = 30) {\n        const data = await this.#fetch(`/mediaList/latest/byTopicUrn/${topicUrn}`, {\n            pageSize: pageSize\n        });\n        const toResults = (data)=>data.mediaList.map($ea2ff1e94ba678e0$var$toMedia);\n        return {\n            results: toResults(data),\n            next: data.next ? this.#nextProvider(data.next, toResults) : undefined\n        };\n    }\n    /**\n   * Retrieves a list of shows for the specified business unit, transmission type, and ordering.\n   *\n   * @param {string} bu - The business unit for which to retrieve shows (rsi, rtr, rts, srf, or swi).\n   * @param {string} [pageSize='unlimited'] - The maximum number of shows to retrieve. Use 'unlimited' for all shows.\n   * @param {string} [transmission='tv'] - The transmission type ('tv' or 'radio').\n   *\n   * @returns {Promise<Array<{ title: string, urn: string }>>} - A promise that resolves to an array\n   * of objects containing the title and URN of the shows.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */ async shows(bu, pageSize = \"unlimited\", transmission = \"tv\") {\n        const data = await this.#fetch(`/${bu.toLowerCase()}/showList/${transmission}/alphabetical`, {\n            ...$ea2ff1e94ba678e0$var$DEFAULT_SHOWLIST_PARAMS,\n            \"pageSize\": pageSize\n        });\n        return data.showList.map(({ title: title, urn: urn })=>({\n                title: title,\n                urn: urn\n            }));\n    }\n    /**\n   * Retrieves the latest media content for a specific show.\n   *\n   * @param {string} showUrn - The URN (Unique Resource Name) of the show.\n   * @param {number} [pageSize=30] - The maximum number of episodes to retrieve.\n   *\n   * @returns {Promise<{ results: Array<{ title: string, urn: string }>, next: function }>} - A promise\n   * that resolves to an object containing :\n   * - `results`: An array of objects containing the title, URN, media type, date, and duration of the medias.\n   * - `next`: A function that, when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */ async latestByShow(showUrn, pageSize = 30) {\n        const data = await this.#fetch(`/episodeComposition/latestByShow/byUrn/${showUrn}`, {\n            ...$ea2ff1e94ba678e0$var$DEFAULT_QUERY_PARAMS,\n            \"pageSize\": pageSize\n        });\n        const toResults = (data)=>data.episodeList.map(({ mediaList: mediaList })=>mediaList[0]).map($ea2ff1e94ba678e0$var$toMedia);\n        return {\n            results: toResults(data),\n            next: data.next ? this.#nextProvider(data.next, toResults) : undefined\n        };\n    }\n    /**\n   * Retrieves editorial media content for the specified business unit.\n   *\n   * @param {string} bu - The business unit for which to retrieve editorial media (rsi, rtr, rts, srf, or swi).\n   * @param {number} [pageSize=30] - The maximum number of editorial media items to retrieve.\n   *\n   * @returns {Promise<{ results: Array<{ title: string, urn: string }>, next: function }>} - A promise\n   * that resolves to an object containing :\n   * - `results`: An array of objects containing the title, URN, media type, date, and duration of the medias.\n   * - `next`: A function that, when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */ async editorial(bu, pageSize = 30) {\n        const data = await this.#fetch(`/${bu.toLowerCase()}/mediaList/video/editorial`, {\n            ...$ea2ff1e94ba678e0$var$DEFAULT_QUERY_PARAMS,\n            \"pageSize\": pageSize\n        });\n        const toResults = (data)=>data.mediaList.map($ea2ff1e94ba678e0$var$toMedia);\n        return {\n            results: toResults(data),\n            next: data.next ? this.#nextProvider(data.next, toResults) : undefined\n        };\n    }\n    /**\n   * Retrieves livestream media content for the specified business unit and media type.\n   *\n   * @param {string} bu - The business unit for which to retrieve livestreams (rsi, rtr, rts, srf, or swi).\n   * @param {string} [mediaType='video'] - The media type ('video' or 'audio').\n   *\n   * @returns {Promise<Array<{ title: string, urn: string }>>} - A promise that resolves to an array\n   * of objects containing the title and URN of the livestream media content.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */ async livestreams(bu, mediaType = \"video\") {\n        const data = await this.#fetch(`/${bu.toLowerCase()}/mediaList/${mediaType}/livestreams`);\n        return data.mediaList.map($ea2ff1e94ba678e0$var$toMedia);\n    }\n    /**\n   * Retrieves scheduled livestream media content for the specified business unit.\n   *\n   * @param {string} bu - The business unit for which to retrieve scheduled livestreams (rsi, rtr, rts, srf, or swi).\n   * @param {number} [pageSize=10] - The maximum number of scheduled livestreams to retrieve.\n   *\n   * @returns {Promise<{ results: Array<{ title: string, urn: string }>, next: function }>} - A promise\n   * that resolves to an object containing :\n   * - `results`: An array of objects containing the title, URN, media type, date, and duration of the medias.\n   * - `next`: A function that, when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */ async scheduledLivestream(bu, pageSize = 10) {\n        const data = await this.#fetch(`/${bu.toLowerCase()}/mediaList/video/scheduledLivestreams`, {\n            ...$ea2ff1e94ba678e0$var$DEFAULT_QUERY_PARAMS,\n            \"pageSize\": pageSize\n        });\n        const toResults = (data)=>data.mediaList.map($ea2ff1e94ba678e0$var$toMedia);\n        return {\n            results: toResults(data),\n            next: data.next ? this.#nextProvider(data.next, toResults) : undefined\n        };\n    }\n    /**\n   * Retrieves media content for the livecenter for the specified business unit.\n   *\n   * @param {string} bu - The business unit for which to retrieve livecenter media (rsi, rtr, rts, srf, or swi).\n   * @param {number} [pageSize=10] - The maximum number of livecenter media items to retrieve.\n   *\n   * @returns {Promise<{ results: Array<{ title: string, urn: string }>, next: function }>} - A promise\n   * that resolves to an object containing :\n   * - `results`: An array of objects containing the title, URN, media type, date, and duration of the medias.\n   * - `next`: A function that, when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */ async livecenter(bu, pageSize = 10) {\n        const data = await this.#fetch(`/${bu.toLowerCase()}/mediaList/video/scheduledLivestreams/livecenter`, {\n            ...$ea2ff1e94ba678e0$var$DEFAULT_QUERY_PARAMS,\n            \"pageSize\": pageSize\n        });\n        const toResults = (data)=>data.mediaList.map($ea2ff1e94ba678e0$var$toMedia);\n        return {\n            results: toResults(data),\n            next: data.next ? this.#nextProvider(data.next, toResults) : undefined\n        };\n    }\n    /**\n   * Retrieves a list of channels for the specified business unit and transmission type.\n   *\n   * @param {string} bu - The business unit for which to retrieve channels (rsi, rtr, rts, srf, or swi).\n   * @param {string} [transmission='radio'] - The transmission type ('tv' or 'radio').\n   *\n   * @returns {Promise<Array<{ title: string, id: string }>>} - A promise that resolves to an array\n   * of objects containing the title and ID of the channels.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */ async channels(bu, transmission = \"radio\") {\n        const data = await this.#fetch(`/${bu.toLowerCase()}/channelList/${transmission}`);\n        return data.channelList.map(({ title: title, id: id })=>({\n                title: title,\n                id: id\n            }));\n    }\n    /**\n   * Retrieves radio shows for the specified business unit and channel.\n   *\n   * @param {string} bu - The business unit for which to retrieve radio shows (rsi, rtr, rts, srf, or swi).\n   * @param {string} channelId - The ID of the channel.\n   * @param {string} [pageSize='unlimited'] - The maximum number of radio shows to retrieve. Use 'unlimited' for all shows.\n   *\n   * @returns {Promise<Array<{ title: string, urn: string }>>} - A promise that resolves to an array\n   * of objects containing the title and URN of the radio shows.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */ async radioShowByChannel(bu, channelId, pageSize = \"unlimited\") {\n        const data = await this.#fetch(`/${bu.toLowerCase()}/showList/radio/alphabeticalByChannel/${channelId}`, {\n            ...$ea2ff1e94ba678e0$var$DEFAULT_QUERY_PARAMS,\n            \"pageSize\": pageSize\n        });\n        return data.showList.map(({ title: title, urn: urn })=>({\n                title: title,\n                urn: urn\n            }));\n    }\n    /**\n   * Asynchronously fetches data from the IL for the specified path and parameters.\n   *\n   * @private\n   * @param {string} path - The path to fetch data from.\n   * @param {Object} [params=DEFAULT_QUERY_PARAMS] - (Optional) parameters for the request.\n   * @param {AbortSignal} [signal=undefined] - (Optional) AbortSignal to abort the request.\n   *\n   * @returns {Promise<*>} A Promise that resolves to the JSON response data.\n   *\n   * @throws {Response} If the HTTP response is not ok (status code other than 2xx).\n   * @throws {Error} If the fetch operation fails for any other reason.\n   */ async #fetch(path, params = $ea2ff1e94ba678e0$var$DEFAULT_QUERY_PARAMS, signal) {\n        const queryParams = new URLSearchParams(params).toString();\n        const url = `https://${this.baseUrl}/${path.replace(/^\\/+/, \"\")}?${queryParams}`;\n        return fetch(url, {\n            signal: signal\n        }).then((response)=>{\n            if (!response.ok) return Promise.reject(response);\n            return response.json();\n        }).catch((reason)=>{\n            return Promise.reject(reason);\n        });\n    }\n    /**\n   * Generates a function that, when called, retrieves the next set of data and\n   * returns a new object with updated results and the next function.\n   *\n   * @private\n   * @template T - The type of data returned by the resultMapper function.\n   *\n   * @param {string} nextUrl - The URL for fetching the next set of data.\n   * @param {(data: any) => T} resultMapper - A function to map the raw data to the desired format.\n   *\n   * @returns {(signal?: AbortSignal) => Promise<{ results: T, next: function }>} - A function that,\n   * when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   */ #nextProvider(nextUrl, resultMapper) {\n        return async (signal)=>{\n            const nextData = await fetch(nextUrl, {\n                signal: signal\n            }).then((response)=>{\n                if (!response.ok) return Promise.reject(response);\n                return response.json();\n            }).catch((reason)=>{\n                return Promise.reject(reason);\n            });\n            const nextResults = resultMapper(nextData);\n            return {\n                results: nextResults,\n                next: this.#nextProvider(nextData.next, resultMapper)\n            };\n        };\n    }\n}\nvar $ea2ff1e94ba678e0$export$2e2bcd8739ae039 = new $ea2ff1e94ba678e0$var$ILProvider();\n\n\n\nvar $4cca4a9f83c81a97$exports = {};\n$4cca4a9f83c81a97$exports = \".spinner{width:var(--size-7);height:var(--size-7);border:3px solid var(--color-2);border-radius:var(--radius-round);animation:var(--animation-spin);border-bottom-color:#0000;display:block}.spinner-container{margin:var(--size-10);place-content:center;display:grid}.spinner-container.hidden{display:none}\";\n\n\n\nclass $f85b88e478e8d5fc$export$b89c56aa2355c84 extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static properties = {\n        loading: {\n            type: Boolean\n        }\n    };\n    static styles = [\n        (0, $356a447a83d57522$export$7f9953c70dacfd7f),\n        (0, $3233927aa82734f9$export$8d80f9cac07cdb3)((0, (/*@__PURE__*/$parcel$interopDefault($4cca4a9f83c81a97$exports))))\n    ];\n    constructor(){\n        super();\n        this.loading = false;\n    }\n    render() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <div class=\"spinner-container ${!this.loading ? \"hidden\" : \"\"}\">\n        <div class=\"spinner\"></div>\n      </div>\n    `;\n    }\n}\ncustomElements.define(\"loading-spinner\", $f85b88e478e8d5fc$export$b89c56aa2355c84);\n\n\n\n\nconst $29c14111c42ebe68$var$DEFAULT_INT_OPTIONS = {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0.1\n};\n/**\n * Attach an Intersection Observer to a target element and execute a callback when it becomes visible.\n *\n * @param {Element} target - The target element to observe.\n * @param {Function} callback - The callback function to execute when the target is intersecting.\n * @param {Object} options - (Optional) Options to configure the Intersection Observer.\n * @param {Element} [options.root=null] - The element that is used as the viewport for checking visibility.\n * @param {string} [options.rootMargin='0px'] - Margin around the root. Can have values similar to CSS margin property.\n * @param {number} [options.threshold=0.1] - The threshold at which the callback will be triggered.\n */ const $29c14111c42ebe68$var$onIntersecting = (target, callback, options = $29c14111c42ebe68$var$DEFAULT_INT_OPTIONS)=>{\n    new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            if (entry.isIntersecting) callback();\n        });\n    }, options).observe(target);\n};\nclass $29c14111c42ebe68$export$6f85f743c3293acc extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static styles = [\n        (0, $356a447a83d57522$export$7f9953c70dacfd7f)\n    ];\n    firstUpdated(_changedProperties) {\n        super.firstUpdated(_changedProperties);\n        $29c14111c42ebe68$var$onIntersecting(this.renderRoot.querySelector(\"div\"), ()=>{\n            /**\n         * Custom event dispatched by IntersectionObserverComponent when the observed element intersects\n         * with the view.\n         *\n         * @event IntersectionObserverComponent#intersecting\n         * @type {CustomEvent}\n         * @property {Object} detail - The event detail object.\n         * @property {string} detail.src - The URL or URN of the media content to be loaded.\n         * @property {string | undefined} detail.type - The type of media. Undefined if the type cannot be determined.\n         * @property {Object | undefined} detail.keySystems - DRM key systems for the loaded media.\n         */ this.dispatchEvent(new CustomEvent(\"intersecting\"));\n        });\n    }\n    render() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <div part=\"sentinel\"></div>\n    `;\n    }\n}\ncustomElements.define(\"intersection-observer\", $29c14111c42ebe68$export$6f85f743c3293acc);\n\n\n\n\nclass $532fd685b226af53$export$d7bc076340ee0582 extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static styles = [\n        (0, $356a447a83d57522$export$bca14c5b3b88a9c9),\n        (0, $356a447a83d57522$export$7f9953c70dacfd7f),\n        (0, $3233927aa82734f9$export$dbf350e5966cf602)`\n      .scroll-to-top-button {\n        position: fixed;\n        right: 20px;\n        bottom: 20px;\n        z-index: 1;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: var(--size-7);\n        height: var(--size-7);\n        padding: 0;\n        border: none;\n        border-radius: var(--radius-round);\n      }\n\n      .scroll-to-top-button i {\n        font-size: var(--size-8);\n      }\n  `\n    ];\n    render() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <button class=\"scroll-to-top-button\" title=\"Scroll to top\" \n              @click=\"${()=>window.scrollTo({\n                top: 0,\n                behavior: \"smooth\"\n            })}\">\n        <i class=\"material-icons-outlined\">arrow_circle_up</i>\n      </button>\n    `;\n    }\n}\ncustomElements.define(\"scroll-to-top-button\", $532fd685b226af53$export$d7bc076340ee0582);\n\n\n\n\n\nvar $4OnIV = parcelRequire(\"4OnIV\");\n\n\nclass $574dff8cba2aa561$export$a54ec244c8863715 extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static properties = {\n        loading: {\n            state: true,\n            type: Boolean\n        },\n        results: {\n            state: true,\n            type: Array\n        },\n        nextPage: {\n            state: true,\n            type: Function\n        }\n    };\n    static styles = [\n        (0, $356a447a83d57522$export$bca14c5b3b88a9c9),\n        (0, $356a447a83d57522$export$7f9953c70dacfd7f),\n        (0, $3233927aa82734f9$export$8d80f9cac07cdb3)((0, (/*@__PURE__*/$parcel$interopDefault($5ed491bf9cfc16f6$exports))))\n    ];\n    /**\n   * The abort controller for handling search cancellation.\n   *\n   * @private\n   * @type {AbortController}\n   */ #abortController = new AbortController();\n    /**\n   * The reference to the query params changed event handler.\n   *\n   * @private\n   * @type {Function}\n   */ #onQueryParamsChanged;\n    constructor(){\n        super();\n        this.loading = false;\n        this.results = null;\n        this.nextPage = null;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.#onQueryParamsChanged = ()=>{\n            const searchBar = this.renderRoot.querySelector(\"search-bar\");\n            searchBar.query = (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).queryParams.query ?? \"\";\n            searchBar.bu = (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).queryParams.bu ?? \"rsi\";\n        };\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).addEventListener(\"queryparams\", this.#onQueryParamsChanged);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.abortSearch();\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).removeEventListener(\"queryparams\", this.#onQueryParamsChanged);\n    }\n    async firstUpdated(_changedProperties) {\n        super.firstUpdated(_changedProperties);\n        const searchBar = this.renderRoot.querySelector(\"search-bar\");\n        this.#onQueryParamsChanged();\n        await this.#search(searchBar.bu, searchBar.query);\n    }\n    async #onSearchBarChanged(bu, query) {\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).updateState({\n            bu: bu,\n            ...query ? {\n                query: query\n            } : {}\n        });\n        await this.#search(bu, query);\n    }\n    /**\n   * Performs a search based on the specified business unit and query. Performing\n   * a new search will abort the previous search if it's ongoing and display a\n   * loading spinner for the asynchronous operation.\n   *\n   * @param {string} bu - The selected business unit.\n   * @param {string} query - The search query.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if\n   * the fetch request for the search results fails.\n   */ async #search(bu, query) {\n        const signal = this.abortSearch();\n        if (!query) {\n            [this.results, this.nextPage] = [\n                null,\n                null\n            ];\n            return;\n        }\n        this.loading = true;\n        try {\n            const data = await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).search(bu, query, signal);\n            [this.results, this.nextPage] = [\n                data.results,\n                data.next\n            ];\n        } finally{\n            this.loading = false;\n        }\n    }\n    /**\n   * Advances to the next page of search results and updates the UI accordingly.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if\n   * the fetch request for the next page fails.\n   */ async #fetchNextPage() {\n        const signal = this.abortSearch();\n        const data = await this.nextPage(signal);\n        this.nextPage = data.next;\n        this.results = [\n            ...this.results,\n            ...data.results\n        ];\n    }\n    /**\n   * Aborts the previous search by cancelling the associated abort signal and\n   * creates a new abort controller for the next search.\n   *\n   * @returns {AbortSignal} - The abort signal associated with the new search.\n   */ abortSearch() {\n        this.#abortController?.abort(\"New search launched\");\n        this.#abortController = new AbortController();\n        return this.#abortController.signal;\n    }\n    #toQueryParams(r) {\n        return new URLSearchParams({\n            ...(0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).queryParams,\n            src: r.urn,\n            type: \"srgssr/urn\"\n        }).toString();\n    }\n    #renderButton(r) {\n        const date = new Intl.DateTimeFormat(\"fr-CH\").format(new Date(r.date));\n        const duration = (0, $4OnIV.default).formatTime(r.duration / 1000);\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <content-link title=\"${r.title}\"\n                   href=\"search?${this.#toQueryParams(r)}\">\n          <div slot=\"description\">\n              <i class=\"material-icons-outlined\">${r.mediaType === \"VIDEO\" ? \"movie\" : \"audiotrack\"}</i>\n              <span>&nbsp;| ${date} | ${duration}</span>\n          </div>\n      </content-link>\n    `;\n    }\n    #renderResults() {\n        const resultsClassMap = {\n            \"empty\": this.results == null,\n            \"no-results\": this.results && this.results.length === 0,\n            \"material-icons\": !this.results || this.results.length === 0\n        };\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <section class=\"results-container fade-in ${(0, $0e5c059fc79abe53$export$56cc687933817664)(resultsClassMap)}\"\n        @animationend=\"${(e)=>e.target.classList.remove(\"fade-in\")}\">\n        ${(0, $e0ecebd5da923169$export$871de8747c9eaa88)(this.results ?? [], this.#renderButton.bind(this))}\n        ${(0, $5478b4ac633a513e$export$a55877ca9db47377)(this.nextPage, ()=>(0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n          <intersection-observer\n            @intersecting=\"${this.#fetchNextPage.bind(this)}\">\n          </intersection-observer>\n        `)}\n      </section>\n    `;\n    }\n    #renderSpinner() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <loading-spinner loading class=\"slide-up-fade-in\"\n                       @animationend=\"${(e)=>e.target.classList.remove(\"slide-up-fade-in\")}\">\n      </loading-spinner>\n    `;\n    }\n    #renderScrollToTopBtn() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`<scroll-to-top-button></scroll-to-top-button>`;\n    }\n    render() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <search-bar\n        @change=\"${(e)=>this.#onSearchBarChanged(e.detail.bu, e.detail.query)}\">\n      </search-bar>\n\n      <!-- Search results -->\n      ${(0, $5478b4ac633a513e$export$a55877ca9db47377)(this.loading, this.#renderSpinner.bind(this), this.#renderResults.bind(this))}\n      ${(0, $5478b4ac633a513e$export$a55877ca9db47377)(this.results?.length > 0, this.#renderScrollToTopBtn.bind(this))}\n    `;\n    }\n}\ncustomElements.define(\"search-page\", $574dff8cba2aa561$export$a54ec244c8863715);\n(0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).addRoute(\"search\", \"search-page\");\n\n\n\n\n\n\n\nvar $8a6ac94ac07fb9c7$exports = {};\n$8a6ac94ac07fb9c7$exports = \":host{cursor:pointer;display:inline-block}[part=switch]{width:var(--size-9);height:var(--size-7);background-color:var(--gray-6);border-radius:var(--radius-4);align-items:center;transition:all .4s;display:flex}[part=slider]{width:var(--size-5);height:var(--size-5);margin-left:var(--size-2);background-color:var(--gray-1);border-radius:var(--radius-round);content:\\\"\\\";transition:all .4s;display:block}:host([checked]) [part=switch]{background-color:var(--green-8)}:host([checked]) [part=slider]{transform:translateX(var(--size-5))}:host([disabled]) [part=switch]{cursor:not-allowed;opacity:.5}\";\n\n\nclass $72dc08c47d24c983$export$f803919487061f17 extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static formAssociated = true;\n    static properties = {\n        checked: {\n            type: Boolean,\n            reflect: true\n        },\n        disabled: {\n            type: Boolean\n        }\n    };\n    constructor(){\n        super();\n        this.checked = false;\n        this.disabled = false;\n    }\n    static styles = [\n        (0, $356a447a83d57522$export$bca14c5b3b88a9c9),\n        (0, $3233927aa82734f9$export$8d80f9cac07cdb3)((0, (/*@__PURE__*/$parcel$interopDefault($8a6ac94ac07fb9c7$exports))))\n    ];\n    #onKeyDown = (e)=>{\n        if (e.key === \" \") {\n            e.preventDefault();\n            this.toggle();\n        }\n    };\n    #onClick = ()=>{\n        this.toggle();\n    };\n    connectedCallback() {\n        super.connectedCallback();\n        if (!this.hasAttribute(\"role\")) this.setAttribute(\"role\", \"switch\");\n        if (!this.hasAttribute(\"tabindex\")) this.setAttribute(\"tabindex\", \"0\");\n        this.addEventListener(\"click\", this.#onClick);\n        this.addEventListener(\"keydown\", this.#onKeyDown);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.removeEventListener(\"click\", this.#onClick);\n        this.removeEventListener(\"keydown\", this.#onKeyDown);\n    }\n    toggle(force) {\n        if (!this.disabled) this.checked = force ?? !this.checked;\n    }\n    updated(_changedProperties) {\n        super.updated(_changedProperties);\n        if (_changedProperties.has(\"checked\")) {\n            this.setAttribute(\"aria-checked\", this.checked.toString());\n            /**\n       * Custom event dispatched when the state of the toggle switch changes.\n       *\n       * @event ToggleSwitchComponent#change\n       * @type {CustomEvent}\n       * @property {Object} detail - The event detail object.\n       * @property {Boolean} detail.checked - The new state of the toggle switch.\n       */ this.dispatchEvent(new CustomEvent(\"change\", {\n                detail: {\n                    checked: this.checked\n                }\n            }));\n        }\n    }\n    render() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n        <div part=\"switch\">\n            <div part=\"slider\"></div>\n        </div>\n    `;\n    }\n}\ncustomElements.define(\"toggle-switch\", $72dc08c47d24c983$export$f803919487061f17);\n\n\n\nvar $f4d31c88ef3af4ba$exports = {};\n$f4d31c88ef3af4ba$exports = \"[part=title]{padding:var(--size-3)0;margin:0}[part=toggle-container]{color:var(--color-0);font-weight:var(--font-weight-6);font-size:var(--size-3);text-align:justify;background-color:var(--color-9);border:1px solid var(--color-10);justify-content:space-between;align-items:center;margin:0;display:flex}[part=toggle-container]:first-of-type{border-radius:var(--radius-3)var(--radius-3)0 0}[part=toggle-container]:last-of-type{border-radius:0 0 var(--radius-3)var(--radius-3)}[part=label]{line-height:var(--size-8);cursor:pointer;padding-inline:var(--size-3);flex:1}[part=toggle-switch]{height:var(--size-8);padding-inline:var(--size-3);align-items:center;display:flex}\";\n\n\nclass $8da8438256938e39$export$8f6dcfe950367406 extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static properties = {\n        autoplay: {\n            type: Boolean,\n            state: true\n        },\n        muted: {\n            type: Boolean,\n            state: true\n        },\n        debug: {\n            type: Boolean,\n            state: true\n        }\n    };\n    static styles = [\n        (0, $356a447a83d57522$export$bca14c5b3b88a9c9),\n        (0, $356a447a83d57522$export$7f9953c70dacfd7f),\n        (0, $3233927aa82734f9$export$8d80f9cac07cdb3)((0, (/*@__PURE__*/$parcel$interopDefault($f4d31c88ef3af4ba$exports))))\n    ];\n    constructor(){\n        super();\n        const preferences = (0, $1d04fb3d6fcfa221$export$2e2bcd8739ae039).loadPreferences();\n        this.autoplay = preferences.autoplay ?? false;\n        this.muted = preferences.muted ?? true;\n        this.debug = preferences.debug ?? false;\n    }\n    updated(_changedProperties) {\n        super.updated(_changedProperties);\n        const preferences = (0, $1d04fb3d6fcfa221$export$2e2bcd8739ae039).loadPreferences();\n        [\n            ..._changedProperties.keys()\n        ].filter((property)=>[\n                \"autoplay\",\n                \"muted\",\n                \"debug\"\n            ].includes(property)).forEach((property)=>preferences[property] = this[property]);\n        (0, $1d04fb3d6fcfa221$export$2e2bcd8739ae039).savePreferences(preferences);\n        if (_changedProperties.has(\"debug\")) (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).replaceState(this.debug ? {\n            debug: \"true\"\n        } : {});\n    }\n    #renderToggle(property, label) {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <div part=\"toggle-container\">\n        <label for=\"${property}-switch\" part=\"label\">${label}</label>\n        <toggle-switch id=\"${property}-switch\"\n                       part=\"toggle-switch\"\n                       exportparts=\"slider, switch\"\n                       ?checked=\"${this[property]}\"\n                       @change=\"${(e)=>this[property] = e.detail.checked}\">\n        </toggle-switch>\n      </div>\n    `;\n    }\n    render() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <section class=\"fade-in\" @animationend=\"${(e)=>e.target.classList.remove(\"fade-in\")}\">\n        <h2 part=\"title\">Player Settings</h2>\n        ${this.#renderToggle(\"autoplay\", \"Autoplay\")}\n        ${this.#renderToggle(\"muted\", \"Player starts muted\")}\n        ${this.#renderToggle(\"debug\", \"Enable debug mode\")}\n      </section>\n    `;\n    }\n}\ncustomElements.define(\"settings-page\", $8da8438256938e39$export$8f6dcfe950367406);\n(0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).addRoute(\"settings\", \"settings-page\");\n\n\n\n\n\nvar $eefafb93ca452263$exports = {};\n$eefafb93ca452263$exports = \".tree-navigation-container{align-items:end;display:flex}.tree-navigation-container button{color:var(--color-6);background:0 0;border:none;padding:0}.tree-navigation-container button:hover{color:inherit}.tree-navigation-container i{font-size:var(--size-3)}intersection-observer::part(sentinel){height:var(--size-9);margin-top:var(--size-4);background-color:var(--color-9);border:1px solid var(--color-10);border-radius:var(--radius-3);animation:var(--animation-blink);width:100%}\";\n\n\n\n\n\n\n\n\n/**\n * Converts a given string to kebab case, spaces are replaced with hyphens\n * and all letters are converted to lowercase.\n *\n * @param {string} str - The input string to be converted to kebab case.\n * @returns {string} - The input string converted to kebab case.\n *\n * @example\n * const result = toKebabCase(\"Hello World\");\n * console.log(result); // Output: \"hello-world\"\n *\n * @example\n * const result = toKebabCase(\"CamelCase Example\");\n * console.log(result); // Output: \"camelcase-example\"\n */ const $1fbb3dd11a9ef521$export$73bda83cddbc7187 = (str)=>str.replace(/\\s+/g, \"-\").toLowerCase();\n\n\n/**\n * Manages the state of a lists page, allowing navigation and retrieval of section data.\n *\n * @class\n */ class $97cf939ffe4a74b2$var$ListsPageStateManager {\n    /**\n   * Creates an instance of ListsPageStateManager.\n   *\n   * @constructor\n   * @param {Array<Section>} root - The root level of the lists page.\n   */ constructor(root){\n        /**\n     * Stack to keep track of the traversal steps for navigation.\n     *\n     * @type {Array<{level: Array<Section>, sectionIndex: number, nodeIndex: number}>}\n     */ this.stack = [];\n        /**\n     * The current level of the content tree.\n     *\n     * @type {Array<Section>}\n     */ this.level = root;\n    }\n    /**\n   * Initializes the state manager with the provided section, business unit, and nodes.\n   *\n   * @async\n   * @param {string} section - The section to initialize.\n   * @param {string} bu - The business unit associated with the section.\n   * @param {string} nodes - A comma-separated string of nodes representing the initial state.\n   * @returns {Promise<void>} - A promise that resolves when initialization is complete.\n   *\n   * @example\n   * // Example Usage:\n   * await stateManager.initialize(\"radio-shows\", \"rts\", \"a9e7621504c6959e35c3ecbe7f6bed0446cdf8da,urn:rts:show:radio:9801398\");\n   */ async initialize(section, bu, nodes) {\n        if (!section || !bu) return;\n        const sectionIndex = this.#findSectionIndex(section);\n        const nodeIndex = this.#findNodeIndex(this.level[sectionIndex].nodes, bu);\n        await this.fetchNextState(sectionIndex, nodeIndex);\n        for (const nodeStr of nodes?.split(\",\") || []){\n            const nodeIndex = this.#findNodeIndex(this.level[0].nodes, nodeStr);\n            await this.fetchNextState(0, nodeIndex);\n        }\n    }\n    /**\n   * Fetches the next state based on the provided section index and node index.\n   *\n   * @param {number} sectionIndex - The index of the section.\n   * @param {number} nodeIndex - The index of the node.\n   * @returns {Promise<void>} - A promise that resolves when the state is fetched.\n   */ async fetchNextState(sectionIndex, nodeIndex) {\n        const section = this.level[sectionIndex];\n        this.stack.push({\n            level: this.level,\n            sectionIndex: sectionIndex,\n            nodeIndex: nodeIndex\n        });\n        this.level = [\n            await section.resolve(section.nodes[nodeIndex])\n        ];\n    }\n    /**\n   * Fetches the previous state based on the provided stack index.\n   *\n   * @param {number} stackIndex - The index in the stack.\n   */ fetchPreviousState(stackIndex) {\n        this.level = this.stack[stackIndex].level;\n        this.stack.splice(stackIndex);\n    }\n    /**\n   * Checks if the specified section at the given index is a leaf section.\n   *\n   * @param {number} sectionIndex - The index of the section.\n   *\n   * @returns {boolean} - True if the section is a leaf section, false otherwise.\n   */ isLeafSection(sectionIndex) {\n        return this.level[sectionIndex]?.isLeaf();\n    }\n    /**\n   * Retrieves the node at the specified section and node indices.\n   *\n   * @param {number} sectionIndex - The index of the section.\n   * @param {number} nodeIndex - The index of the node.\n   *\n   * @returns {any} - The retrieved node.\n   */ retrieveNode(sectionIndex, nodeIndex) {\n        return this.level[sectionIndex]?.nodes[nodeIndex];\n    }\n    /**\n   * Gets the root level of the content tree.\n   *\n   * @returns {Array<Section>} - The root level of the content tree.\n   */ get root() {\n        return this.stack[0]?.level || this.level;\n    }\n    /**\n   * Return the current state of this manager as query params that are parsable\n   * by {@link #initialize}.\n   *\n   * @returns {{}|{bu: string, section: string, nodes?: string}} The current state as query params.\n   */ get params() {\n        return $97cf939ffe4a74b2$var$ListsPageStateManager.#params(this.stack);\n    }\n    static #params(stack) {\n        if (stack.length === 0) return {};\n        const root = stack[0];\n        const rootSection = root.level[root.sectionIndex];\n        const nodes = stack.slice(1).map((n)=>{\n            const node = n.level[n.sectionIndex].nodes[n.nodeIndex];\n            return node.id || node.urn;\n        });\n        let params = {\n            section: (0, $1fbb3dd11a9ef521$export$73bda83cddbc7187)(rootSection.title),\n            bu: rootSection.nodes[root.nodeIndex].toLowerCase()\n        };\n        if (nodes && nodes.length) params[\"nodes\"] = nodes.join(\",\");\n        return params;\n    }\n    paramsAt(sectionIndex, nodeIndex) {\n        return $97cf939ffe4a74b2$var$ListsPageStateManager.#params([\n            ...this.stack,\n            {\n                level: this.level,\n                sectionIndex: sectionIndex,\n                nodeIndex: nodeIndex\n            }\n        ]);\n    }\n    /**\n   * Finds the index of a section based on its title in kebab case.\n   *\n   * @private\n   * @param {string} sectionStr - The section title to find.\n   * @returns {number} - The index of the section.\n   *\n   * @example\n   * const index = stateManager.#findSectionIndex(\"Products\");\n   */ #findSectionIndex(sectionStr) {\n        const normalizedSectionStr = (0, $1fbb3dd11a9ef521$export$73bda83cddbc7187)(sectionStr).toLowerCase();\n        return this.level.map((s)=>(0, $1fbb3dd11a9ef521$export$73bda83cddbc7187)(s.title).toLowerCase()).findIndex((title)=>title === normalizedSectionStr);\n    }\n    /**\n   * Finds the index of a node based on its string representation.\n   *\n   * @private\n   * @param {Array<Node>} nodes - The array of nodes to search.\n   * @param {string} str - The string representation of the node to find.\n   *\n   * @returns {number} - The index of the node.\n   */ #findNodeIndex(nodes, str) {\n        const normalizedStr = str.toLowerCase();\n        return nodes.map((n)=>(n.urn || n.id || n.toString()).toLowerCase()).findIndex((n)=>n === normalizedStr);\n    }\n}\nvar $97cf939ffe4a74b2$export$2e2bcd8739ae039 = $97cf939ffe4a74b2$var$ListsPageStateManager;\n\n\n\n/**\n * A section within the content hierarchy.\n *\n * @property {string} title - The title of the section node.\n * @property {string[]} values - An array of values associated with the section.\n * @property {function} resolve - A function that, when defined, resolves the next level\n *                                of the hierarchy asynchronously.\n */ class $80ddaff76be80c29$var$Section {\n    /**\n   * Creates an instance of Section.\n   *\n   * @param {Object} options - The options for creating the section.\n   * @param {string} options.title - The title of the section.\n   * @param {string[]} options.nodes - An array of nodes associated with the section.\n   * @param {function} [options.resolve] - (Optional) A function that, when defined, resolves the next level\n   *                                       of the hierarchy asynchronously.\n   * @param {function} [options.next] - (Optional) A function that, when defined, resolves the next level\n   *                                    of the hierarchy asynchronously.\n   */ constructor({ title: title, nodes: nodes, resolve: resolve, next: next }){\n        this.title = title;\n        this.nodes = nodes;\n        this.resolve = resolve;\n        this.next = next;\n    }\n    /**\n   * Checks if the node is a leaf node (i.e., has no further levels to resolve).\n   *\n   * @returns {boolean} True if the node is a leaf node, false otherwise.\n   */ isLeaf() {\n        return !this.resolve;\n    }\n    /**\n   * Fetch more nodes from the next function if available.\n   * @param signal\n   * @returns {Promise<*>}\n   */ async fetchNext(signal) {\n        if (!this.next) return;\n        const data = await this.next(signal);\n        this.next = data.next;\n        this.nodes.push(...data.results);\n        return data.results;\n    }\n}\nconst $80ddaff76be80c29$var$toNodesAndNext = (data)=>({\n        nodes: data.results,\n        next: data.next\n    });\nconst $80ddaff76be80c29$export$b7bd107105965dda = [\n    new $80ddaff76be80c29$var$Section({\n        title: \"TV Topics\",\n        nodes: [\n            \"RSI\",\n            \"RTR\",\n            \"RTS\",\n            \"SRF\",\n            \"SWI\"\n        ],\n        resolve: async (bu)=>new $80ddaff76be80c29$var$Section({\n                title: `${bu} TV Topics`,\n                nodes: await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).topics(bu),\n                resolve: async (topic)=>new $80ddaff76be80c29$var$Section({\n                        title: topic.title,\n                        ...$80ddaff76be80c29$var$toNodesAndNext(await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).latestByTopic(topic.urn))\n                    })\n            })\n    }),\n    new $80ddaff76be80c29$var$Section({\n        title: \"TV Shows\",\n        nodes: [\n            \"RSI\",\n            \"RTR\",\n            \"RTS\",\n            \"SRF\",\n            \"SWI\"\n        ],\n        resolve: async (bu)=>new $80ddaff76be80c29$var$Section({\n                title: `${bu} TV Shows`,\n                nodes: await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).shows(bu),\n                resolve: async (show)=>new $80ddaff76be80c29$var$Section({\n                        title: show.title,\n                        ...$80ddaff76be80c29$var$toNodesAndNext(await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).latestByShow(show.urn))\n                    })\n            })\n    }),\n    new $80ddaff76be80c29$var$Section({\n        title: \"TV Latest Videos\",\n        nodes: [\n            \"RSI\",\n            \"RTR\",\n            \"RTS\",\n            \"SRF\"\n        ],\n        resolve: async (bu)=>new $80ddaff76be80c29$var$Section({\n                title: `${bu} TV Latest Videos`,\n                ...$80ddaff76be80c29$var$toNodesAndNext(await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).editorial(bu))\n            })\n    }),\n    new $80ddaff76be80c29$var$Section({\n        title: \"TV Livestreams\",\n        nodes: [\n            \"RSI\",\n            \"RTR\",\n            \"RTS\",\n            \"SRF\"\n        ],\n        resolve: async (bu)=>new $80ddaff76be80c29$var$Section({\n                title: `${bu} TV Livestreams`,\n                nodes: await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).livestreams(bu)\n            })\n    }),\n    new $80ddaff76be80c29$var$Section({\n        title: \"Live web\",\n        nodes: [\n            \"RSI\",\n            \"RTR\",\n            \"RTS\",\n            \"SRF\"\n        ],\n        resolve: async (bu)=>new $80ddaff76be80c29$var$Section({\n                title: `${bu} Live web`,\n                ...$80ddaff76be80c29$var$toNodesAndNext(await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).scheduledLivestream(bu))\n            })\n    }),\n    new $80ddaff76be80c29$var$Section({\n        title: \"Live center\",\n        nodes: [\n            \"RSI\",\n            \"RTR\",\n            \"RTS\",\n            \"SRF\"\n        ],\n        resolve: async (bu)=>new $80ddaff76be80c29$var$Section({\n                title: `${bu} Live center`,\n                nodes: await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).livecenter(bu)\n            })\n    }),\n    new $80ddaff76be80c29$var$Section({\n        title: \"Radio Shows\",\n        nodes: [\n            \"RSI\",\n            \"RTR\",\n            \"RTS\",\n            \"SRF\"\n        ],\n        resolve: async (bu)=>new $80ddaff76be80c29$var$Section({\n                title: `${bu} Radio Channels`,\n                nodes: await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).channels(bu),\n                resolve: async (channel)=>new $80ddaff76be80c29$var$Section({\n                        title: `${channel.title} Radio shows`,\n                        nodes: await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).radioShowByChannel(bu, channel.id),\n                        resolve: async (show)=>new $80ddaff76be80c29$var$Section({\n                                title: show.title,\n                                ...$80ddaff76be80c29$var$toNodesAndNext(await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).latestByShow(show.urn))\n                            })\n                    })\n            })\n    }),\n    new $80ddaff76be80c29$var$Section({\n        title: \"Radio Livestreams\",\n        nodes: [\n            \"RSI\",\n            \"RTR\",\n            \"RTS\",\n            \"SRF\"\n        ],\n        resolve: async (bu)=>new $80ddaff76be80c29$var$Section({\n                title: `${bu} Radio Livestreams`,\n                nodes: await (0, $ea2ff1e94ba678e0$export$2e2bcd8739ae039).livestreams(bu, \"audio\")\n            })\n    })\n];\n\n\n\nvar $4OnIV = parcelRequire(\"4OnIV\");\nclass $7adac226aaa535fd$export$4546797870416e9b extends (0, $fe586ba0757c37f7$export$3f2f9f5909897157) {\n    static properties = {\n        loading: {\n            state: true,\n            type: Boolean\n        },\n        stack: {\n            state: true,\n            type: Array\n        },\n        level: {\n            state: true,\n            type: Object\n        },\n        nextPage: {\n            state: true,\n            type: Function\n        }\n    };\n    static styles = [\n        (0, $356a447a83d57522$export$bca14c5b3b88a9c9),\n        (0, $356a447a83d57522$export$7f9953c70dacfd7f),\n        (0, $3233927aa82734f9$export$8d80f9cac07cdb3)((0, (/*@__PURE__*/$parcel$interopDefault($eefafb93ca452263$exports))))\n    ];\n    /**\n   * The abort controller for handling search cancellation.\n   *\n   * @private\n   * @type {AbortController}\n   */ #abortController = new AbortController();\n    /**\n   * Keeps track of the state of the list page : the current level in display, as\n   * well as the traversal stack.\n   *\n   * @private\n   * @type {ListsPageStateManager}\n   */ #stateManager;\n    /**\n   * The reference to the query params changed event handler.\n   *\n   * @private\n   * @type {Function}\n   */ #onQueryParamsChanged;\n    constructor(){\n        super();\n        this.loading = false;\n        this.#stateManager = new (0, $97cf939ffe4a74b2$export$2e2bcd8739ae039)((0, $80ddaff76be80c29$export$b7bd107105965dda));\n        this.#updateState();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.#onQueryParamsChanged = async (event)=>{\n            if (!event.detail.popstate) return;\n            this.abortFetch();\n            const manager = new (0, $97cf939ffe4a74b2$export$2e2bcd8739ae039)(this.#stateManager.root), { section: section, bu: bu, nodes: nodes } = event.detail.queryParams;\n            this.loading = true;\n            try {\n                await manager.initialize(section, bu, nodes);\n                this.#stateManager = manager;\n                this.#updateState();\n            } finally{\n                this.loading = false;\n            }\n        };\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).addEventListener(\"queryparams\", this.#onQueryParamsChanged);\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.abortFetch();\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).removeEventListener(\"queryparams\", this.#onQueryParamsChanged);\n    }\n    firstUpdated(_changedProperties) {\n        super.firstUpdated(_changedProperties);\n        this.#onQueryParamsChanged({\n            detail: {\n                popstate: true,\n                queryParams: (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).queryParams\n            }\n        });\n    }\n    #updateState() {\n        this.stack = [\n            ...this.#stateManager.stack\n        ];\n        this.level = [\n            ...this.#stateManager.level\n        ];\n    }\n    /**\n   * Navigates to the specified section and node in the content tree.\n   *\n   * @param {number} sectionIndex - The index of the section.\n   * @param {number} nodeIndex - The index of the node.\n   */ async navigateTo(sectionIndex, nodeIndex) {\n        if (this.#stateManager.isLeafSection(sectionIndex)) {\n            const node = this.#stateManager.retrieveNode(sectionIndex, nodeIndex);\n            (0, $54e2f009849dffbd$export$3c8d206a213df2ed)({\n                src: node.urn,\n                type: \"srgssr/urn\"\n            });\n        } else {\n            this.abortFetch();\n            this.loading = true;\n            try {\n                await this.#stateManager.fetchNextState(sectionIndex, nodeIndex);\n                this.#updateState();\n            } finally{\n                this.loading = false;\n            }\n        }\n    }\n    /**\n   * Aborts the previous fetch by cancelling the associated abort signal and\n   * creates a new abort controller for the next fetch.\n   *\n   * @returns {AbortSignal} - The abort signal associated with the new fetch.\n   */ abortFetch() {\n        this.#abortController?.abort(\"New search launched\");\n        this.#abortController = new AbortController();\n        return this.#abortController.signal;\n    }\n    #toMediaButtonParams(node) {\n        return new URLSearchParams({\n            ...(0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).queryParams,\n            src: node.urn,\n            type: \"srgssr/urn\"\n        }).toString();\n    }\n    #renderMediaButton(node) {\n        const date = new Intl.DateTimeFormat(\"fr-CH\").format(new Date(node.date));\n        const duration = (0, $4OnIV.default).formatTime(node.duration / 1000);\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <content-link title=\"${node.title}\" href=\"lists?${this.#toMediaButtonParams(node)}\">\n        <div slot=\"description\">\n          <i class=\"material-icons-outlined\">${node.mediaType === \"VIDEO\" ? \"movie\" : \"audiotrack\"}</i>\n          <span>&nbsp;| ${date} | ${duration}</span>\n        </div>\n      </content-link>\n    `;\n    }\n    #toLevelParams(sectionIdx, nodeIdx) {\n        const params = this.#stateManager.paramsAt(sectionIdx, nodeIdx);\n        return new URLSearchParams(params).toString();\n    }\n    #renderLevelButton(node, sectionIdx, nodeIdx) {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n      <content-link title=\"${typeof node === \"string\" ? node : node.title}\"\n                   href=\"lists?${this.#toLevelParams(sectionIdx, nodeIdx)}\"\n                   data-section-idx=\"${sectionIdx}\" data-node-idx=\"${nodeIdx}\">\n      </content-link>\n    `;\n    }\n    async #nextPage(section) {\n        const signal = this.abortFetch();\n        await section.fetchNext(signal);\n        this.#updateState();\n    }\n    #renderNodes(nodes, sectionIdx) {\n        const firstSection = this.level[0];\n        const hasIntesectionObserver = this.level.length === 1 && firstSection.next;\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n        ${(0, $e0ecebd5da923169$export$871de8747c9eaa88)(nodes, (node, idx)=>(0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n            ${(0, $5478b4ac633a513e$export$a55877ca9db47377)(node.mediaType, ()=>this.#renderMediaButton(node, idx), ()=>this.#renderLevelButton(node, sectionIdx, idx))}\n        `)}\n        ${(0, $5478b4ac633a513e$export$a55877ca9db47377)(hasIntesectionObserver, ()=>(0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n            <intersection-observer\n                    @intersecting=\"${()=>this.#nextPage(firstSection)}\">\n            </intersection-observer>\n        `)}\n    `;\n    }\n    async #onSectionsClicked(e) {\n        const button = e.target.closest(\"content-link\");\n        if (this.loading || !(\"nodeIdx\" in button.dataset)) return;\n        const sectionIndex = button.dataset.sectionIdx;\n        const nodeIndex = button.dataset.nodeIdx;\n        await this.navigateTo(sectionIndex, nodeIndex);\n    }\n    #renderResults() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n        <div class=\"fade-in\"\n             @animationend=\"${(e)=>e.target.classList.remove(\"fade-in\")}\"\n             @click=\"${this.#onSectionsClicked.bind(this)}\">\n            ${(0, $e0ecebd5da923169$export$871de8747c9eaa88)(this.level, (section, idx)=>(0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n                <section>\n                    <h2 class=\"sticky\">${section.title}</h2>\n                    ${this.#renderNodes(section.nodes, idx)}\n                </section>\n            `)}\n        </div>\n    `;\n    }\n    #renderSpinner() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n        <loading-spinner loading class=\"slide-up-fade-in\"\n                         @animationend=\"${(e)=>e.target.classList.remove(\"slide-up-fade-in\")}\">\n        </loading-spinner>\n    `;\n    }\n    #renderScrollToTopBtn() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n        <scroll-to-top-button></scroll-to-top-button>`;\n    }\n    #onNavigationClicked(e) {\n        if (e.target.tagName.toLowerCase() !== \"button\") return;\n        this.abortFetch();\n        this.#stateManager.fetchPreviousState(e.target.dataset.navigationIdx);\n        this.#updateState();\n        (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).updateState(this.#stateManager.params, [\n            \"section\",\n            \"bu\",\n            \"nodes\"\n        ]);\n    }\n    #renderNavigation() {\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n        <div class=\"tree-navigation-container\"\n             @click=\"${this.#onNavigationClicked.bind(this)}\">\n            ${(0, $5478b4ac633a513e$export$a55877ca9db47377)(this.stack.length > 0, ()=>(0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n                <button data-navigation-idx=\"0\">Home</button>\n            `)}\n            ${(0, $e0ecebd5da923169$export$871de8747c9eaa88)(this.stack.slice(1), (step, idx)=>(0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n                <i class=\"material-icons-outlined\">chevron_right</i>\n                <button data-navigation-idx=\"${idx + 1}\">\n                    ${step.level[step.sectionIndex].title}\n                </button>\n            `)}\n        </div>\n    `;\n    }\n    render() {\n        const renderScrollBtn = this.level.length === 1 && this.level[0].next;\n        return (0, $e5ed8027d647799b$export$c0bb0b647f701bb5)`\n        ${this.#renderNavigation()}\n        ${(0, $5478b4ac633a513e$export$a55877ca9db47377)(this.loading, this.#renderSpinner.bind(this), this.#renderResults.bind(this))}\n        ${(0, $5478b4ac633a513e$export$a55877ca9db47377)(renderScrollBtn, this.#renderScrollToTopBtn.bind(this))}\n    `;\n    }\n}\ncustomElements.define(\"lists-page\", $7adac226aaa535fd$export$4546797870416e9b);\n(0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).addRoute(\"lists\", \"lists-page\");\n\n\n\n\nconst $b2124721a73c4f6e$var$preferences = (0, $1d04fb3d6fcfa221$export$2e2bcd8739ae039).loadPreferences();\n// Initialize the router with the current path or 'examples' if none is found\n(0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).start({\n    defaultPath: \"examples\"\n});\nif ((0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).queryParams.debug) {\n    $b2124721a73c4f6e$var$preferences.debug = (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).queryParams.debug === \"true\";\n    (0, $1d04fb3d6fcfa221$export$2e2bcd8739ae039).savePreferences($b2124721a73c4f6e$var$preferences);\n} else if ($b2124721a73c4f6e$var$preferences.debug) (0, $ee5e9ca62ce1cc5e$export$2e2bcd8739ae039).updateState({\n    debug: \"true\"\n});\n\n\n//# sourceMappingURL=index.52596b25.js.map\n","/**\n * Main module to import and initialize the demo as a single page application.\n *\n * @module\n */\nimport './player/player';\nimport './player/player-dialog';\nimport './layout/header-component';\nimport './router/route-outlet-component';\nimport './examples/examples-page';\nimport './search/search-page';\nimport './settings/settings-page';\nimport './lists/lists-page';\nimport router from './router/router';\nimport PreferencesProvider from './settings/preferences-provider';\n\nconst preferences = PreferencesProvider.loadPreferences();\n\n// Initialize the router with the current path or 'examples' if none is found\nrouter.start({ defaultPath: 'examples' });\n\nif (router.queryParams.debug) {\n  preferences.debug = router.queryParams.debug === 'true';\n  PreferencesProvider.savePreferences(preferences);\n} else if (preferences.debug) {\n  router.updateState({ debug: 'true' });\n}\n","/**\n * Initialized the demo player.\n *\n * @module\n */\nimport Pillarbox from '../../../src/pillarbox.js';\nimport '../../../src/middleware/srgssr.js';\nimport PreferencesProvider from '../settings/preferences-provider';\n\nconst DEMO_PLAYER_ID = 'player';\nconst DEFAULT_OPTIONS = {\n  fill: true,\n  restoreEl: true\n};\n\n/**\n * Creates and configures a Pillarbox video player.\n *\n * @returns {Object} The configured Pillarbox video player instance.\n */\nexport const createPlayer = () => {\n  const preferences = PreferencesProvider.loadPreferences();\n\n  window.player = new Pillarbox(DEMO_PLAYER_ID, {\n    ...DEFAULT_OPTIONS,\n    ...{\n      muted: preferences.muted ?? true,\n      autoplay: preferences.autoplay ?? false,\n      debug: preferences.debug ?? false,\n    }\n  });\n\n  return window.player;\n};\n\n/**\n * Disposes of the Pillarbox video player instance.\n */\nexport const destroyPlayer = () => {\n  Pillarbox.getPlayer(DEMO_PLAYER_ID).dispose();\n  window.player = null;\n};\n\n\n// Expose Pillarbox and player in the window object for debugging\nwindow.pillarbox = Pillarbox;\n// TODO must be remove once tagCommander is pillarbox ready\n//\n// Allows to track comscore events\n//\n// This is necessary because a tagCommander script uses videojs directly for some\n// unknown reason. Pillarbox does not expose videojs, because pillarbox\n// is a superset of videojs, this causes an error preventing comscore\n// from initializing correctly.\nwindow.videojs = Pillarbox;\n","/**\n * Utility class for loading and saving preferences to local storage.\n *\n * @class PreferencesProvider\n */\nclass PreferencesProvider {\n  /**\n   * Load preferences from local storage.\n   *\n   * @static\n   * @returns {Object} An object representing the loaded preferences.\n   */\n  static loadPreferences() {\n    return JSON.parse(localStorage.getItem('preferences')) || {};\n  }\n\n  /**\n   * Save preferences to local storage.\n   *\n   * @static\n   * @param {Object} preferences - An object representing the preferences to be saved.\n   * @returns {void}\n   */\n  static savePreferences(preferences) {\n    localStorage.setItem('preferences', JSON.stringify(preferences));\n  }\n}\n\nexport default PreferencesProvider;\n","/**\n * Defines the behaviour of the player dialog and provides a function to open the\n * dialog and reload the player's content.\n *\n * @module\n */\nimport { createPlayer, destroyPlayer } from './player';\nimport router from '../router/router';\n\nconst dialog = document.getElementById('pbw-dialog');\n\n// Pauses de video once the modal is closed.\ndialog.addEventListener('close', () => {\n  document.documentElement.style.overflowY = 'scroll';\n  destroyPlayer();\n\n  router.updateState({}, ['src', 'type', 'vendor', 'certificateUrl', 'licenseUrl']);\n});\n\n// Close the dialog on close button clicked\ndialog.querySelector('#pbw-dialog-close-btn').addEventListener('click', () => {\n  dialog.close();\n});\n\ndialog.addEventListener('animationend', () => {\n  dialog.classList.toggle('slide-up-fade-in', false);\n});\n\n// Close the dialog when the backdrop is clicked\ndialog.addEventListener('click', (e) => {\n  if (dialog !== e.target) return;\n\n  dialog.close();\n});\n\nconst toParams = (keySystems) => {\n  const vendor = Object.keys(keySystems ?? {})[0];\n\n  if (!vendor) {\n    return {};\n  }\n\n  return {\n    vendor: vendor,\n    ...keySystems[vendor]\n  };\n};\n\n/**\n * Opens a modal containing a video player with specified source and type. Can only\n * load URN if the type 'srgssr/urn`is explicitly provided, otherwise the created\n * Pillarbox player tries to guess the type.\n *\n * @param {object} options - An object containing the source and type of the video to be played.\n * @param {string} options.src - The source URL of the video.\n * @param {string} [options.type] - (Optional) The type/format of the video (e.g., 'video/mp4').\n * @param {object} [options.keySystems] - (Optional) The DRM configuration for DRM protected sources.\n */\nexport const openPlayerModal = ({ src, type, keySystems }) => {\n  const player = createPlayer();\n\n  document.documentElement.style.overflowY = 'hidden';\n  player.src({ src, type, keySystems });\n\n  router.updateState({ src, type, ...toParams(keySystems) });\n\n  dialog.showModal();\n  dialog.classList.toggle('slide-up-fade-in', true);\n};\n\nexport const asQueryParams = ({ src, type, keySystems }) => {\n  return new URLSearchParams({ src, type, ...toParams(keySystems) }).toString();\n};\n\nconst toKeySystem = (params) => {\n  if (!params.vendor) {\n    return undefined;\n  }\n\n  const keySystem = {};\n  const { certificateUrl, licenseUrl } = params;\n\n  keySystem[params.vendor] = { certificateUrl, licenseUrl };\n\n  return keySystem;\n};\n\nconst loadPlayerFromRouter = (e) => {\n  const params = e.detail.queryParams;\n\n  if ('src' in params) {\n    const { src, type } = params;\n    const keySystems = toKeySystem(params);\n\n    openPlayerModal({ src, type, keySystems });\n  }\n};\n\nrouter.addEventListener('routechanged', loadPlayerFromRouter);\nrouter.addEventListener('queryparams', loadPlayerFromRouter);\n","import { Minimatch } from 'minimatch';\n\n/**\n * Router class for managing client-side navigation in a Single Page Application (SPA).\n * This class enables the creation of a simple client-side router to handle navigation within an SPA,\n * allowing developers to define routes and associated actions.\n *\n * ## Usage:\n * 1. Import the router in your project:\n *    ```javascript\n *    import router from './path/to/Router';\n *    ```\n * 2. Define routes by using the `addRoute` method:\n *    ```javascript\n *    router.addRoute('/', 'home-component', () => {\n *      // Function to execute when navigating to the root path\n *      console.log('Navigated to the root path');\n *    }, () => {\n *      // Function to execute when navigating away from the root path\n *      console.log('Navigated away from the root path');\n *    });\n *    ```\n * 3. Integrate with an `<route-link>` tag using the `href` attribute:\n *    ```html\n *    <route-link href=\"/\">Home</route-link>\n *    <route-link href=\"/about\">About</route-link>\n *    ```\n *    Clicking on these links will trigger the router to navigate to the specified paths.\n * 4. Define a route outlet where the component associated with the route will be rendered :\n *    ```html\n *    <route-outlet></route-outlet>\n *    ``\n * @class\n */\nclass Router extends EventTarget {\n  /**\n   * The fallback route to be used in case no matching route is found.\n   * @private\n   * @type {string|null}\n   */\n  #defaultPath = null;\n\n  /**\n   * The currently active route.\n   * @private\n   * @type {{ path: Minimatch, start: function, destroy: function }|null}\n   */\n  #currentRoute = null;\n\n  /**\n   * The query parameters associated with the current route.\n   * @private\n   * @type {object}\n   */\n  #currentQueryParams = {};\n\n  /**\n   * An array containing registered route objects with their patterns and associated actions.\n   * @private\n   * @type {Array<{ path: Minimatch, start: function, destroy: function }>}\n   */\n  #routes = [];\n\n\n  constructor() {\n    super();\n\n    // Event listener for the popstate event\n    window.addEventListener('popstate', () => {\n      const entries = new URL(window.location.href).searchParams.entries();\n      const queryParams = Object.fromEntries(entries);\n\n      this.#handleRouteChange(window.location.pathname, queryParams, true);\n    });\n  }\n\n  /**\n   * Adds a route to the router.\n   *\n   * @param {string} pattern - The path of the route, can be a glob pattern.\n   * @param {string} component - The component to be rendered when the route is navigated to.\n   * @param {function} start - The function to be called when the route is navigated to.\n   * @param {function} destroy - The function to be called when the route is navigated away from.\n   */\n  addRoute(pattern, component = null, start = () => {\n  }, destroy = () => {\n  }) {\n    const path = new Minimatch(pattern, { matchBase: true });\n\n    this.#routes.push({ path, start, component, destroy });\n  }\n\n  /**\n   * Checks if the given path is the current active route.\n   *\n   * @param {string} path - The path to check.\n   * @returns {boolean} - True if the given path is the current active route, false otherwise.\n   */\n  isActiveRoute(path) {\n    return this.#currentRoute &&\n      this.#currentRoute.path === this.findRoute(path)?.path;\n  }\n\n  /**\n   * Finds a route based on the given path.\n   *\n   * @param {string} path - The path to find the route for.\n   * @returns {object} - The route object if found, otherwise undefined.\n   */\n  findRoute(path) {\n    return this.#routes.find(r => r.path.match(path));\n  }\n\n  /**\n   * Navigates to the specified path.\n   *\n   * @param {string} path - The path to navigate to.\n   * @param {object} [queryParams={}] - (Optional) query parameters to be associated with the route.\n   */\n  navigateTo(path, queryParams = {}) {\n    const url = new URL(window.location.href);\n    const normalizedPath = '/' + path.trim().replace(/^\\/+/, '');\n\n    url.pathname = normalizedPath.startsWith(this.base) ?\n      normalizedPath :\n      this.base + normalizedPath;\n    url.search = new URLSearchParams(queryParams).toString();\n\n    window.history.pushState({}, '', url.href);\n    this.#handleRouteChange(path, queryParams);\n  }\n\n  /**\n   * Updates the state by navigating to the current path with the provided query parameters.\n   *\n   * @param {Object} queryParams - The new query parameters to be merged with the current ones.\n   */\n  updateState(queryParams, keysToRemove = []) {\n    const filteredParams = Object.fromEntries(\n      Object.entries(this.#currentQueryParams)\n        .filter(([key]) => !keysToRemove.includes(key))\n    );\n\n    this.navigateTo(\n      window.location.pathname,\n      { ...filteredParams, ...queryParams }\n    );\n  }\n\n  /**\n   * Replaces the current state by navigating to the current path with the provided query parameters,\n   * discarding the current query parameters.\n   *\n   * @param {Object} newParams - The new query parameters to replace the current ones.\n   */\n  replaceState(newParams) {\n    this.navigateTo(window.location.pathname, newParams);\n  }\n\n  /**\n   * Handles a change in the route.\n   *\n   * @private\n   * @param {string} path - The path of the new route.\n   * @param {object} [queryParams={}] - (Optional) The query parameters associated with the route.\n   * @param {boolean} [popstate=false] - (Optional) if a popstate is at the origin of this route change.\n   */\n  #handleRouteChange(path, queryParams = {}, popstate = false) {\n    if (this.isActiveRoute(path)) {\n      if (!this.#matchCurrentParams(queryParams)) {\n        this.#currentQueryParams = queryParams;\n        this.dispatchEvent(new CustomEvent('queryparams', {\n          detail: {\n            route: this.#currentRoute,\n            popstate,\n            queryParams\n          }\n        }));\n      }\n\n      return;\n    }\n\n    const route = this.findRoute(path);\n\n    if (route)\n      this.#updateCurrentRoute(route, queryParams, popstate);\n    else if (this.#defaultPath)\n      this.#handleRouteChange(this.#defaultPath, queryParams, popstate);\n    else\n      throw Error(`No route found for '${path}'`);\n  }\n\n  /**\n   * Checks if the given query parameters match the current query parameters.\n   *\n   * @private\n   * @param {object} params - The query parameters to compare.\n   * @returns {boolean} - True if the given parameters match the current query parameters, false otherwise.\n   */\n  #matchCurrentParams(params) {\n    const paramsKeys = Object.keys(params);\n\n    if (paramsKeys.length !== Object.keys(this.#currentQueryParams).length)\n      return false;\n\n    return paramsKeys.every(k => this.#currentQueryParams[k] === params[k]);\n  }\n\n  /**\n   * Updates the current route and dispatches the 'routechanged' event.\n   *\n   * @private\n   * @param {object} route - The route object.\n   * @param {object} queryParams - The query parameters associated with the route.\n   * @param {boolean} [popstate=false] - (Optional) if a popstate is at the origin of this route change.\n   */\n  #updateCurrentRoute(route, queryParams, popstate = false) {\n    this.#currentRoute?.destroy();\n    this.#currentRoute = route;\n    this.#currentQueryParams = queryParams;\n    route.start(queryParams);\n    this.dispatchEvent(new CustomEvent('routechanged', {\n      detail: {\n        route,\n        popstate,\n        queryParams\n      }\n    }));\n  }\n\n  /**\n   * Initiates the router based on the current window location.\n   *\n   * @param defaultPath - The fallback path when no path is found during route resolving.\n   */\n  start({ defaultPath }) {\n    const url = new URL(window.location.href);\n    const path = url.pathname;\n    const queryParams = Object.fromEntries(url.searchParams.entries());\n\n    this.#defaultPath = defaultPath;\n    this.base = this.findRoute(path) ?\n      path.replace(/\\/[^/]+\\/?$/, '/') :\n      path;\n\n    this.base = this.base.replace(/\\/+$/, '');\n\n    this.#handleRouteChange(path, queryParams);\n  }\n\n  get queryParams() {\n    return this.#currentQueryParams;\n  }\n\n  get currentRoute() {\n    return this.#currentRoute;\n  }\n}\n\n// Export a singleton instance of the router\nexport default new Router();\n","import expand from 'brace-expansion';\nimport { assertValidPattern } from './assert-valid-pattern.js';\nimport { AST } from './ast.js';\nimport { escape } from './escape.js';\nimport { unescape } from './unescape.js';\nexport const minimatch = (p, pattern, options = {}) => {\n    assertValidPattern(pattern);\n    // shortcut: comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n        return false;\n    }\n    return new Minimatch(pattern, options).match(p);\n};\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/;\nconst starDotExtTest = (ext) => (f) => !f.startsWith('.') && f.endsWith(ext);\nconst starDotExtTestDot = (ext) => (f) => f.endsWith(ext);\nconst starDotExtTestNocase = (ext) => {\n    ext = ext.toLowerCase();\n    return (f) => !f.startsWith('.') && f.toLowerCase().endsWith(ext);\n};\nconst starDotExtTestNocaseDot = (ext) => {\n    ext = ext.toLowerCase();\n    return (f) => f.toLowerCase().endsWith(ext);\n};\nconst starDotStarRE = /^\\*+\\.\\*+$/;\nconst starDotStarTest = (f) => !f.startsWith('.') && f.includes('.');\nconst starDotStarTestDot = (f) => f !== '.' && f !== '..' && f.includes('.');\nconst dotStarRE = /^\\.\\*+$/;\nconst dotStarTest = (f) => f !== '.' && f !== '..' && f.startsWith('.');\nconst starRE = /^\\*+$/;\nconst starTest = (f) => f.length !== 0 && !f.startsWith('.');\nconst starTestDot = (f) => f.length !== 0 && f !== '.' && f !== '..';\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/;\nconst qmarksTestNocase = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExt([$0]);\n    if (!ext)\n        return noext;\n    ext = ext.toLowerCase();\n    return (f) => noext(f) && f.toLowerCase().endsWith(ext);\n};\nconst qmarksTestNocaseDot = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExtDot([$0]);\n    if (!ext)\n        return noext;\n    ext = ext.toLowerCase();\n    return (f) => noext(f) && f.toLowerCase().endsWith(ext);\n};\nconst qmarksTestDot = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExtDot([$0]);\n    return !ext ? noext : (f) => noext(f) && f.endsWith(ext);\n};\nconst qmarksTest = ([$0, ext = '']) => {\n    const noext = qmarksTestNoExt([$0]);\n    return !ext ? noext : (f) => noext(f) && f.endsWith(ext);\n};\nconst qmarksTestNoExt = ([$0]) => {\n    const len = $0.length;\n    return (f) => f.length === len && !f.startsWith('.');\n};\nconst qmarksTestNoExtDot = ([$0]) => {\n    const len = $0.length;\n    return (f) => f.length === len && f !== '.' && f !== '..';\n};\n/* c8 ignore start */\nconst defaultPlatform = (typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n        process.platform\n    : 'posix');\nconst path = {\n    win32: { sep: '\\\\' },\n    posix: { sep: '/' },\n};\n/* c8 ignore stop */\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep;\nminimatch.sep = sep;\nexport const GLOBSTAR = Symbol('globstar **');\nminimatch.GLOBSTAR = GLOBSTAR;\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]';\n// * => any number of characters\nconst star = qmark + '*?';\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?';\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?';\nexport const filter = (pattern, options = {}) => (p) => minimatch(p, pattern, options);\nminimatch.filter = filter;\nconst ext = (a, b = {}) => Object.assign({}, a, b);\nexport const defaults = (def) => {\n    if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n        return minimatch;\n    }\n    const orig = minimatch;\n    const m = (p, pattern, options = {}) => orig(p, pattern, ext(def, options));\n    return Object.assign(m, {\n        Minimatch: class Minimatch extends orig.Minimatch {\n            constructor(pattern, options = {}) {\n                super(pattern, ext(def, options));\n            }\n            static defaults(options) {\n                return orig.defaults(ext(def, options)).Minimatch;\n            }\n        },\n        AST: class AST extends orig.AST {\n            /* c8 ignore start */\n            constructor(type, parent, options = {}) {\n                super(type, parent, ext(def, options));\n            }\n            /* c8 ignore stop */\n            static fromGlob(pattern, options = {}) {\n                return orig.AST.fromGlob(pattern, ext(def, options));\n            }\n        },\n        unescape: (s, options = {}) => orig.unescape(s, ext(def, options)),\n        escape: (s, options = {}) => orig.escape(s, ext(def, options)),\n        filter: (pattern, options = {}) => orig.filter(pattern, ext(def, options)),\n        defaults: (options) => orig.defaults(ext(def, options)),\n        makeRe: (pattern, options = {}) => orig.makeRe(pattern, ext(def, options)),\n        braceExpand: (pattern, options = {}) => orig.braceExpand(pattern, ext(def, options)),\n        match: (list, pattern, options = {}) => orig.match(list, pattern, ext(def, options)),\n        sep: orig.sep,\n        GLOBSTAR: GLOBSTAR,\n    });\n};\nminimatch.defaults = defaults;\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (pattern, options = {}) => {\n    assertValidPattern(pattern);\n    // Thanks to Yeting Li <https://github.com/yetingli> for\n    // improving this regexp to avoid a ReDOS vulnerability.\n    if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n        // shortcut. no need to expand.\n        return [pattern];\n    }\n    return expand(pattern);\n};\nminimatch.braceExpand = braceExpand;\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nexport const makeRe = (pattern, options = {}) => new Minimatch(pattern, options).makeRe();\nminimatch.makeRe = makeRe;\nexport const match = (list, pattern, options = {}) => {\n    const mm = new Minimatch(pattern, options);\n    list = list.filter(f => mm.match(f));\n    if (mm.options.nonull && !list.length) {\n        list.push(pattern);\n    }\n    return list;\n};\nminimatch.match = match;\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/;\nconst regExpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\nexport class Minimatch {\n    options;\n    set;\n    pattern;\n    windowsPathsNoEscape;\n    nonegate;\n    negate;\n    comment;\n    empty;\n    preserveMultipleSlashes;\n    partial;\n    globSet;\n    globParts;\n    nocase;\n    isWindows;\n    platform;\n    windowsNoMagicRoot;\n    regexp;\n    constructor(pattern, options = {}) {\n        assertValidPattern(pattern);\n        options = options || {};\n        this.options = options;\n        this.pattern = pattern;\n        this.platform = options.platform || defaultPlatform;\n        this.isWindows = this.platform === 'win32';\n        this.windowsPathsNoEscape =\n            !!options.windowsPathsNoEscape || options.allowWindowsEscape === false;\n        if (this.windowsPathsNoEscape) {\n            this.pattern = this.pattern.replace(/\\\\/g, '/');\n        }\n        this.preserveMultipleSlashes = !!options.preserveMultipleSlashes;\n        this.regexp = null;\n        this.negate = false;\n        this.nonegate = !!options.nonegate;\n        this.comment = false;\n        this.empty = false;\n        this.partial = !!options.partial;\n        this.nocase = !!this.options.nocase;\n        this.windowsNoMagicRoot =\n            options.windowsNoMagicRoot !== undefined\n                ? options.windowsNoMagicRoot\n                : !!(this.isWindows && this.nocase);\n        this.globSet = [];\n        this.globParts = [];\n        this.set = [];\n        // make the set of regexps etc.\n        this.make();\n    }\n    hasMagic() {\n        if (this.options.magicalBraces && this.set.length > 1) {\n            return true;\n        }\n        for (const pattern of this.set) {\n            for (const part of pattern) {\n                if (typeof part !== 'string')\n                    return true;\n            }\n        }\n        return false;\n    }\n    debug(..._) { }\n    make() {\n        const pattern = this.pattern;\n        const options = this.options;\n        // empty patterns and comments match nothing.\n        if (!options.nocomment && pattern.charAt(0) === '#') {\n            this.comment = true;\n            return;\n        }\n        if (!pattern) {\n            this.empty = true;\n            return;\n        }\n        // step 1: figure out negation, etc.\n        this.parseNegate();\n        // step 2: expand braces\n        this.globSet = [...new Set(this.braceExpand())];\n        if (options.debug) {\n            this.debug = (...args) => console.error(...args);\n        }\n        this.debug(this.pattern, this.globSet);\n        // step 3: now we have a set, so turn each one into a series of\n        // path-portion matching patterns.\n        // These will be regexps, except in the case of \"**\", which is\n        // set to the GLOBSTAR object for globstar behavior,\n        // and will not contain any / characters\n        //\n        // First, we preprocess to make the glob pattern sets a bit simpler\n        // and deduped.  There are some perf-killing patterns that can cause\n        // problems with a glob walk, but we can simplify them down a bit.\n        const rawGlobParts = this.globSet.map(s => this.slashSplit(s));\n        this.globParts = this.preprocess(rawGlobParts);\n        this.debug(this.pattern, this.globParts);\n        // glob --> regexps\n        let set = this.globParts.map((s, _, __) => {\n            if (this.isWindows && this.windowsNoMagicRoot) {\n                // check if it's a drive or unc path.\n                const isUNC = s[0] === '' &&\n                    s[1] === '' &&\n                    (s[2] === '?' || !globMagic.test(s[2])) &&\n                    !globMagic.test(s[3]);\n                const isDrive = /^[a-z]:/i.test(s[0]);\n                if (isUNC) {\n                    return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))];\n                }\n                else if (isDrive) {\n                    return [s[0], ...s.slice(1).map(ss => this.parse(ss))];\n                }\n            }\n            return s.map(ss => this.parse(ss));\n        });\n        this.debug(this.pattern, set);\n        // filter out everything that didn't compile properly.\n        this.set = set.filter(s => s.indexOf(false) === -1);\n        // do not treat the ? in UNC paths as magic\n        if (this.isWindows) {\n            for (let i = 0; i < this.set.length; i++) {\n                const p = this.set[i];\n                if (p[0] === '' &&\n                    p[1] === '' &&\n                    this.globParts[i][2] === '?' &&\n                    typeof p[3] === 'string' &&\n                    /^[a-z]:$/i.test(p[3])) {\n                    p[2] = '?';\n                }\n            }\n        }\n        this.debug(this.pattern, this.set);\n    }\n    // various transforms to equivalent pattern sets that are\n    // faster to process in a filesystem walk.  The goal is to\n    // eliminate what we can, and push all ** patterns as far\n    // to the right as possible, even if it increases the number\n    // of patterns that we have to process.\n    preprocess(globParts) {\n        // if we're not in globstar mode, then turn all ** into *\n        if (this.options.noglobstar) {\n            for (let i = 0; i < globParts.length; i++) {\n                for (let j = 0; j < globParts[i].length; j++) {\n                    if (globParts[i][j] === '**') {\n                        globParts[i][j] = '*';\n                    }\n                }\n            }\n        }\n        const { optimizationLevel = 1 } = this.options;\n        if (optimizationLevel >= 2) {\n            // aggressive optimization for the purpose of fs walking\n            globParts = this.firstPhasePreProcess(globParts);\n            globParts = this.secondPhasePreProcess(globParts);\n        }\n        else if (optimizationLevel >= 1) {\n            // just basic optimizations to remove some .. parts\n            globParts = this.levelOneOptimize(globParts);\n        }\n        else {\n            globParts = this.adjascentGlobstarOptimize(globParts);\n        }\n        return globParts;\n    }\n    // just get rid of adjascent ** portions\n    adjascentGlobstarOptimize(globParts) {\n        return globParts.map(parts => {\n            let gs = -1;\n            while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n                let i = gs;\n                while (parts[i + 1] === '**') {\n                    i++;\n                }\n                if (i !== gs) {\n                    parts.splice(gs, i - gs);\n                }\n            }\n            return parts;\n        });\n    }\n    // get rid of adjascent ** and resolve .. portions\n    levelOneOptimize(globParts) {\n        return globParts.map(parts => {\n            parts = parts.reduce((set, part) => {\n                const prev = set[set.length - 1];\n                if (part === '**' && prev === '**') {\n                    return set;\n                }\n                if (part === '..') {\n                    if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n                        set.pop();\n                        return set;\n                    }\n                }\n                set.push(part);\n                return set;\n            }, []);\n            return parts.length === 0 ? [''] : parts;\n        });\n    }\n    levelTwoFileOptimize(parts) {\n        if (!Array.isArray(parts)) {\n            parts = this.slashSplit(parts);\n        }\n        let didSomething = false;\n        do {\n            didSomething = false;\n            // <pre>/<e>/<rest> -> <pre>/<rest>\n            if (!this.preserveMultipleSlashes) {\n                for (let i = 1; i < parts.length - 1; i++) {\n                    const p = parts[i];\n                    // don't squeeze out UNC patterns\n                    if (i === 1 && p === '' && parts[0] === '')\n                        continue;\n                    if (p === '.' || p === '') {\n                        didSomething = true;\n                        parts.splice(i, 1);\n                        i--;\n                    }\n                }\n                if (parts[0] === '.' &&\n                    parts.length === 2 &&\n                    (parts[1] === '.' || parts[1] === '')) {\n                    didSomething = true;\n                    parts.pop();\n                }\n            }\n            // <pre>/<p>/../<rest> -> <pre>/<rest>\n            let dd = 0;\n            while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n                const p = parts[dd - 1];\n                if (p && p !== '.' && p !== '..' && p !== '**') {\n                    didSomething = true;\n                    parts.splice(dd - 1, 2);\n                    dd -= 2;\n                }\n            }\n        } while (didSomething);\n        return parts.length === 0 ? [''] : parts;\n    }\n    // First phase: single-pattern processing\n    // <pre> is 1 or more portions\n    // <rest> is 1 or more portions\n    // <p> is any portion other than ., .., '', or **\n    // <e> is . or ''\n    //\n    // **/.. is *brutal* for filesystem walking performance, because\n    // it effectively resets the recursive walk each time it occurs,\n    // and ** cannot be reduced out by a .. pattern part like a regexp\n    // or most strings (other than .., ., and '') can be.\n    //\n    // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n    // <pre>/<e>/<rest> -> <pre>/<rest>\n    // <pre>/<p>/../<rest> -> <pre>/<rest>\n    // **/**/<rest> -> **/<rest>\n    //\n    // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n    // this WOULD be allowed if ** did follow symlinks, or * didn't\n    firstPhasePreProcess(globParts) {\n        let didSomething = false;\n        do {\n            didSomething = false;\n            // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n            for (let parts of globParts) {\n                let gs = -1;\n                while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n                    let gss = gs;\n                    while (parts[gss + 1] === '**') {\n                        // <pre>/**/**/<rest> -> <pre>/**/<rest>\n                        gss++;\n                    }\n                    // eg, if gs is 2 and gss is 4, that means we have 3 **\n                    // parts, and can remove 2 of them.\n                    if (gss > gs) {\n                        parts.splice(gs + 1, gss - gs);\n                    }\n                    let next = parts[gs + 1];\n                    const p = parts[gs + 2];\n                    const p2 = parts[gs + 3];\n                    if (next !== '..')\n                        continue;\n                    if (!p ||\n                        p === '.' ||\n                        p === '..' ||\n                        !p2 ||\n                        p2 === '.' ||\n                        p2 === '..') {\n                        continue;\n                    }\n                    didSomething = true;\n                    // edit parts in place, and push the new one\n                    parts.splice(gs, 1);\n                    const other = parts.slice(0);\n                    other[gs] = '**';\n                    globParts.push(other);\n                    gs--;\n                }\n                // <pre>/<e>/<rest> -> <pre>/<rest>\n                if (!this.preserveMultipleSlashes) {\n                    for (let i = 1; i < parts.length - 1; i++) {\n                        const p = parts[i];\n                        // don't squeeze out UNC patterns\n                        if (i === 1 && p === '' && parts[0] === '')\n                            continue;\n                        if (p === '.' || p === '') {\n                            didSomething = true;\n                            parts.splice(i, 1);\n                            i--;\n                        }\n                    }\n                    if (parts[0] === '.' &&\n                        parts.length === 2 &&\n                        (parts[1] === '.' || parts[1] === '')) {\n                        didSomething = true;\n                        parts.pop();\n                    }\n                }\n                // <pre>/<p>/../<rest> -> <pre>/<rest>\n                let dd = 0;\n                while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n                    const p = parts[dd - 1];\n                    if (p && p !== '.' && p !== '..' && p !== '**') {\n                        didSomething = true;\n                        const needDot = dd === 1 && parts[dd + 1] === '**';\n                        const splin = needDot ? ['.'] : [];\n                        parts.splice(dd - 1, 2, ...splin);\n                        if (parts.length === 0)\n                            parts.push('');\n                        dd -= 2;\n                    }\n                }\n            }\n        } while (didSomething);\n        return globParts;\n    }\n    // second phase: multi-pattern dedupes\n    // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n    // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n    // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n    //\n    // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n    // ^-- not valid because ** doens't follow symlinks\n    secondPhasePreProcess(globParts) {\n        for (let i = 0; i < globParts.length - 1; i++) {\n            for (let j = i + 1; j < globParts.length; j++) {\n                const matched = this.partsMatch(globParts[i], globParts[j], !this.preserveMultipleSlashes);\n                if (!matched)\n                    continue;\n                globParts[i] = matched;\n                globParts[j] = [];\n            }\n        }\n        return globParts.filter(gs => gs.length);\n    }\n    partsMatch(a, b, emptyGSMatch = false) {\n        let ai = 0;\n        let bi = 0;\n        let result = [];\n        let which = '';\n        while (ai < a.length && bi < b.length) {\n            if (a[ai] === b[bi]) {\n                result.push(which === 'b' ? b[bi] : a[ai]);\n                ai++;\n                bi++;\n            }\n            else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n                result.push(a[ai]);\n                ai++;\n            }\n            else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n                result.push(b[bi]);\n                bi++;\n            }\n            else if (a[ai] === '*' &&\n                b[bi] &&\n                (this.options.dot || !b[bi].startsWith('.')) &&\n                b[bi] !== '**') {\n                if (which === 'b')\n                    return false;\n                which = 'a';\n                result.push(a[ai]);\n                ai++;\n                bi++;\n            }\n            else if (b[bi] === '*' &&\n                a[ai] &&\n                (this.options.dot || !a[ai].startsWith('.')) &&\n                a[ai] !== '**') {\n                if (which === 'a')\n                    return false;\n                which = 'b';\n                result.push(b[bi]);\n                ai++;\n                bi++;\n            }\n            else {\n                return false;\n            }\n        }\n        // if we fall out of the loop, it means they two are identical\n        // as long as their lengths match\n        return a.length === b.length && result;\n    }\n    parseNegate() {\n        if (this.nonegate)\n            return;\n        const pattern = this.pattern;\n        let negate = false;\n        let negateOffset = 0;\n        for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n            negate = !negate;\n            negateOffset++;\n        }\n        if (negateOffset)\n            this.pattern = pattern.slice(negateOffset);\n        this.negate = negate;\n    }\n    // set partial to true to test if, for example,\n    // \"/a/b\" matches the start of \"/*/b/*/d\"\n    // Partial means, if you run out of file before you run\n    // out of pattern, then that's fine, as long as all\n    // the parts match.\n    matchOne(file, pattern, partial = false) {\n        const options = this.options;\n        // UNC paths like //?/X:/... can match X:/... and vice versa\n        // Drive letters in absolute drive or unc paths are always compared\n        // case-insensitively.\n        if (this.isWindows) {\n            const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0]);\n            const fileUNC = !fileDrive &&\n                file[0] === '' &&\n                file[1] === '' &&\n                file[2] === '?' &&\n                /^[a-z]:$/i.test(file[3]);\n            const patternDrive = typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0]);\n            const patternUNC = !patternDrive &&\n                pattern[0] === '' &&\n                pattern[1] === '' &&\n                pattern[2] === '?' &&\n                typeof pattern[3] === 'string' &&\n                /^[a-z]:$/i.test(pattern[3]);\n            const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined;\n            const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined;\n            if (typeof fdi === 'number' && typeof pdi === 'number') {\n                const [fd, pd] = [file[fdi], pattern[pdi]];\n                if (fd.toLowerCase() === pd.toLowerCase()) {\n                    pattern[pdi] = fd;\n                    if (pdi > fdi) {\n                        pattern = pattern.slice(pdi);\n                    }\n                    else if (fdi > pdi) {\n                        file = file.slice(fdi);\n                    }\n                }\n            }\n        }\n        // resolve and reduce . and .. portions in the file as well.\n        // dont' need to do the second phase, because it's only one string[]\n        const { optimizationLevel = 1 } = this.options;\n        if (optimizationLevel >= 2) {\n            file = this.levelTwoFileOptimize(file);\n        }\n        this.debug('matchOne', this, { file, pattern });\n        this.debug('matchOne', file.length, pattern.length);\n        for (var fi = 0, pi = 0, fl = file.length, pl = pattern.length; fi < fl && pi < pl; fi++, pi++) {\n            this.debug('matchOne loop');\n            var p = pattern[pi];\n            var f = file[fi];\n            this.debug(pattern, p, f);\n            // should be impossible.\n            // some invalid regexp stuff in the set.\n            /* c8 ignore start */\n            if (p === false) {\n                return false;\n            }\n            /* c8 ignore stop */\n            if (p === GLOBSTAR) {\n                this.debug('GLOBSTAR', [pattern, p, f]);\n                // \"**\"\n                // a/**/b/**/c would match the following:\n                // a/b/x/y/z/c\n                // a/x/y/z/b/c\n                // a/b/x/b/x/c\n                // a/b/c\n                // To do this, take the rest of the pattern after\n                // the **, and see if it would match the file remainder.\n                // If so, return success.\n                // If not, the ** \"swallows\" a segment, and try again.\n                // This is recursively awful.\n                //\n                // a/**/b/**/c matching a/b/x/y/z/c\n                // - a matches a\n                // - doublestar\n                //   - matchOne(b/x/y/z/c, b/**/c)\n                //     - b matches b\n                //     - doublestar\n                //       - matchOne(x/y/z/c, c) -> no\n                //       - matchOne(y/z/c, c) -> no\n                //       - matchOne(z/c, c) -> no\n                //       - matchOne(c, c) yes, hit\n                var fr = fi;\n                var pr = pi + 1;\n                if (pr === pl) {\n                    this.debug('** at the end');\n                    // a ** at the end will just swallow the rest.\n                    // We have found a match.\n                    // however, it will not swallow /.x, unless\n                    // options.dot is set.\n                    // . and .. are *never* matched by **, for explosively\n                    // exponential reasons.\n                    for (; fi < fl; fi++) {\n                        if (file[fi] === '.' ||\n                            file[fi] === '..' ||\n                            (!options.dot && file[fi].charAt(0) === '.'))\n                            return false;\n                    }\n                    return true;\n                }\n                // ok, let's see if we can swallow whatever we can.\n                while (fr < fl) {\n                    var swallowee = file[fr];\n                    this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee);\n                    // XXX remove this slice.  Just pass the start index.\n                    if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n                        this.debug('globstar found match!', fr, fl, swallowee);\n                        // found a match.\n                        return true;\n                    }\n                    else {\n                        // can't swallow \".\" or \"..\" ever.\n                        // can only swallow \".foo\" when explicitly asked.\n                        if (swallowee === '.' ||\n                            swallowee === '..' ||\n                            (!options.dot && swallowee.charAt(0) === '.')) {\n                            this.debug('dot detected!', file, fr, pattern, pr);\n                            break;\n                        }\n                        // ** swallows a segment, and continue.\n                        this.debug('globstar swallow a segment, and continue');\n                        fr++;\n                    }\n                }\n                // no match was found.\n                // However, in partial mode, we can't say this is necessarily over.\n                /* c8 ignore start */\n                if (partial) {\n                    // ran out of file\n                    this.debug('\\n>>> no match, partial?', file, fr, pattern, pr);\n                    if (fr === fl) {\n                        return true;\n                    }\n                }\n                /* c8 ignore stop */\n                return false;\n            }\n            // something other than **\n            // non-magic patterns just have to match exactly\n            // patterns with magic have been turned into regexps.\n            let hit;\n            if (typeof p === 'string') {\n                hit = f === p;\n                this.debug('string match', p, f, hit);\n            }\n            else {\n                hit = p.test(f);\n                this.debug('pattern match', p, f, hit);\n            }\n            if (!hit)\n                return false;\n        }\n        // Note: ending in / means that we'll get a final \"\"\n        // at the end of the pattern.  This can only match a\n        // corresponding \"\" at the end of the file.\n        // If the file ends in /, then it can only match a\n        // a pattern that ends in /, unless the pattern just\n        // doesn't have any more for it. But, a/b/ should *not*\n        // match \"a/b/*\", even though \"\" matches against the\n        // [^/]*? pattern, except in partial mode, where it might\n        // simply not be reached yet.\n        // However, a/b/ should still satisfy a/*\n        // now either we fell off the end of the pattern, or we're done.\n        if (fi === fl && pi === pl) {\n            // ran out of pattern and filename at the same time.\n            // an exact hit!\n            return true;\n        }\n        else if (fi === fl) {\n            // ran out of file, but still had pattern left.\n            // this is ok if we're doing the match as part of\n            // a glob fs traversal.\n            return partial;\n        }\n        else if (pi === pl) {\n            // ran out of pattern, still have file left.\n            // this is only acceptable if we're on the very last\n            // empty segment of a file with a trailing slash.\n            // a/* should match a/b/\n            return fi === fl - 1 && file[fi] === '';\n            /* c8 ignore start */\n        }\n        else {\n            // should be unreachable.\n            throw new Error('wtf?');\n        }\n        /* c8 ignore stop */\n    }\n    braceExpand() {\n        return braceExpand(this.pattern, this.options);\n    }\n    parse(pattern) {\n        assertValidPattern(pattern);\n        const options = this.options;\n        // shortcuts\n        if (pattern === '**')\n            return GLOBSTAR;\n        if (pattern === '')\n            return '';\n        // far and away, the most common glob pattern parts are\n        // *, *.*, and *.<ext>  Add a fast check method for those.\n        let m;\n        let fastTest = null;\n        if ((m = pattern.match(starRE))) {\n            fastTest = options.dot ? starTestDot : starTest;\n        }\n        else if ((m = pattern.match(starDotExtRE))) {\n            fastTest = (options.nocase\n                ? options.dot\n                    ? starDotExtTestNocaseDot\n                    : starDotExtTestNocase\n                : options.dot\n                    ? starDotExtTestDot\n                    : starDotExtTest)(m[1]);\n        }\n        else if ((m = pattern.match(qmarksRE))) {\n            fastTest = (options.nocase\n                ? options.dot\n                    ? qmarksTestNocaseDot\n                    : qmarksTestNocase\n                : options.dot\n                    ? qmarksTestDot\n                    : qmarksTest)(m);\n        }\n        else if ((m = pattern.match(starDotStarRE))) {\n            fastTest = options.dot ? starDotStarTestDot : starDotStarTest;\n        }\n        else if ((m = pattern.match(dotStarRE))) {\n            fastTest = dotStarTest;\n        }\n        const re = AST.fromGlob(pattern, this.options).toMMPattern();\n        return fastTest ? Object.assign(re, { test: fastTest }) : re;\n    }\n    makeRe() {\n        if (this.regexp || this.regexp === false)\n            return this.regexp;\n        // at this point, this.set is a 2d array of partial\n        // pattern strings, or \"**\".\n        //\n        // It's better to use .match().  This function shouldn't\n        // be used, really, but it's pretty convenient sometimes,\n        // when you just want to work with a regex.\n        const set = this.set;\n        if (!set.length) {\n            this.regexp = false;\n            return this.regexp;\n        }\n        const options = this.options;\n        const twoStar = options.noglobstar\n            ? star\n            : options.dot\n                ? twoStarDot\n                : twoStarNoDot;\n        const flags = new Set(options.nocase ? ['i'] : []);\n        // regexpify non-globstar patterns\n        // if ** is only item, then we just do one twoStar\n        // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n        // if ** is last, append (\\/twoStar|) to previous\n        // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n        // then filter out GLOBSTAR symbols\n        let re = set\n            .map(pattern => {\n            const pp = pattern.map(p => {\n                if (p instanceof RegExp) {\n                    for (const f of p.flags.split(''))\n                        flags.add(f);\n                }\n                return typeof p === 'string'\n                    ? regExpEscape(p)\n                    : p === GLOBSTAR\n                        ? GLOBSTAR\n                        : p._src;\n            });\n            pp.forEach((p, i) => {\n                const next = pp[i + 1];\n                const prev = pp[i - 1];\n                if (p !== GLOBSTAR || prev === GLOBSTAR) {\n                    return;\n                }\n                if (prev === undefined) {\n                    if (next !== undefined && next !== GLOBSTAR) {\n                        pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next;\n                    }\n                    else {\n                        pp[i] = twoStar;\n                    }\n                }\n                else if (next === undefined) {\n                    pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?';\n                }\n                else if (next !== GLOBSTAR) {\n                    pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next;\n                    pp[i + 1] = GLOBSTAR;\n                }\n            });\n            return pp.filter(p => p !== GLOBSTAR).join('/');\n        })\n            .join('|');\n        // need to wrap in parens if we had more than one thing with |,\n        // otherwise only the first will be anchored to ^ and the last to $\n        const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', ''];\n        // must match entire pattern\n        // ending in a * or ** will make it less strict.\n        re = '^' + open + re + close + '$';\n        // can match anything, as long as it's not this.\n        if (this.negate)\n            re = '^(?!' + re + ').+$';\n        try {\n            this.regexp = new RegExp(re, [...flags].join(''));\n            /* c8 ignore start */\n        }\n        catch (ex) {\n            // should be impossible\n            this.regexp = false;\n        }\n        /* c8 ignore stop */\n        return this.regexp;\n    }\n    slashSplit(p) {\n        // if p starts with // on windows, we preserve that\n        // so that UNC paths aren't broken.  Otherwise, any number of\n        // / characters are coalesced into one, unless\n        // preserveMultipleSlashes is set to true.\n        if (this.preserveMultipleSlashes) {\n            return p.split('/');\n        }\n        else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n            // add an extra '' for the one we lose\n            return ['', ...p.split(/\\/+/)];\n        }\n        else {\n            return p.split(/\\/+/);\n        }\n    }\n    match(f, partial = this.partial) {\n        this.debug('match', f, this.pattern);\n        // short-circuit in the case of busted things.\n        // comments, etc.\n        if (this.comment) {\n            return false;\n        }\n        if (this.empty) {\n            return f === '';\n        }\n        if (f === '/' && partial) {\n            return true;\n        }\n        const options = this.options;\n        // windows: need to use /, not \\\n        if (this.isWindows) {\n            f = f.split('\\\\').join('/');\n        }\n        // treat the test path as a set of pathparts.\n        const ff = this.slashSplit(f);\n        this.debug(this.pattern, 'split', ff);\n        // just ONE of the pattern sets in this.set needs to match\n        // in order for it to be valid.  If negating, then just one\n        // match means that we have failed.\n        // Either way, return on the first hit.\n        const set = this.set;\n        this.debug(this.pattern, 'set', set);\n        // Find the basename of the path by looking for the last non-empty segment\n        let filename = ff[ff.length - 1];\n        if (!filename) {\n            for (let i = ff.length - 2; !filename && i >= 0; i--) {\n                filename = ff[i];\n            }\n        }\n        for (let i = 0; i < set.length; i++) {\n            const pattern = set[i];\n            let file = ff;\n            if (options.matchBase && pattern.length === 1) {\n                file = [filename];\n            }\n            const hit = this.matchOne(file, pattern, partial);\n            if (hit) {\n                if (options.flipNegate) {\n                    return true;\n                }\n                return !this.negate;\n            }\n        }\n        // didn't get any hits.  this is success if it's a negative\n        // pattern, failure otherwise.\n        if (options.flipNegate) {\n            return false;\n        }\n        return this.negate;\n    }\n    static defaults(def) {\n        return minimatch.defaults(def).Minimatch;\n    }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js';\nexport { escape } from './escape.js';\nexport { unescape } from './unescape.js';\n/* c8 ignore stop */\nminimatch.AST = AST;\nminimatch.Minimatch = Minimatch;\nminimatch.escape = escape;\nminimatch.unescape = unescape;\n//# sourceMappingURL=index.js.map","import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (!matched) continue\n        globParts[i] = matched\n        globParts[j] = []\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice( pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    return fastTest ? Object.assign(re, { test: fastTest }) : re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n","var balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m) return [str];\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  if (/\\$$/.test(m.pre)) {    \n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre+ '{' + m.body + '}' + post[k];\n      expansions.push(expansion);\n    }\n  } else {\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isSequence = isNumericSequence || isAlphaSequence;\n    var isOptions = m.body.indexOf(',') >= 0;\n    if (!isSequence && !isOptions) {\n      // {a},b}\n      if (m.post.match(/,.*\\}/)) {\n        str = m.pre + '{' + m.body + escClose + m.post;\n        return expand(str);\n      }\n      return [str];\n    }\n\n    var n;\n    if (isSequence) {\n      n = m.body.split(/\\.\\./);\n    } else {\n      n = parseCommaParts(m.body);\n      if (n.length === 1) {\n        // x{{a,b}}y ==> x{a}y x{b}y\n        n = expand(n[0], false).map(embrace);\n        if (n.length === 1) {\n          return post.map(function(p) {\n            return m.pre + n[0] + p;\n          });\n        }\n      }\n    }\n\n    // at this point, n is the parts, and we know it's not a comma set\n    // with a single entry.\n    var N;\n\n    if (isSequence) {\n      var x = numeric(n[0]);\n      var y = numeric(n[1]);\n      var width = Math.max(n[0].length, n[1].length)\n      var incr = n.length == 3\n        ? Math.abs(numeric(n[2]))\n        : 1;\n      var test = lte;\n      var reverse = y < x;\n      if (reverse) {\n        incr *= -1;\n        test = gte;\n      }\n      var pad = n.some(isPadded);\n\n      N = [];\n\n      for (var i = x; test(i, y); i += incr) {\n        var c;\n        if (isAlphaSequence) {\n          c = String.fromCharCode(i);\n          if (c === '\\\\')\n            c = '';\n        } else {\n          c = String(i);\n          if (pad) {\n            var need = width - c.length;\n            if (need > 0) {\n              var z = new Array(need + 1).join('0');\n              if (i < 0)\n                c = '-' + z + c.slice(1);\n              else\n                c = z + c;\n            }\n          }\n        }\n        N.push(c);\n      }\n    } else {\n      N = [];\n\n      for (var j = 0; j < n.length; j++) {\n        N.push.apply(N, expand(n[j], false));\n      }\n    }\n\n    for (var j = 0; j < N.length; j++) {\n      for (var k = 0; k < post.length; k++) {\n        var expansion = pre + N[j] + post[k];\n        if (!isTop || isSequence || expansion)\n          expansions.push(expansion);\n      }\n    }\n  }\n\n  return expansions;\n}\n\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","const MAX_PATTERN_LENGTH = 1024 * 64;\nexport const assertValidPattern = (pattern) => {\n    if (typeof pattern !== 'string') {\n        throw new TypeError('invalid pattern');\n    }\n    if (pattern.length > MAX_PATTERN_LENGTH) {\n        throw new TypeError('pattern is too long');\n    }\n};\n//# sourceMappingURL=assert-valid-pattern.js.map","const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n","// parse a single path portion\nimport { parseClass } from './brace-expressions.js';\nimport { unescape } from './unescape.js';\nconst types = new Set(['!', '?', '+', '*', '@']);\nconst isExtglobType = (c) => types.has(c);\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))';\nconst startNoDot = '(?!\\\\.)';\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.']);\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.']);\nconst reSpecials = new Set('().*{}+?[]^$\\\\!');\nconst regExpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n// any single thing other than /\nconst qmark = '[^/]';\n// * => any number of characters\nconst star = qmark + '*?';\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?';\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\nexport class AST {\n    type;\n    #root;\n    #hasMagic;\n    #uflag = false;\n    #parts = [];\n    #parent;\n    #parentIndex;\n    #negs;\n    #filledNegs = false;\n    #options;\n    #toString;\n    // set to true if it's an extglob with no children\n    // (which really means one child of '')\n    #emptyExt = false;\n    constructor(type, parent, options = {}) {\n        this.type = type;\n        // extglobs are inherently magical\n        if (type)\n            this.#hasMagic = true;\n        this.#parent = parent;\n        this.#root = this.#parent ? this.#parent.#root : this;\n        this.#options = this.#root === this ? options : this.#root.#options;\n        this.#negs = this.#root === this ? [] : this.#root.#negs;\n        if (type === '!' && !this.#root.#filledNegs)\n            this.#negs.push(this);\n        this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0;\n    }\n    get hasMagic() {\n        /* c8 ignore start */\n        if (this.#hasMagic !== undefined)\n            return this.#hasMagic;\n        /* c8 ignore stop */\n        for (const p of this.#parts) {\n            if (typeof p === 'string')\n                continue;\n            if (p.type || p.hasMagic)\n                return (this.#hasMagic = true);\n        }\n        // note: will be undefined until we generate the regexp src and find out\n        return this.#hasMagic;\n    }\n    // reconstructs the pattern\n    toString() {\n        if (this.#toString !== undefined)\n            return this.#toString;\n        if (!this.type) {\n            return (this.#toString = this.#parts.map(p => String(p)).join(''));\n        }\n        else {\n            return (this.#toString =\n                this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')');\n        }\n    }\n    #fillNegs() {\n        /* c8 ignore start */\n        if (this !== this.#root)\n            throw new Error('should only call on root');\n        if (this.#filledNegs)\n            return this;\n        /* c8 ignore stop */\n        // call toString() once to fill this out\n        this.toString();\n        this.#filledNegs = true;\n        let n;\n        while ((n = this.#negs.pop())) {\n            if (n.type !== '!')\n                continue;\n            // walk up the tree, appending everthing that comes AFTER parentIndex\n            let p = n;\n            let pp = p.#parent;\n            while (pp) {\n                for (let i = p.#parentIndex + 1; !pp.type && i < pp.#parts.length; i++) {\n                    for (const part of n.#parts) {\n                        /* c8 ignore start */\n                        if (typeof part === 'string') {\n                            throw new Error('string part in extglob AST??');\n                        }\n                        /* c8 ignore stop */\n                        part.copyIn(pp.#parts[i]);\n                    }\n                }\n                p = pp;\n                pp = p.#parent;\n            }\n        }\n        return this;\n    }\n    push(...parts) {\n        for (const p of parts) {\n            if (p === '')\n                continue;\n            /* c8 ignore start */\n            if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n                throw new Error('invalid part: ' + p);\n            }\n            /* c8 ignore stop */\n            this.#parts.push(p);\n        }\n    }\n    toJSON() {\n        const ret = this.type === null\n            ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n            : [this.type, ...this.#parts.map(p => p.toJSON())];\n        if (this.isStart() && !this.type)\n            ret.unshift([]);\n        if (this.isEnd() &&\n            (this === this.#root ||\n                (this.#root.#filledNegs && this.#parent?.type === '!'))) {\n            ret.push({});\n        }\n        return ret;\n    }\n    isStart() {\n        if (this.#root === this)\n            return true;\n        // if (this.type) return !!this.#parent?.isStart()\n        if (!this.#parent?.isStart())\n            return false;\n        if (this.#parentIndex === 0)\n            return true;\n        // if everything AHEAD of this is a negation, then it's still the \"start\"\n        const p = this.#parent;\n        for (let i = 0; i < this.#parentIndex; i++) {\n            const pp = p.#parts[i];\n            if (!(pp instanceof AST && pp.type === '!')) {\n                return false;\n            }\n        }\n        return true;\n    }\n    isEnd() {\n        if (this.#root === this)\n            return true;\n        if (this.#parent?.type === '!')\n            return true;\n        if (!this.#parent?.isEnd())\n            return false;\n        if (!this.type)\n            return this.#parent?.isEnd();\n        // if not root, it'll always have a parent\n        /* c8 ignore start */\n        const pl = this.#parent ? this.#parent.#parts.length : 0;\n        /* c8 ignore stop */\n        return this.#parentIndex === pl - 1;\n    }\n    copyIn(part) {\n        if (typeof part === 'string')\n            this.push(part);\n        else\n            this.push(part.clone(this));\n    }\n    clone(parent) {\n        const c = new AST(this.type, parent);\n        for (const p of this.#parts) {\n            c.copyIn(p);\n        }\n        return c;\n    }\n    static #parseAST(str, ast, pos, opt) {\n        let escaping = false;\n        let inBrace = false;\n        let braceStart = -1;\n        let braceNeg = false;\n        if (ast.type === null) {\n            // outside of a extglob, append until we find a start\n            let i = pos;\n            let acc = '';\n            while (i < str.length) {\n                const c = str.charAt(i++);\n                // still accumulate escapes at this point, but we do ignore\n                // starts that are escaped\n                if (escaping || c === '\\\\') {\n                    escaping = !escaping;\n                    acc += c;\n                    continue;\n                }\n                if (inBrace) {\n                    if (i === braceStart + 1) {\n                        if (c === '^' || c === '!') {\n                            braceNeg = true;\n                        }\n                    }\n                    else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n                        inBrace = false;\n                    }\n                    acc += c;\n                    continue;\n                }\n                else if (c === '[') {\n                    inBrace = true;\n                    braceStart = i;\n                    braceNeg = false;\n                    acc += c;\n                    continue;\n                }\n                if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n                    ast.push(acc);\n                    acc = '';\n                    const ext = new AST(c, ast);\n                    i = AST.#parseAST(str, ext, i, opt);\n                    ast.push(ext);\n                    continue;\n                }\n                acc += c;\n            }\n            ast.push(acc);\n            return i;\n        }\n        // some kind of extglob, pos is at the (\n        // find the next | or )\n        let i = pos + 1;\n        let part = new AST(null, ast);\n        const parts = [];\n        let acc = '';\n        while (i < str.length) {\n            const c = str.charAt(i++);\n            // still accumulate escapes at this point, but we do ignore\n            // starts that are escaped\n            if (escaping || c === '\\\\') {\n                escaping = !escaping;\n                acc += c;\n                continue;\n            }\n            if (inBrace) {\n                if (i === braceStart + 1) {\n                    if (c === '^' || c === '!') {\n                        braceNeg = true;\n                    }\n                }\n                else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n                    inBrace = false;\n                }\n                acc += c;\n                continue;\n            }\n            else if (c === '[') {\n                inBrace = true;\n                braceStart = i;\n                braceNeg = false;\n                acc += c;\n                continue;\n            }\n            if (isExtglobType(c) && str.charAt(i) === '(') {\n                part.push(acc);\n                acc = '';\n                const ext = new AST(c, part);\n                part.push(ext);\n                i = AST.#parseAST(str, ext, i, opt);\n                continue;\n            }\n            if (c === '|') {\n                part.push(acc);\n                acc = '';\n                parts.push(part);\n                part = new AST(null, ast);\n                continue;\n            }\n            if (c === ')') {\n                if (acc === '' && ast.#parts.length === 0) {\n                    ast.#emptyExt = true;\n                }\n                part.push(acc);\n                acc = '';\n                ast.push(...parts, part);\n                return i;\n            }\n            acc += c;\n        }\n        // unfinished extglob\n        // if we got here, it was a malformed extglob! not an extglob, but\n        // maybe something else in there.\n        ast.type = null;\n        ast.#hasMagic = undefined;\n        ast.#parts = [str.substring(pos - 1)];\n        return i;\n    }\n    static fromGlob(pattern, options = {}) {\n        const ast = new AST(null, undefined, options);\n        AST.#parseAST(pattern, ast, 0, options);\n        return ast;\n    }\n    // returns the regular expression if there's magic, or the unescaped\n    // string if not.\n    toMMPattern() {\n        // should only be called on root\n        /* c8 ignore start */\n        if (this !== this.#root)\n            return this.#root.toMMPattern();\n        /* c8 ignore stop */\n        const glob = this.toString();\n        const [re, body, hasMagic, uflag] = this.toRegExpSource();\n        // if we're in nocase mode, and not nocaseMagicOnly, then we do\n        // still need a regular expression if we have to case-insensitively\n        // match capital/lowercase characters.\n        const anyMagic = hasMagic ||\n            this.#hasMagic ||\n            (this.#options.nocase &&\n                !this.#options.nocaseMagicOnly &&\n                glob.toUpperCase() !== glob.toLowerCase());\n        if (!anyMagic) {\n            return body;\n        }\n        const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '');\n        return Object.assign(new RegExp(`^${re}$`, flags), {\n            _src: re,\n            _glob: glob,\n        });\n    }\n    // returns the string match, the regexp source, whether there's magic\n    // in the regexp (so a regular expression is required) and whether or\n    // not the uflag is needed for the regular expression (for posix classes)\n    // TODO: instead of injecting the start/end at this point, just return\n    // the BODY of the regexp, along with the start/end portions suitable\n    // for binding the start/end in either a joined full-path makeRe context\n    // (where we bind to (^|/), or a standalone matchPart context (where\n    // we bind to ^, and not /).  Otherwise slashes get duped!\n    //\n    // In part-matching mode, the start is:\n    // - if not isStart: nothing\n    // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n    // - if dots allowed or not possible: ^\n    // - if dots possible and not allowed: ^(?!\\.)\n    // end is:\n    // - if not isEnd(): nothing\n    // - else: $\n    //\n    // In full-path matching mode, we put the slash at the START of the\n    // pattern, so start is:\n    // - if first pattern: same as part-matching mode\n    // - if not isStart(): nothing\n    // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n    // - if dots allowed or not possible: /\n    // - if dots possible and not allowed: /(?!\\.)\n    // end is:\n    // - if last pattern, same as part-matching mode\n    // - else nothing\n    //\n    // Always put the (?:$|/) on negated tails, though, because that has to be\n    // there to bind the end of the negated pattern portion, and it's easier to\n    // just stick it in now rather than try to inject it later in the middle of\n    // the pattern.\n    //\n    // We can just always return the same end, and leave it up to the caller\n    // to know whether it's going to be used joined or in parts.\n    // And, if the start is adjusted slightly, can do the same there:\n    // - if not isStart: nothing\n    // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n    // - if dots allowed or not possible: (?:/|^)\n    // - if dots possible and not allowed: (?:/|^)(?!\\.)\n    //\n    // But it's better to have a simpler binding without a conditional, for\n    // performance, so probably better to return both start options.\n    //\n    // Then the caller just ignores the end if it's not the first pattern,\n    // and the start always gets applied.\n    //\n    // But that's always going to be $ if it's the ending pattern, or nothing,\n    // so the caller can just attach $ at the end of the pattern when building.\n    //\n    // So the todo is:\n    // - better detect what kind of start is needed\n    // - return both flavors of starting pattern\n    // - attach $ at the end of the pattern when creating the actual RegExp\n    //\n    // Ah, but wait, no, that all only applies to the root when the first pattern\n    // is not an extglob. If the first pattern IS an extglob, then we need all\n    // that dot prevention biz to live in the extglob portions, because eg\n    // +(*|.x*) can match .xy but not .yx.\n    //\n    // So, return the two flavors if it's #root and the first child is not an\n    // AST, otherwise leave it to the child AST to handle it, and there,\n    // use the (?:^|/) style of start binding.\n    //\n    // Even simplified further:\n    // - Since the start for a join is eg /(?!\\.) and the start for a part\n    // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n    // or start or whatever) and prepend ^ or / at the Regexp construction.\n    toRegExpSource(allowDot) {\n        const dot = allowDot ?? !!this.#options.dot;\n        if (this.#root === this)\n            this.#fillNegs();\n        if (!this.type) {\n            const noEmpty = this.isStart() && this.isEnd();\n            const src = this.#parts\n                .map(p => {\n                const [re, _, hasMagic, uflag] = typeof p === 'string'\n                    ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n                    : p.toRegExpSource(allowDot);\n                this.#hasMagic = this.#hasMagic || hasMagic;\n                this.#uflag = this.#uflag || uflag;\n                return re;\n            })\n                .join('');\n            let start = '';\n            if (this.isStart()) {\n                if (typeof this.#parts[0] === 'string') {\n                    // this is the string that will match the start of the pattern,\n                    // so we need to protect against dots and such.\n                    // '.' and '..' cannot match unless the pattern is that exactly,\n                    // even if it starts with . or dot:true is set.\n                    const dotTravAllowed = this.#parts.length === 1 && justDots.has(this.#parts[0]);\n                    if (!dotTravAllowed) {\n                        const aps = addPatternStart;\n                        // check if we have a possibility of matching . or ..,\n                        // and prevent that.\n                        const needNoTrav = \n                        // dots are allowed, and the pattern starts with [ or .\n                        (dot && aps.has(src.charAt(0))) ||\n                            // the pattern starts with \\., and then [ or .\n                            (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n                            // the pattern starts with \\.\\., and then [ or .\n                            (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)));\n                        // no need to prevent dots if it can't match a dot, or if a\n                        // sub-pattern will be preventing it anyway.\n                        const needNoDot = !dot && !allowDot && aps.has(src.charAt(0));\n                        start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : '';\n                    }\n                }\n            }\n            // append the \"end of path portion\" pattern to negation tails\n            let end = '';\n            if (this.isEnd() &&\n                this.#root.#filledNegs &&\n                this.#parent?.type === '!') {\n                end = '(?:$|\\\\/)';\n            }\n            const final = start + src + end;\n            return [\n                final,\n                unescape(src),\n                (this.#hasMagic = !!this.#hasMagic),\n                this.#uflag,\n            ];\n        }\n        // We need to calculate the body *twice* if it's a repeat pattern\n        // at the start, once in nodot mode, then again in dot mode, so a\n        // pattern like *(?) can match 'x.y'\n        const repeated = this.type === '*' || this.type === '+';\n        // some kind of extglob\n        const start = this.type === '!' ? '(?:(?!(?:' : '(?:';\n        let body = this.#partsToRegExp(dot);\n        if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n            // invalid extglob, has to at least be *something* present, if it's\n            // the entire path portion.\n            const s = this.toString();\n            this.#parts = [s];\n            this.type = null;\n            this.#hasMagic = undefined;\n            return [s, unescape(this.toString()), false, false];\n        }\n        // XXX abstract out this map method\n        let bodyDotAllowed = !repeated || allowDot || dot || !startNoDot\n            ? ''\n            : this.#partsToRegExp(true);\n        if (bodyDotAllowed === body) {\n            bodyDotAllowed = '';\n        }\n        if (bodyDotAllowed) {\n            body = `(?:${body})(?:${bodyDotAllowed})*?`;\n        }\n        // an empty !() is exactly equivalent to a starNoEmpty\n        let final = '';\n        if (this.type === '!' && this.#emptyExt) {\n            final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty;\n        }\n        else {\n            const close = this.type === '!'\n                ? // !() must match something,but !(x) can match ''\n                    '))' +\n                        (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n                        star +\n                        ')'\n                : this.type === '@'\n                    ? ')'\n                    : this.type === '?'\n                        ? ')?'\n                        : this.type === '+' && bodyDotAllowed\n                            ? ')'\n                            : this.type === '*' && bodyDotAllowed\n                                ? `)?`\n                                : `)${this.type}`;\n            final = start + body + close;\n        }\n        return [\n            final,\n            unescape(body),\n            (this.#hasMagic = !!this.#hasMagic),\n            this.#uflag,\n        ];\n    }\n    #partsToRegExp(dot) {\n        return this.#parts\n            .map(p => {\n            // extglob ASTs should only contain parent ASTs\n            /* c8 ignore start */\n            if (typeof p === 'string') {\n                throw new Error('string type in extglob ast??');\n            }\n            /* c8 ignore stop */\n            // can ignore hasMagic, because extglobs are already always magic\n            const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot);\n            this.#uflag = this.#uflag || uflag;\n            return re;\n        })\n            .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n            .join('|');\n    }\n    static #parseGlob(glob, hasMagic, noEmpty = false) {\n        let escaping = false;\n        let re = '';\n        let uflag = false;\n        for (let i = 0; i < glob.length; i++) {\n            const c = glob.charAt(i);\n            if (escaping) {\n                escaping = false;\n                re += (reSpecials.has(c) ? '\\\\' : '') + c;\n                continue;\n            }\n            if (c === '\\\\') {\n                if (i === glob.length - 1) {\n                    re += '\\\\\\\\';\n                }\n                else {\n                    escaping = true;\n                }\n                continue;\n            }\n            if (c === '[') {\n                const [src, needUflag, consumed, magic] = parseClass(glob, i);\n                if (consumed) {\n                    re += src;\n                    uflag = uflag || needUflag;\n                    i += consumed - 1;\n                    hasMagic = hasMagic || magic;\n                    continue;\n                }\n            }\n            if (c === '*') {\n                if (noEmpty && glob === '*')\n                    re += starNoEmpty;\n                else\n                    re += star;\n                hasMagic = true;\n                continue;\n            }\n            if (c === '?') {\n                re += qmark;\n                hasMagic = true;\n                continue;\n            }\n            re += regExpEscape(c);\n        }\n        return [re, unescape(glob), !!hasMagic, uflag];\n    }\n}\n//# sourceMappingURL=ast.js.map","// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n","// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses = {\n    '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n    '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n    '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n    '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n    '[:cntrl:]': ['\\\\p{Cc}', true],\n    '[:digit:]': ['\\\\p{Nd}', true],\n    '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n    '[:lower:]': ['\\\\p{Ll}', true],\n    '[:print:]': ['\\\\p{C}', true],\n    '[:punct:]': ['\\\\p{P}', true],\n    '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n    '[:upper:]': ['\\\\p{Lu}', true],\n    '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n    '[:xdigit:]': ['A-Fa-f0-9', false],\n};\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s) => s.replace(/[[\\]\\\\-]/g, '\\\\$&');\n// escape all regexp magic characters\nconst regexpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges) => ranges.join('');\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (glob, position) => {\n    const pos = position;\n    /* c8 ignore start */\n    if (glob.charAt(pos) !== '[') {\n        throw new Error('not in a brace expression');\n    }\n    /* c8 ignore stop */\n    const ranges = [];\n    const negs = [];\n    let i = pos + 1;\n    let sawStart = false;\n    let uflag = false;\n    let escaping = false;\n    let negate = false;\n    let endPos = pos;\n    let rangeStart = '';\n    WHILE: while (i < glob.length) {\n        const c = glob.charAt(i);\n        if ((c === '!' || c === '^') && i === pos + 1) {\n            negate = true;\n            i++;\n            continue;\n        }\n        if (c === ']' && sawStart && !escaping) {\n            endPos = i + 1;\n            break;\n        }\n        sawStart = true;\n        if (c === '\\\\') {\n            if (!escaping) {\n                escaping = true;\n                i++;\n                continue;\n            }\n            // escaped \\ char, fall through and treat like normal char\n        }\n        if (c === '[' && !escaping) {\n            // either a posix class, a collation equivalent, or just a [\n            for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n                if (glob.startsWith(cls, i)) {\n                    // invalid, [a-[] is fine, but not [a-[:alpha]]\n                    if (rangeStart) {\n                        return ['$.', false, glob.length - pos, true];\n                    }\n                    i += cls.length;\n                    if (neg)\n                        negs.push(unip);\n                    else\n                        ranges.push(unip);\n                    uflag = uflag || u;\n                    continue WHILE;\n                }\n            }\n        }\n        // now it's just a normal character, effectively\n        escaping = false;\n        if (rangeStart) {\n            // throw this range away if it's not valid, but others\n            // can still match.\n            if (c > rangeStart) {\n                ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c));\n            }\n            else if (c === rangeStart) {\n                ranges.push(braceEscape(c));\n            }\n            rangeStart = '';\n            i++;\n            continue;\n        }\n        // now might be the start of a range.\n        // can be either c-d or c-] or c<more...>] or c] at this point\n        if (glob.startsWith('-]', i + 1)) {\n            ranges.push(braceEscape(c + '-'));\n            i += 2;\n            continue;\n        }\n        if (glob.startsWith('-', i + 1)) {\n            rangeStart = c;\n            i += 2;\n            continue;\n        }\n        // not the start of a range, just a single character\n        ranges.push(braceEscape(c));\n        i++;\n    }\n    if (endPos < i) {\n        // didn't see the end of the class, not a valid class,\n        // but might still be valid as a literal match.\n        return ['', false, 0, false];\n    }\n    // if we got no ranges and no negates, then we have a range that\n    // cannot possibly match anything, and that poisons the whole glob\n    if (!ranges.length && !negs.length) {\n        return ['$.', false, glob.length - pos, true];\n    }\n    // if we got one positive range, and it's a single character, then that's\n    // not actually a magic pattern, it's just that one literal character.\n    // we should not treat that as \"magic\", we should just return the literal\n    // character. [_] is a perfectly valid way to escape glob magic chars.\n    if (negs.length === 0 &&\n        ranges.length === 1 &&\n        /^\\\\?.$/.test(ranges[0]) &&\n        !negate) {\n        const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0];\n        return [regexpEscape(r), false, endPos - pos, false];\n    }\n    const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']';\n    const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']';\n    const comb = ranges.length && negs.length\n        ? '(' + sranges + '|' + snegs + ')'\n        : ranges.length\n            ? sranges\n            : snegs;\n    return [comb, uflag, endPos - pos, true];\n};\n//# sourceMappingURL=brace-expressions.js.map","// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n","/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (s, { windowsPathsNoEscape = false, } = {}) => {\n    return windowsPathsNoEscape\n        ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n        : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1');\n};\n//# sourceMappingURL=unescape.js.map","import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n","/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (s, { windowsPathsNoEscape = false, } = {}) => {\n    // don't need to escape +@! because we escape the parens\n    // that make those magic, and escaping ! as [!] isn't valid,\n    // because [!]] is a valid glob class meaning not ']'.\n    return windowsPathsNoEscape\n        ? s.replace(/[?*()[\\]]/g, '[$&]')\n        : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&');\n};\n//# sourceMappingURL=escape.js.map","import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import githubLogoSvg from 'bundle-text:../../img/github-logo.svg';\nimport srgssrLogo from '../../img/srgssr-logo.png';\nimport Pillarbox from '../../../src/pillarbox';\nimport { html, LitElement, unsafeCSS } from 'lit';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\nimport '../router/route-link-component';\nimport { theme } from '../theme/theme';\nimport headerCSS from 'bundle-text:./header-component.scss';\nimport router from '../router/router';\n\n/**\n * A web component that represents the header element of the demo page.\n *\n * @element pbw-header\n */\nexport class HeaderElement extends LitElement {\n  static properties = {\n    debug: { type: Boolean, state: true }\n  };\n  static styles = [theme, unsafeCSS(headerCSS)];\n\n  #onRouteUpdated = ({ detail: { queryParams }}) => {\n    this.debug = queryParams.debug === 'true';\n  };\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.debug = router.queryParams.debug === 'true';\n    router.addEventListener('routechanged', this.#onRouteUpdated);\n    router.addEventListener('queryparams', this.#onRouteUpdated);\n  }\n\n  disconnectedCallback() {\n    router.removeEventListener('routechanged', this.#onRouteUpdated);\n    router.removeEventListener('queryparams', this.#onRouteUpdated);\n  }\n\n  render() {\n    return html`\n      <header>\n        <h1>\n          <img class=\"pbw-logo\" src=\"${srgssrLogo}\"/>\n          <span>Pillarbox</span>\n          <span class=\"version-txt\">${Pillarbox.VERSION.pillarbox}</span>\n        </h1>\n        <a href=\"https://github.com/srgssr/pillarbox-web\" class=\"github-link\" title=\"Source on Github\">\n          ${unsafeSVG(githubLogoSvg)}\n        </a>\n      </header>\n      <nav>\n        <ul>\n          <li>\n            <route-link href=\"examples${this.debug ? '?debug=true' : ''}\">Examples</route-link>\n          </li>\n          <li>\n            <route-link href=\"search${this.debug ? '?debug=true' : ''}\">Search</route-link>\n          </li>\n          <li>\n            <route-link href=\"lists${this.debug ? '?debug=true' : ''}\">Lists</route-link>\n          </li>\n          <li>\n            <route-link href=\"settings${this.debug ? '?debug=true' : ''}\">Settings</route-link>\n          </li>\n        </ul>\n      </nav>\n    `;\n  }\n}\n\ncustomElements.define('pbw-header', HeaderElement);\n","module.exports = \"100b69e451edc70f\";","module.exports = new __parcel__URL__(\"srgssr-logo.45edb509.png\").toString();","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,adoptStyles,css,getCompatibleStyle,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:r,getOwnPropertyNames:h,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),y={attribute:!0,type:String,converter:u,reflect:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class b extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=y){if(s.state&&(s.attribute=!1),this._$Ei(),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),r=this.getPropertyDescriptor(t,i,s);void 0!==r&&e(this.prototype,t,r)}}static getPropertyDescriptor(t,s,i){const{get:e,set:h}=r(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get(){return e?.call(this)},set(s){const r=e?.call(this);h.call(this,s),this.requestUpdate(t,r,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??y}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...h(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$Eg=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$ES(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$E_??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$E_?.delete(t)}_$ES(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$E_?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$E_?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$EO(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const r=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==r?this.removeAttribute(e):this.setAttribute(e,r),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),r=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=r.fromAttribute(s,t.type),this._$Em=null}}requestUpdate(t,s,i,e=!1,r){if(void 0!==t){if(i??=this.constructor.getPropertyOptions(t),!(i.hasChanged??f)(e?r:this[t],s))return;this.C(t,s,i)}!1===this.isUpdatePending&&(this._$Eg=this._$EP())}C(t,s,i){this._$AL.has(t)||this._$AL.set(t,s),!0===i.reflect&&this._$Em!==t&&(this._$Ej??=new Set).add(t)}async _$EP(){this.isUpdatePending=!0;try{await this._$Eg}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t)!0!==i.wrapped||this._$AL.has(s)||void 0===this[s]||this.C(s,this[s],i)}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$E_?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$ET()}catch(s){throw t=!1,this._$ET(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$E_?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$ET(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$Eg}shouldUpdate(t){return!0}update(t){this._$Ej&&=this._$Ej.forEach((t=>this._$EO(t,this[t]))),this._$ET()}updated(t){}firstUpdated(t){}}b.elementStyles=[],b.shadowRootOptions={mode:\"open\"},b[d(\"elementProperties\")]=new Map,b[d(\"finalized\")]=new Map,p?.({ReactiveElement:b}),(a.reactiveElementVersions??=[]).push(\"2.0.2\");export{b as ReactiveElement,u as defaultConverter,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n/**\n * Removes the `readonly` modifier from properties in the union K.\n *\n * This is a safer way to cast a value to a type with a mutable version of a\n * readonly field, than casting to an interface with the field re-declared\n * because it preserves the type of all the fields and warns on typos.\n */\ntype Mutable<T, K extends keyof T> = Omit<T, K> & {\n  -readonly [P in keyof Pick<T, K>]: P extends K ? T[P] : never;\n};\n\n// TODO (justinfagnani): Add `hasOwn` here when we ship ES2022\nconst {\n  is,\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getOwnPropertySymbols,\n  getPrototypeOf,\n} = Object;\n\nconst NODE_MODE = false;\n\n// Lets a minifier replace globalThis references with a minified name\nconst global = globalThis;\n\nif (NODE_MODE) {\n  global.customElements ??= customElements;\n}\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> = (global.litIssuedWarnings ??=\n    new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n\n  /**\n   * Whether this property is wrapping accessors. This is set by `@property`\n   * to control the initial value change and reflection logic.\n   *\n   * @internal\n   */\n  wrapped?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K] | undefined;\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean =>\n  !is(value, old);\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind =\n  | 'change-in-update'\n  | 'migration'\n  | 'async-perform-update';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n// Temporary, until google3 is on TypeScript 5.2\ndeclare global {\n  interface SymbolConstructor {\n    readonly metadata: unique symbol;\n  }\n}\n\n// Ensure metadata is enabled. TypeScript does not polyfill\n// Symbol.metadata, so we must ensure that it exists.\n(Symbol as {metadata: symbol}).metadata ??= Symbol('metadata');\n\ndeclare global {\n  // This is public global API, do not change!\n  // eslint-disable-next-line no-var\n  var litPropertyMetadata: WeakMap<\n    object,\n    Map<PropertyKey, PropertyDeclaration>\n  >;\n}\n\n// Map from a class's metadata object to property options\n// Note that we must use nullish-coalescing assignment so that we only use one\n// map even if we load multiple version of this module.\nglobal.litPropertyMetadata ??= new WeakMap<\n  object,\n  Map<PropertyKey, PropertyDeclaration>\n>();\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclasses to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  // In the Node build, this `extends` clause will be substituted with\n  // `(globalThis.HTMLElement ?? HTMLElement)`.\n  //\n  // This way, we will first prefer any global `HTMLElement` polyfill that the\n  // user has assigned, and then fall back to the `HTMLElement` shim which has\n  // been imported (see note at the top of this file about how this import is\n  // generated by Rollup). Note that the `HTMLElement` variable has been\n  // shadowed by this import, so it no longer refers to the global.\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this.__prepare();\n    (this._initializers ??= []).push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having been finalized, which includes creating properties\n   * from `static properties`, but does *not* include all properties created\n   * from decorators.\n   * @nocollapse\n   */\n  protected static finalized: true | undefined;\n\n  /**\n   * Memoized list of all element properties, including any superclass\n   * properties. Created lazily on user subclasses when finalizing the class.\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * `nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated `<style>` elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // Ensure we've created all properties\n    this.finalize();\n    // this.__attributeToPropertyMap is only undefined after finalize() in\n    // ReactiveElement itself. ReactiveElement.observedAttributes is only\n    // accessed with ReactiveElement as the receiver when a subclass or mixin\n    // calls super.observedAttributes\n    return (\n      this.__attributeToPropertyMap && [...this.__attributeToPropertyMap.keys()]\n    );\n  }\n\n  private __instanceProperties?: PropertyValues = undefined;\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // If this is a state property, force the attribute to false.\n    if (options.state) {\n      (options as Mutable<PropertyDeclaration, 'attribute'>).attribute = false;\n    }\n    this.__prepare();\n    this.elementProperties.set(name, options);\n    if (!options.noAccessor) {\n      const key = DEV_MODE\n        ? // Use Symbol.for in dev mode to make it easier to maintain state\n          // when doing HMR.\n          Symbol.for(`${String(name)} (@property() cache)`)\n        : Symbol();\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        defineProperty(this.prototype, name, descriptor);\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    const {get, set} = getOwnPropertyDescriptor(this.prototype, name) ?? {\n      get(this: ReactiveElement) {\n        return this[key as keyof typeof this];\n      },\n      set(this: ReactiveElement, v: unknown) {\n        (this as unknown as Record<string | symbol, unknown>)[key] = v;\n      },\n    };\n    if (DEV_MODE && get == null) {\n      if ('value' in (getOwnPropertyDescriptor(this.prototype, name) ?? {})) {\n        throw new Error(\n          `Field ${JSON.stringify(String(name))} on ` +\n            `${this.name} was declared as a reactive property ` +\n            `but it's actually declared as a value on the prototype. ` +\n            `Usually this is due to using @property or @state on a method.`\n        );\n      }\n      issueWarning(\n        'reactive-property-without-getter',\n        `Field ${JSON.stringify(String(name))} on ` +\n          `${this.name} was declared as a reactive property ` +\n          `but it does not have a getter. This will be an error in a ` +\n          `future version of Lit.`\n      );\n    }\n    return {\n      get(this: ReactiveElement) {\n        return get?.call(this);\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = get?.call(this);\n        set!.call(this, value);\n        this.requestUpdate(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) ?? defaultPropertyDeclaration;\n  }\n\n  // Temporary, until google3 is on TypeScript 5.2\n  declare static [Symbol.metadata]: object & Record<PropertyKey, unknown>;\n\n  /**\n   * Initializes static own properties of the class used in bookkeeping\n   * for element properties, initializers, etc.\n   *\n   * Can be called multiple times by code that needs to ensure these\n   * properties exist before using them.\n   *\n   * This method ensures the superclass is finalized so that inherited\n   * property metadata can be copied down.\n   * @nocollapse\n   */\n  private static __prepare() {\n    if (\n      this.hasOwnProperty(JSCompiler_renameProperty('elementProperties', this))\n    ) {\n      // Already prepared\n      return;\n    }\n    // Finalize any superclasses\n    const superCtor = getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    // Initialize elementProperties from the superclass\n    this.elementProperties = new Map(superCtor.elementProperties);\n  }\n\n  /**\n   * Finishes setting up the class so that it's ready to be registered\n   * as a custom element and instantiated.\n   *\n   * This method is called by the ReactiveElement.observedAttributes getter.\n   * If you override the observedAttributes getter, you must either call\n   * super.observedAttributes to trigger finalization, or call finalize()\n   * yourself.\n   *\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this))) {\n      return;\n    }\n    this.finalized = true;\n    this.__prepare();\n\n    // Create properties from the static properties block:\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      const propKeys = [\n        ...getOwnPropertyNames(props),\n        ...getOwnPropertySymbols(props),\n      ] as Array<keyof typeof props>;\n      for (const p of propKeys) {\n        this.createProperty(p, props[p]);\n      }\n    }\n\n    // Create properties from standard decorator metadata:\n    const metadata = this[Symbol.metadata];\n    if (metadata !== null) {\n      const properties = litPropertyMetadata.get(metadata);\n      if (properties !== undefined) {\n        for (const [p, options] of properties) {\n          this.elementProperties.set(p, options);\n        }\n      }\n    }\n\n    // Create the attribute-to-property map\n    this.__attributeToPropertyMap = new Map();\n    for (const [p, options] of this.elementProperties) {\n      const attr = this.__attributeNameForProperty(p, options);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n      }\n    }\n\n    this.elementStyles = this.finalizeStyles(this.styles);\n\n    if (DEV_MODE) {\n      if (this.hasOwnProperty('createProperty')) {\n        issueWarning(\n          'no-override-create-property',\n          'Overriding ReactiveElement.createProperty() is deprecated. ' +\n            'The override will not be called with standard decorators'\n        );\n      }\n      if (this.hasOwnProperty('getPropertyDescriptor')) {\n        issueWarning(\n          'no-override-get-property-descriptor',\n          'Overriding ReactiveElement.getPropertyDescriptor() is deprecated. ' +\n            'The override will not be called with standard decorators'\n        );\n      }\n    }\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | DocumentFragment;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Set<PropertyKey>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: Set<ReactiveController>;\n\n  constructor() {\n    super();\n    this.__initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   */\n  private __initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    // This enqueues a microtask that ust run before the first update, so it\n    // must be called before requestUpdate()\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= new Set()).add(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    this.__controllers?.delete(controller);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    const instanceProperties = new Map<PropertyKey, unknown>();\n    const elementProperties = (this.constructor as typeof ReactiveElement)\n      .elementProperties;\n    for (const p of elementProperties.keys() as IterableIterator<keyof this>) {\n      if (this.hasOwnProperty(p)) {\n        instanceProperties.set(p, this[p]);\n        delete this[p];\n      }\n    }\n    if (instanceProperties.size > 0) {\n      this.__instanceProperties = instanceProperties;\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // Create renderRoot before controllers `hostConnected`\n    (this as Mutable<typeof this, 'renderRoot'>).renderRoot ??=\n      this.createRenderRoot();\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(name: PropertyKey, value: unknown) {\n    const elemProperties: PropertyDeclarationMap = (\n      this.constructor as typeof ReactiveElement\n    ).elementProperties;\n    const options = elemProperties.get(name)!;\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n          'migration'\n        ) &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n          ? options.converter\n          : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      this[propName as keyof this] = converter.fromAttribute!(\n        value,\n        options.type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @param initial whether this call is for the initial value of the property.\n   *     Initial values do not reflect to an attribute.\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void;\n  /* @internal */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration,\n    initial = false,\n    initialValue?: unknown\n  ): void {\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options ??= (\n        this.constructor as typeof ReactiveElement\n      ).getPropertyOptions(name);\n      const hasChanged = options.hasChanged ?? notEqual;\n      const newValue = initial ? initialValue : this[name as keyof this];\n      if (hasChanged(newValue, oldValue)) {\n        this._$changeProperty(name, oldValue, options);\n      } else {\n        // Abort the request if the property should not be considered changed.\n        return;\n      }\n    }\n    if (this.isUpdatePending === false) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _$changeProperty(\n    name: PropertyKey,\n    oldValue: unknown,\n    options: PropertyDeclaration\n  ) {\n    // TODO (justinfagnani): Create a benchmark of Map.has() + Map.set(\n    // vs just Map.set()\n    if (!this._$changedProperties.has(name)) {\n      this._$changedProperties.set(name, oldValue);\n    }\n    // Add to reflecting properties set.\n    // Note, it's important that every change has a chance to add the\n    // property to `__reflectingProperties`. This ensures setting\n    // attribute + property reflects correctly.\n    if (options.reflect === true && this.__reflectingProperty !== name) {\n      (this.__reflectingProperties ??= new Set<PropertyKey>()).add(name);\n    }\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    const result = this.performUpdate();\n    if (\n      DEV_MODE &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n        'async-perform-update'\n      ) &&\n      typeof (result as unknown as Promise<unknown> | undefined)?.then ===\n        'function'\n    ) {\n      issueWarning(\n        'async-perform-update',\n        `Element ${this.localName} returned a Promise from performUpdate(). ` +\n          `This behavior is deprecated and will be removed in a future ` +\n          `version of ReactiveElement.`\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    if (!this.hasUpdated) {\n      // Create renderRoot before first update. This occurs in `connectedCallback`\n      // but is done here to support out of tree calls to `enableUpdating`/`performUpdate`.\n      (this as Mutable<typeof this, 'renderRoot'>).renderRoot ??=\n        this.createRenderRoot();\n      if (DEV_MODE) {\n        // Produce warning if any reactive properties on the prototype are\n        // shadowed by class fields. Instance fields set before upgrade are\n        // deleted by this point, so any own property is caused by class field\n        // initialization in the constructor.\n        const ctor = this.constructor as typeof ReactiveElement;\n        const shadowedProperties = [...ctor.elementProperties.keys()].filter(\n          (p) => this.hasOwnProperty(p) && p in getPrototypeOf(this)\n        );\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n      // Mixin instance properties once, if they exist.\n      if (this.__instanceProperties) {\n        // TODO (justinfagnani): should we use the stored value? Could a new value\n        // have been set since we stored the own property value?\n        for (const [p, value] of this.__instanceProperties) {\n          this[p as keyof this] = value as this[keyof this];\n        }\n        this.__instanceProperties = undefined;\n      }\n      // Trigger initial value reflection and populate the initial\n      // changedProperties map, but only for the case of experimental\n      // decorators on accessors, which will not have already populated the\n      // changedProperties map. We can't know if these accessors had\n      // initializers, so we just set them anyway - a difference from\n      // experimental decorators on fields and standard decorators on\n      // auto-accessors.\n      // For context why experimentalDecorators with auto accessors are handled\n      // specifically also see:\n      // https://github.com/lit/lit/pull/4183#issuecomment-1711959635\n      const elementProperties = (this.constructor as typeof ReactiveElement)\n        .elementProperties;\n      if (elementProperties.size > 0) {\n        for (const [p, options] of elementProperties) {\n          if (\n            options.wrapped === true &&\n            !this._$changedProperties.has(p) &&\n            this[p as keyof this] !== undefined\n          ) {\n            this._$changeProperty(p, this[p as keyof this], options);\n          }\n        }\n      }\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n        'change-in-update'\n      )\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    // The forEach() expression will only run when when __reflectingProperties is\n    // defined, and it returns undefined, setting __reflectingProperties to\n    // undefined\n    this.__reflectingProperties &&= this.__reflectingProperties.forEach((p) =>\n      this.__propertyToAttribute(p, this[p as keyof this])\n    ) as undefined;\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n// Assigned here to work around a jscompiler bug with static fields\n// when compiling to ES5.\n// https://github.com/google/closure-compiler/issues/3177\n(ReactiveElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('elementProperties', ReactiveElement)\n] = new Map();\n(ReactiveElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('finalized', ReactiveElement)\n] = new Map();\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = [\n    'change-in-update',\n    'async-perform-update',\n  ];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (!this.enabledWarnings!.includes(warning)) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('2.0.2');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    for (const s of styles) {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    }\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${(Math.random()+\"\").slice(9)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=Symbol.for(\"lit-noChange\"),T=Symbol.for(\"lit-nothing\"),A=new WeakMap,E=r.createTreeWalker(r,129);function C(t,i){if(!Array.isArray(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const P=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[C(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":\"\")),o]};class V{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=P(t,s);if(this.el=V.createElement(f,n),E.currentNode=this.el.content,2===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=E.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?k:\"?\"===e[1]?H:\"@\"===e[1]?I:R}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),E.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function N(t,i,s=t,e){if(i===w)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=N(t,h._$AS(t,i.values),h,e)),i}class S{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);E.currentNode=e;let h=E.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new M(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new L(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=E.nextNode(),o++)}return E.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class M{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=T,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=N(this,t,i),c(t)?t===T||null==t||\"\"===t?(this._$AH!==T&&this._$AR(),this._$AH=T):t!==this._$AH&&t!==w&&this._(t):void 0!==t._$litType$?this.g(t):void 0!==t.nodeType?this.$(t):u(t)?this.T(t):this._(t)}k(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}$(t){this._$AH!==t&&(this._$AR(),this._$AH=this.k(t))}_(t){this._$AH!==T&&c(this._$AH)?this._$AA.nextSibling.data=t:this.$(r.createTextNode(t)),this._$AH=t}g(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=V.createElement(C(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new S(e,this),s=t.u(this.options);t.p(i),this.$(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new V(t)),i}T(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new M(this.k(l()),this.k(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class R{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=T,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=T}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=N(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==w,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=N(this,e[s+n],i,n),r===w&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===T?t=T:t!==T&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.O(t)}O(t){t===T?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class k extends R{constructor(){super(...arguments),this.type=3}O(t){this.element[this.name]=t===T?void 0:t}}class H extends R{constructor(){super(...arguments),this.type=4}O(t){this.element.toggleAttribute(this.name,!!t&&t!==T)}}class I extends R{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=N(this,t,i,0)??T)===w)return;const s=this._$AH,e=t===T&&s!==T||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==T&&(s===T||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class L{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){N(this,t)}}const z={j:e,P:h,A:o,C:1,M:P,L:S,R:u,V:N,D:M,I:R,H,N:I,U:k,B:L},Z=t.litHtmlPolyfillSupport;Z?.(V,M),(t.litHtmlVersions??=[]).push(\"3.1.0\");const j=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new M(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{z as _$LH,x as html,w as noChange,T as nothing,j as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? (global.ShadyDOM!.wrap as <T extends Node>(node: T) => T)\n    : <T extends Node>(node: T) => node;\n\nconst trustedTypes = (global as unknown as Window).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg} when it hasn't been compiled by @lit-labs/compiler.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type UncompiledTemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\n/**\n * This is a template result that may be either uncompiled or compiled.\n *\n * In the future, TemplateResult will be this type. If you want to explicitly\n * note that a template result is potentially compiled, you can reference this\n * type and it will continue to behave the same through the next major version\n * of Lit. This can be useful for code that wants to prepare for the next\n * major version of Lit.\n */\nexport type MaybeCompiledTemplateResult<T extends ResultType = ResultType> =\n  | UncompiledTemplateResult<T>\n  | CompiledTemplateResult;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n * In Lit 4, this type will be an alias of\n * MaybeCompiledTemplateResult, so that code will get type errors if it assumes\n * that Lit templates are not compiled. When deliberately working with only\n * one, use either {@linkcode CompiledTemplateResult} or\n * {@linkcode UncompiledTemplateResult} explicitly.\n */\nexport type TemplateResult<T extends ResultType = ResultType> =\n  UncompiledTemplateResult<T>;\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\n/**\n * A TemplateResult that has been compiled by @lit-labs/compiler, skipping the\n * prepare step.\n */\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  // The type is a TemplateStringsArray to guarantee that the value came from\n  // source code, preventing a JSON injection attack.\n  h: TemplateStringsArray;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    if (DEV_MODE) {\n      // Import static-html.js results in a circular dependency which g3 doesn't\n      // handle. Instead we know that static values must have the field\n      // `_$litStatic$`.\n      if (\n        values.some((val) => (val as {_$litStatic$: unknown})?.['_$litStatic$'])\n      ) {\n        issueWarning(\n          '',\n          `Static values 'literal' or 'unsafeStatic' cannot be used as values to non-static templates.\\n` +\n            `Please use the static 'html' tag function. See https://lit.dev/docs/templates/expressions/#static-expressions`\n        );\n      }\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\nfunction trustFromTemplateString(\n  tsa: TemplateStringsArray,\n  stringFromTSA: string\n): TrustedHTML {\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  return policy !== undefined\n    ? policy.createHTML(stringFromTSA)\n    : (stringFromTSA as unknown as TrustedHTML);\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s + marker + (attrNameEndIndex === -2 ? i : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // Returned as an array for terseness\n  return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: UncompiledTemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Re-parent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const svgElement = this.el.content.firstChild!;\n      svgElement.replaceWith(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          for (const name of (node as Element).getAttributeNames()) {\n            if (name.endsWith(boundAttributeSuffix)) {\n              const realName = attrNames[attrNameIndex++];\n              const value = (node as Element).getAttribute(name)!;\n              const statics = value.split(marker);\n              const m = /([.?@])?(.*)/.exec(realName)!;\n              parts.push({\n                type: ATTRIBUTE_PART,\n                index: nodeIndex,\n                name: m[2],\n                strings: statics,\n                ctor:\n                  m[1] === '.'\n                    ? PropertyPart\n                    : m[1] === '?'\n                    ? BooleanAttributePart\n                    : m[1] === '@'\n                    ? EventPart\n                    : AttributePart,\n              });\n              (node as Element).removeAttribute(name);\n            } else if (name.startsWith(marker)) {\n              parts.push({\n                type: ELEMENT_PART,\n                index: nodeIndex,\n              });\n              (node as Element).removeAttribute(name);\n            }\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'template prep',\n        template: this,\n        clonableTemplate: this.el,\n        parts: this.parts,\n        strings,\n      });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\nexport type {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'set part',\n            part,\n            value: values[i],\n            valueIndex: i,\n            values,\n            templateInstance: this,\n          });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype ChildTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | ChildTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent &&\n            debugLogEvent({\n              kind: 'commit nothing to child',\n              start: this._$startNode,\n              end: this._$endNode,\n              parent: this._$parent,\n              options: this.options,\n            });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit node',\n          start: this._$startNode,\n          parent: this._$parent,\n          value: value,\n          options: this.options,\n        });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit text',\n          node,\n          value,\n          options: this.options,\n        });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: textNode,\n            value,\n            options: this.options,\n          });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: wrap(this._$startNode).nextSibling as Text,\n            value,\n            options: this.options,\n          });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as UncompiledTemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(\n              trustFromTemplateString(type.h, type.h[0]),\n              this.options\n            )),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template updating',\n          template,\n          instance: this._$committedValue as TemplateInstance,\n          parts: (this._$committedValue as TemplateInstance)._$parts,\n          options: this.options,\n          values,\n        });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      instance._update(values);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated and updated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: UncompiledTemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit attribute',\n          element: this.element,\n          name: this.name,\n          value,\n          options: this.options,\n        });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit property',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit boolean attribute',\n        element: this.element,\n        name: this.name,\n        value: !!(value && value !== nothing),\n        options: this.options,\n      });\n    (wrap(this.element) as Element).toggleAttribute(\n      this.name,\n      !!value && value !== nothing\n    );\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit event listener',\n        element: this.element,\n        name: this.name,\n        value: newListener,\n        options: this.options,\n        removeListener: shouldRemoveListener,\n        addListener: shouldAddListener,\n        oldListener,\n      });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit to element binding',\n        element: this.element,\n        value,\n        options: this.options,\n      });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('3.1.0');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'begin render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'end render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as i}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */class s extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const i=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(i,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return i}}s._$litElement$=!0,s[(\"finalized\",\"finalized\")]=!0,globalThis.litElementHydrateSupport?.({LitElement:s});const r=globalThis.litElementPolyfillSupport;r?.({LitElement:s});const o={_$AK:(t,e,i)=>{t._$AK(e,i)},_$AL:t=>t._$AL};(globalThis.litElementVersions??=[]).push(\"4.0.2\");export{s as LitElement,o as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See @lit/reactive-element for more information.\n */\n(LitElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('finalized', LitElement)\n] = true;\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('4.0.2');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst o=!1;export{o as isServer};\n//# sourceMappingURL=is-server.js.map\n","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * @fileoverview\n *\n * This file exports a boolean const whose value will depend on what environment\n * the module is being imported from.\n */\n\nconst NODE_MODE = false;\n\n/**\n * A boolean that will be `true` in server environments like Node, and `false`\n * in browser environments. Note that your server environment or toolchain must\n * support the `\"node\"` export condition for this to be `true`.\n *\n * This can be used when authoring components to change behavior based on\n * whether or not the component is executing in an SSR context.\n */\nexport const isServer = NODE_MODE;\n","import{directive as s}from\"../directive.js\";import{UnsafeHTMLDirective as e}from\"./unsafe-html.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */class t extends e{}t.directiveName=\"unsafeSVG\",t.resultType=2;const o=s(t);export{o as unsafeSVG};\n//# sourceMappingURL=unsafe-svg.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {directive} from '../directive.js';\nimport {UnsafeHTMLDirective} from './unsafe-html.js';\n\nconst SVG_RESULT = 2;\n\nclass UnsafeSVGDirective extends UnsafeHTMLDirective {\n  static override directiveName = 'unsafeSVG';\n  static override resultType = SVG_RESULT;\n}\n\n/**\n * Renders the result as SVG, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeSVG = directive(UnsafeSVGDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {UnsafeSVGDirective};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t={ATTRIBUTE:1,CHILD:2,PROPERTY:3,BOOLEAN_ATTRIBUTE:4,EVENT:5,ELEMENT:6},e=t=>(...e)=>({_$litDirective$:t,values:e});class i{constructor(t){}get _$AU(){return this._$AM._$AU}_$AT(t,e,i){this._$Ct=t,this._$AM=e,this._$Ci=i}_$AS(t,e){return this.update(t,e)}update(t,e){return this.render(...e)}}export{i as Directive,t as PartType,e as directive};\n//# sourceMappingURL=directive.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html.js';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n  PropertyPart,\n} from './lit-html.js';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /**\n   * This property needs to remain unminified.\n   * @internal */\n  ['_$litDirective$']: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = (typeof PartType)[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive =\n  <C extends DirectiveClass>(c: C) =>\n  (...values: DirectiveParameters<InstanceType<C>>): DirectiveResult<C> => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n  });\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive implements Disconnectable {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // This property needs to remain unminified.\n  //@internal\n  ['_$notifyDirectiveConnectionChanged']?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n","import{nothing as t,noChange as i}from\"../lit-html.js\";import{Directive as r,PartType as s,directive as n}from\"../directive.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */class e extends r{constructor(i){if(super(i),this.et=t,i.type!==s.CHILD)throw Error(this.constructor.directiveName+\"() can only be used in child bindings\")}render(r){if(r===t||null==r)return this.vt=void 0,this.et=r;if(r===i)return r;if(\"string\"!=typeof r)throw Error(this.constructor.directiveName+\"() called with a non-string value\");if(r===this.et)return this.vt;this.et=r;const s=[r];return s.raw=s,this.vt={_$litType$:this.constructor.resultType,strings:s,values:[]}}}e.directiveName=\"unsafeHTML\",e.resultType=1;const o=n(e);export{e as UnsafeHTMLDirective,o as unsafeHTML};\n//# sourceMappingURL=unsafe-html.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing, TemplateResult, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\n\nconst HTML_RESULT = 1;\n\nexport class UnsafeHTMLDirective extends Directive {\n  static directiveName = 'unsafeHTML';\n  static resultType = HTML_RESULT;\n\n  private _value: unknown = nothing;\n  private _templateResult?: TemplateResult;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() can only be used in child bindings`\n      );\n    }\n  }\n\n  render(value: string | typeof nothing | typeof noChange | undefined | null) {\n    if (value === nothing || value == null) {\n      this._templateResult = undefined;\n      return (this._value = value);\n    }\n    if (value === noChange) {\n      return value;\n    }\n    if (typeof value != 'string') {\n      throw new Error(\n        `${\n          (this.constructor as typeof UnsafeHTMLDirective).directiveName\n        }() called with a non-string value`\n      );\n    }\n    if (value === this._value) {\n      return this._templateResult;\n    }\n    this._value = value;\n    const strings = [value] as unknown as TemplateStringsArray;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (strings as any).raw = strings;\n    // WARNING: impersonating a TemplateResult like this is extremely\n    // dangerous. Third-party directives should not do this.\n    return (this._templateResult = {\n      // Cast to a known set of integers that satisfy ResultType so that we\n      // don't have to export ResultType and possibly encourage this pattern.\n      // This property needs to remain unminified.\n      ['_$litType$']: (this.constructor as typeof UnsafeHTMLDirective)\n        .resultType as 1 | 2,\n      strings,\n      values: [],\n    });\n  }\n}\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * The values `undefined`, `null`, and `nothing`, will all result in no content\n * (empty string) being rendered.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive(UnsafeHTMLDirective);\n","import router from './router';\nimport { html, LitElement } from 'lit';\nimport { animations, theme } from '../theme/theme';\n\nexport class RouteLinkCompenent extends LitElement {\n  static properties = {\n    href: {},\n    selected: { state: true },\n  };\n\n  static styles = [theme, animations];\n\n  #updateSelected() {\n    const url = new URL(`${window.location.origin}/${this.href}`);\n\n    this.selected = router.isActiveRoute(url.pathname);\n  }\n\n  constructor() {\n    super();\n\n    router.addEventListener('routechanged', () => {\n      this.#updateSelected();\n    });\n  }\n\n  #onClick = (event) => {\n    event.preventDefault();\n\n    const url = new URL(`${window.location.origin}/${this.href}`);\n    const queryParams = Object.fromEntries(url.searchParams.entries());\n\n    router.navigateTo(url.pathname, queryParams);\n  };\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.#updateSelected();\n    this.addEventListener('click', this.#onClick);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener('click', this.#onClick);\n  }\n\n  render() {\n    return html`\n        <a href=\"${this.href}\"\n           aria-disabled=\"${this.selected}\"\n           part=\"a ${this.selected ? 'active' : ''}\">\n            <slot></slot>\n        </a>\n    `;\n  }\n}\n\ncustomElements.define('route-link', RouteLinkCompenent);\n","\nimport themeCSS from 'bundle-text:./theme.scss';\nimport animationsCSS from 'bundle-text:./animations.scss';\nimport { unsafeCSS } from 'lit';\n\nexport const theme = unsafeCSS(themeCSS);\nexport const animations = unsafeCSS(animationsCSS);\n","module.exports = \"ca0e9e722b80c413\";","module.exports = \"02836e27efbf7313\";","module.exports = \"0e667241fefde6ec\";","\nimport router from './router';\nimport { LitElement } from 'lit';\nimport { unsafeHTML } from 'lit/directives/unsafe-html';\n\nexport class RouteOutletComponent extends LitElement {\n  static properties = {\n    route: { state: true }\n  };\n\n  constructor() {\n    super();\n\n    this.route = router.currentRoute;\n    router.addEventListener('routechanged', ({ detail: { route }}) => {\n      this.route?.destroy();\n      this.route = route;\n    });\n  }\n\n  render() {\n    return unsafeHTML(`<${this.route.component}></${this.route.component}>`);\n  }\n}\n\ncustomElements.define('route-outlet', RouteOutletComponent);\n","import router from '../router/router';\nimport { css, html, LitElement } from 'lit';\nimport { animations, theme } from '../theme/theme';\nimport './load-media-form-component';\nimport '../core/content-link-component';\nimport Examples from './examples';\nimport { asQueryParams, openPlayerModal } from '../player/player-dialog';\nimport { map } from 'lit/directives/map.js';\nimport { when } from 'lit/directives/when.js';\n\n/**\n * A web component that represents the examples page.\n *\n * @element examples-page\n */\nexport class ExamplesPage extends LitElement {\n  static styles = [\n    theme, animations, css`\n      .example-section p {\n        margin-bottom: 0;\n        color: var(--color-5);\n        font-size: var(--size-3);\n        text-align: left;\n      }`\n  ];\n\n  render() {\n    return html`\n      <load-media-form @submit-media=\"${e => openPlayerModal(e.detail)}\">\n      </load-media-form>\n\n      <!-- List of examples -->\n      <div class=\"fade-in\"\n           @animationend=\"${e => e.target.classList.remove('fade-in')}\">\n        ${map(Object.entries(Examples), ([section, examples]) => html`\n          <section class=\"example-section\" data-section=\"${section}\">\n            <h2 class=\"sticky\">${section}</h2>\n            ${map(examples, example => html`\n              <content-link title=\"${example.description || example.title}\"\n                            href=\"examples?${asQueryParams(example)}\">\n                ${when(example.description, () => html`\n                    <span slot=\"description\">${example.title}</span>\n                `)}\n              </content-link>\n            `)}\n          </section>\n        `)}\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('examples-page', ExamplesPage);\nrouter.addRoute('examples', 'examples-page');\n","import { html, LitElement, unsafeCSS } from 'lit';\nimport { animations, theme } from '../theme/theme';\nimport componentCSS from 'bundle-text:./load-media-form-component.scss';\nimport { classMap } from 'lit/directives/class-map.js';\n\n/**\n * LoadMediaFormComponent is a LitElement that provides a user interface for loading media content.\n *\n * @element load-media-form\n *\n * @fires LoadMediaFormComponent#submit-media - Dispatched when the user submits media with the specified details.\n *\n * @prop {String} src - The URL or URN of the media content to be loaded.\n * @prop {{vendor: String, certificateUrl: String, licenseUrl: String}} drmSettings - DRM settings for the loaded media.\n */\nexport class LoadMediaFormComponent extends LitElement {\n  static properties = {\n    src: { type: String },\n    drmSettings: { type: Object },\n    drmSettingsShown: { state: true, type: Boolean }\n  };\n\n  static styles = [theme, animations, unsafeCSS(componentCSS)];\n\n  constructor() {\n    super();\n\n    this.src = '';\n    this.#initDrmSettings();\n  }\n\n  #initDrmSettings() {\n    this.drmSettings = {\n      vendor: '',\n      certificateUrl: '',\n      licenseUrl: ''\n    };\n  }\n\n  #submitMedia() {\n    const src = this.src;\n    const type = src.startsWith('urn:') ? 'srgssr/urn' : undefined;\n    const keySystems = this.#keySystems;\n\n    /**\n     * Custom event dispatched by LoadMediaFormComponent when the user submits media.\n     *\n     * @event LoadMediaFormComponent#submit-media\n     * @type {CustomEvent}\n     * @property {Object} detail - The event detail object.\n     * @property {string} detail.src - The URL or URN of the media content to be loaded.\n     * @property {string | undefined} detail.type - The type of media. Undefined if the type cannot be determined.\n     * @property {Object | undefined} detail.keySystems - DRM key systems for the loaded media.\n     */\n    this.dispatchEvent(new CustomEvent('submit-media', {\n      detail: { src, type, keySystems }\n    }));\n  }\n\n  #handleLoadBarKeyUp(event) {\n    this.src = event.target.value;\n\n    if (event.key === 'Enter' && this.src) {\n      this.#submitMedia();\n    }\n  }\n\n  get #keySystems() {\n    if (!this.drmSettings?.vendor) {\n      return undefined;\n    }\n\n    const certificateUrl = this.drmSettings.certificateUrl;\n    const licenseUrl = this.drmSettings.licenseUrl;\n\n    if ('com.apple.fps.1_0' === this.drmSettings.vendor) {\n      return { [this.drmSettings.vendor]: { certificateUrl, licenseUrl }};\n    }\n\n    return { [this.drmSettings.vendor]: { licenseUrl }};\n  }\n\n  render() {\n    const btnSettingsClassMap = {\n      'spin': this.drmSettingsShown === true,\n      'spin-back': this.drmSettingsShown === false,\n    };\n\n    return html`\n      <div class=\"fade-in\"\n           @animationend=\"${e => e.target.classList.remove('fade-in')}\">\n        <div class=\"load-bar-container\">\n          <i class=\"material-icons-outlined\">insert_link</i>\n          <input type=\"text\"\n                 placeholder=\"Enter a URL or URN to play its content...\"\n                 @keyup=\"${this.#handleLoadBarKeyUp}\"\n                 .value=\"${this.src ?? ''}\">\n          <button title=\"Open DRM Settings\"\n                  @click=\"${() => this.drmSettingsShown = !this.drmSettingsShown}\">\n            <i class=\"material-icons-outlined ${classMap(btnSettingsClassMap)}\"\n               @animationend=\"${e => e.target.classList.remove('spin', 'spin-back')}\">\n              settings\n            </i>\n          </button>\n        </div>\n        \n        ${this.#drmSettingsTemplate()}\n\n        <button class=\"icon-btn load-bar-action\"\n                ?disabled=\"${!this.src}\"\n                @click=\"${this.#submitMedia}\">\n          <i class=\"material-icons-outlined\">play_circle</i> Play content\n        </button>\n      </div>\n    `;\n  }\n\n  updated(_changedProperties) {\n    super.updated(_changedProperties);\n\n    if (_changedProperties.has('drmSettingsShown') && this.drmSettingsShown) {\n      this.shadowRoot.querySelector('.drm-settings-container').add('active');\n    }\n  }\n\n  #onFormAnimationEnd(e) {\n    if (e.target.classList.contains('shrink')) {\n      e.target.classList.add('active');\n    }\n\n    e.target.classList.remove('fade-in-grow', 'shrink');\n  }\n\n  #formAnimationClassMap() {\n    return {\n      'fade-in-grow': this.drmSettingsShown === true,\n      'shrink': this.drmSettingsShown === false\n    };\n  }\n\n  #drmSettingsTemplate() {\n    return html`\n      <form class=\"drm-settings-container ${classMap(this.#formAnimationClassMap())}\"\n            aria-hidden=\"${!this.drmSettingsShown}\"\n            @reset=\"${this.#initDrmSettings}\"\n            @animationend=\"${e => this.#onFormAnimationEnd(e)}\">\n        <h3>DRM Settings</h3>\n        <select aria-label=\"Select a DRM vendor\" required\n                .value=\"${this.drmSettings.vendor}\"\n                @change=\"${e => this.drmSettings.vendor = e.target.value}\">\n          <option value=\"\" disabled selected hidden>Select a DRM vendor\n          </option>\n          <option value=\"com.widevine.alpha\">Widevine</option>\n          <option value=\"com.apple.fps.1_0\">Fairplay</option>\n          <option value=\"com.microsoft.playready\">PlayReady</option>\n        </select>\n        <input type=\"text\"\n               placeholder=\"Enter the license url...\"\n               .value=\"${this.drmSettings.licenseUrl}\"\n               @input=\"${e => this.drmSettings.licenseUrl = e.target.value}\">\n        <input type=\"text\"\n               placeholder=\"Enter the certificate url...\"\n               .value=\"${this.drmSettings.certificateUrl}\"\n               @input=\"${e => this.drmSettings.certificateUrl = e.target.value}\">\n        <button class=\"icon-btn warning-text\" type=\"reset\">\n          <i class=\"material-icons-outlined\">delete</i>Clear Settings\n        </button>\n        <hr>\n      </form>\n    `;\n  }\n}\n\ncustomElements.define('load-media-form', LoadMediaFormComponent);\n\n","module.exports = \"d81972dedb11c56e\";","import{noChange as t}from\"../lit-html.js\";import{directive as s,Directive as i,PartType as r}from\"../directive.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const e=s(class extends i{constructor(t){if(super(t),t.type!==r.ATTRIBUTE||\"class\"!==t.name||t.strings?.length>2)throw Error(\"`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.\")}render(t){return\" \"+Object.keys(t).filter((s=>t[s])).join(\" \")+\" \"}update(s,[i]){if(void 0===this.it){this.it=new Set,void 0!==s.strings&&(this.st=new Set(s.strings.join(\" \").split(/\\s/).filter((t=>\"\"!==t))));for(const t in i)i[t]&&!this.st?.has(t)&&this.it.add(t);return this.render(i)}const r=s.element.classList;for(const t of this.it)t in i||(r.remove(t),this.it.delete(t));for(const t in i){const s=!!i[t];s===this.it.has(t)||this.st?.has(t)||(s?(r.add(t),this.it.add(t)):(r.remove(t),this.it.delete(t)))}return t}});export{e as classMap};\n//# sourceMappingURL=class-map.js.map\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of class names to truthy values.\n */\nexport interface ClassInfo {\n  readonly [name: string]: string | boolean | number;\n}\n\nclass ClassMapDirective extends Directive {\n  /**\n   * Stores the ClassInfo object applied to a given AttributePart.\n   * Used to unset existing values when a new ClassInfo object is applied.\n   */\n  private _previousClasses?: Set<string>;\n  private _staticClasses?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'class' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        '`classMap()` can only be used in the `class` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(classInfo: ClassInfo) {\n    // Add spaces to ensure separation from static classes\n    return (\n      ' ' +\n      Object.keys(classInfo)\n        .filter((key) => classInfo[key])\n        .join(' ') +\n      ' '\n    );\n  }\n\n  override update(part: AttributePart, [classInfo]: DirectiveParameters<this>) {\n    // Remember dynamic classes on the first render\n    if (this._previousClasses === undefined) {\n      this._previousClasses = new Set();\n      if (part.strings !== undefined) {\n        this._staticClasses = new Set(\n          part.strings\n            .join(' ')\n            .split(/\\s/)\n            .filter((s) => s !== '')\n        );\n      }\n      for (const name in classInfo) {\n        if (classInfo[name] && !this._staticClasses?.has(name)) {\n          this._previousClasses.add(name);\n        }\n      }\n      return this.render(classInfo);\n    }\n\n    const classList = part.element.classList;\n\n    // Remove old classes that no longer apply\n    for (const name of this._previousClasses) {\n      if (!(name in classInfo)) {\n        classList.remove(name);\n        this._previousClasses!.delete(name);\n      }\n    }\n\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n      // We explicitly want a loose truthy check of `value` because it seems\n      // more convenient that '' and 0 are skipped.\n      const value = !!classInfo[name];\n      if (\n        value !== this._previousClasses.has(name) &&\n        !this._staticClasses?.has(name)\n      ) {\n        if (value) {\n          classList.add(name);\n          this._previousClasses.add(name);\n        } else {\n          classList.remove(name);\n          this._previousClasses.delete(name);\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies dynamic CSS classes.\n *\n * This must be used in the `class` attribute and must be the only part used in\n * the attribute. It takes each property in the `classInfo` argument and adds\n * the property name to the element's `classList` if the property value is\n * truthy; if the property value is falsey, the property name is removed from\n * the element's `class`.\n *\n * For example `{foo: bar}` applies the class `foo` if the value of `bar` is\n * truthy.\n *\n * @param classInfo\n */\nexport const classMap = directive(ClassMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {ClassMapDirective};\n","import router from '../router/router';\nimport { html, LitElement, unsafeCSS } from 'lit';\nimport componentCSS from 'bundle-text:./content-link-component.scss';\n\n/**\n * A component for rendering a content link.\n *\n * @prop {string} href - The URL to navigate to.\n * @prop {string} title - The title attribute for the link.\n *\n * @csspart a - The anchor element.\n * @csspart title - The title span within the anchor.\n * @csspart description - The slot for additional description content within the anchor.\n *\n * @example\n * <content-link href=\"/example\" title=\"Example Link\">\n *   Additional Description Content\n * </content-link>\n */\nexport class ContentLinkComponent extends LitElement {\n  static properties = {\n    href: {}\n  };\n\n  static styles = unsafeCSS(componentCSS);\n\n  #onClick = (event) => {\n    event.preventDefault();\n\n    const url = new URL(`${window.location.origin}/${this.href}`);\n    const queryParams = Object.fromEntries(url.searchParams.entries());\n\n    router.navigateTo(url.pathname, queryParams);\n  };\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('click', this.#onClick);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener('click', this.#onClick);\n  }\n\n  render() {\n    return html`\n      <a href=\"${this.href}\" title=\"${this.title}\" part=\"a\">\n        <span part=\"title\">${this.title}</span>\n        <slot part=\"description\" name=\"description\"></slot>\n      </a>\n    `;\n  }\n}\n\ncustomElements.define('content-link', ContentLinkComponent);\n","module.exports = \"7e05f57f05e1e2ff\";","const EXAMPLES = {\n  'SRGSSR': [\n    {\n      'title': 'Horizontal video',\n      'src': 'urn:rts:video:6820736',\n      'type': 'srgssr/urn'\n    },\n    {\n      'title': 'Square video',\n      'src': 'urn:rts:video:8393241',\n      'type': 'srgssr/urn'\n    },\n    {\n      'title': 'Vertical video',\n      'src': 'urn:rts:video:13444390',\n      'type': 'srgssr/urn'\n    },\n    {\n      'title': 'Token-protected video',\n      'description': 'Ski alpin, Slalom Messieurs',\n      'src': 'urn:swisstxt:video:rts:c56ea781-99ad-40c3-8d9b-444cc5ac3aea',\n      'type': 'srgssr/urn'\n    },\n    {\n      'title': 'Superfluously token-protected video',\n      'description': 'Telegiornale flash',\n      'src': 'urn:rsi:video:15916771',\n      'type': 'srgssr/urn'\n    },\n    {\n      'title': 'DRM-protected video',\n      'description': 'Top Models 8870',\n      'src': 'urn:rts:video:13639837',\n      'type': 'srgssr/urn'\n    },\n    {\n      'title': 'Live video',\n      'description': 'SRF 1',\n      'src': 'urn:srf:video:c4927fcf-e1a0-0001-7edd-1ef01d441651',\n      'type': 'srgssr/urn'\n    },\n    {\n      'title': 'DVR video livestream',\n      'description': 'RTS 1',\n      'src': 'urn:rts:video:3608506',\n      'type': 'srgssr/urn'\n    },\n    {\n      'title': 'DVR audio livestream',\n      'description': 'Couleur 3 (DVR)',\n      'src': 'urn:rts:audio:3262363',\n      'type': 'srgssr/urn'\n    },\n    {\n      'title': 'On-demand audio stream',\n      'description': 'Il lavoro di TerraProject per una fotografia documentaria',\n      'src': 'urn:rsi:audio:8833144',\n      'type': 'srgssr/urn'\n    },\n    {\n      'title': 'Expired URN',\n      'description': 'Content that is not available anymore',\n      'src': 'urn:rts:video:13382911',\n      'type': 'srgssr/urn'\n    },\n    {\n      'title': 'Unknown URN',\n      'description': 'Content that does not exist',\n      'src': 'urn:srf:video:unknown',\n      'type': 'srgssr/urn'\n    }\n  ],\n  'HLS': [\n    {\n      'title': 'VOD - HLS',\n      'description': 'Switzerland says sorry! The fondue invasion',\n      'src': 'https://swi-vod.akamaized.net/videoJson/47603186/master.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'VOD - HLS (short)',\n      'description': 'Des violents orages ont touché Ajaccio, chef-lieu de la Corse, jeudi',\n      'src': 'https://rts-vod-amd.akamaized.net/ww/13317145/f1d49f18-f302-37ce-866c-1c1c9b76a824/master.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Brain Farm Skate Phantom Flex',\n      'description': '4K video',\n      'src': 'https://sample.vodobox.net/skate_phantom_flex_4k/skate_phantom_flex_4k.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Video livestream - HLS',\n      'description': 'Couleur 3 en vidéo (live)',\n      'src': 'https://rtsc3video.akamaized.net/hls/live/2042837/c3video/3/playlist.m3u8?dw=0',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Video livestream with DVR - HLS',\n      'description': 'Couleur 3 en vidéo (DVR)',\n      'src': 'https://rtsc3video.akamaized.net/hls/live/2042837/c3video/3/playlist.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Video livestream with DVR and timestamps - HLS',\n      'description': 'Tageschau',\n      'src': 'https://tagesschau.akamaized.net/hls/live/2020115/tagesschau/tagesschau_1/master.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Audio livestream - HLS',\n      'description': 'Couleur 3 (DVR)',\n      'src': 'https://lsaplus.swisstxt.ch/audio/couleur3_96.stream/playlist.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Apple Basic 4:3',\n      'description': '4x3 aspect ratio, H.264 @ 30Hz',\n      'src': 'https://devstreaming-cdn.apple.com/videos/streaming/examples/bipbop_4x3/bipbop_4x3_variant.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Apple Basic 16:9',\n      'description': '16x9 aspect ratio, H.264 @ 30Hz',\n      'src': 'https://devstreaming-cdn.apple.com/videos/streaming/examples/bipbop_16x9/bipbop_16x9_variant.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Apple Advanced 16:9 (TS)',\n      'description': '16x9 aspect ratio, H.264 @ 30Hz and 60Hz, Transport stream',\n      'src': 'https://devstreaming-cdn.apple.com/videos/streaming/examples/img_bipbop_adv_example_ts/master.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Apple Advanced 16:9 (fMP4)',\n      'description': '16x9 aspect ratio, H.264 @ 30Hz and 60Hz, Fragmented MP4',\n      'src': 'https://devstreaming-cdn.apple.com/videos/streaming/examples/img_bipbop_adv_example_fmp4/master.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Apple Advanced 16:9 (HEVC/H.264)',\n      'description': '16x9 aspect ratio, H.264 and HEVC @ 30Hz and 60Hz',\n      'src': 'https://devstreaming-cdn.apple.com/videos/streaming/examples/bipbop_adv_example_hevc/master.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Apple Atmos',\n      'src': 'https://devstreaming-cdn.apple.com/videos/streaming/examples/adv_dv_atmos/main.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Apple WWDC Keynote 2023',\n      'src': 'https://events-delivery.apple.com/0105cftwpxxsfrpdwklppzjhjocakrsk/m3u8/vod_index-PQsoJoECcKHTYzphNkXohHsQWACugmET.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Apple tv trailer',\n      'description': 'Lot of audios and subtitles choices',\n      'src': 'https://play-edge.itunes.apple.com/WebObjects/MZPlayLocal.woa/hls/subscription/playlist.m3u8?cc=CH&svcId=tvs.vds.4021&a=1522121579&isExternal=true&brandId=tvs.sbd.4000&id=518077009&l=en-GB&aec=UHD\\n',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Multiple subtitles and audio tracks',\n      'description': 'On some devices codec may crash',\n      'src': 'https://bitmovin-a.akamaihd.net/content/sintel/hls/playlist.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': '4K, HEVC',\n      'src': 'https://cdn.bitmovin.com/content/encoding_test_dash_hls/4k/hls/4k_profile/master.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'VoD, single audio track',\n      'src': 'https://bitmovin-a.akamaihd.net/content/MI201109210084_1/m3u8s/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'AES-128',\n      'src': 'https://bitmovin-a.akamaihd.net/content/art-of-motion_drm/m3u8s/11331.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'HLS - Fragmented MP4',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.ism/.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'HLS - Alternate audio language',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-multi-lang.ism/.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'HLS - Audio only',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-multi-lang.ism/.m3u8?filter=(type!=%22video%22)',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'HLS - Trickplay',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/no-handler-origin/tears-of-steel/tears-of-steel-trickplay.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Limiting bandwidth use',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.ism/.m3u8?max_bitrate=800000',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Dynamic Track Selection',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.ism/.m3u8?filter=%28type%3D%3D%22audio%22%26%26systemBitrate%3C100000%29%7C%7C%28type%3D%3D%22video%22%26%26systemBitrate%3C1024000%29',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Pure live',\n      'src': 'https://demo.unified-streaming.com/k8s/live/stable/live.isml/.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Timeshift (5 minutes)',\n      'src': 'https://demo.unified-streaming.com/k8s/live/stable/live.isml/.m3u8?time_shift=300',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Live audio',\n      'src': 'https://demo.unified-streaming.com/k8s/live/stable/live.isml/.m3u8?filter=(type!=%22video%22)',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Pure live (scte35)',\n      'src': 'https://demo.unified-streaming.com/k8s/live/stable/scte35.isml/.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'fMP4, clear',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-fmp4.ism/.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'fMP4, HEVC 4K',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-hevc.ism/.m3u8',\n      'type': 'application/x-mpegURL'\n    },\n    {\n      'title': 'Test1',\n      'description': 'Forced subtitles',\n      'src': 'https://prd.vod-srgssr.ch/origin/1053457/fr/master.m3u8?complexSubs=true',\n      'type': 'application/x-mpegURL'\n    }\n  ],\n  'DASH': [\n    {\n      'title': 'VoD - Dash (H264)',\n      'src': 'https://storage.googleapis.com/wvmedia/clear/h264/tears/tears.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'VoD - Dash Widewine cenc (H264)',\n      'src': 'https://storage.googleapis.com/wvmedia/cenc/h264/tears/tears.mpd',\n      'type': 'application/dash+xml',\n      'keySystems': {\n        'com.widevine.alpha': 'https://proxy.uat.widevine.com/proxy?video_id=2015_tears&provider=widevine_test'\n      }\n    },\n    {\n      'title': 'VoD - Dash (H265)',\n      'src': 'https://storage.googleapis.com/wvmedia/clear/hevc/tears/tears.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'VoD - Dash widewine cenc (H265)',\n      'src': 'https://storage.googleapis.com/wvmedia/cenc/hevc/tears/tears.mpd',\n      'type': 'application/dash+xml',\n      'keySystems': {\n        'com.widevine.alpha': 'https://proxy.uat.widevine.com/proxy?video_id=2015_tears&provider=widevine_test'\n      }\n    },\n    {\n      'title': 'VoD - Dash - MP4',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.mp4/.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - Fragmented MP4',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel.ism/.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - TrickPlay',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/no-handler-origin/tears-of-steel/tears-of-steel-trickplay.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - Tiled thumbnails (live/timeline)',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-tiled-thumbnails-timeline.ism/.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - Accessibility - hard of hearing',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-hoh-subs.ism/.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - Single - fragmented TTML',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-en.ism/.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - Multiple - RFC 5646 language tags',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-rfc5646.ism/.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - Multiple - fragmented TTML',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-ttml.ism/.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - Audio only',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-multi-lang.ism/.mpd?filter=(type!=%22video%22)',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - Multiple audio codecs',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-multi-codec.ism/.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - Alternate audio language',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-multi-lang.ism/.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - Accessibility - audio description',\n      'src': 'https://demo.unified-streaming.com/k8s/features/stable/video/tears-of-steel/tears-of-steel-desc-aud.ism/.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - Pure live',\n      'src': 'https://demo.unified-streaming.com/k8s/live/stable/live.isml/.mpd',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - Timeshift (5 minutes)',\n      'src': 'https://demo.unified-streaming.com/k8s/live/stable/live.isml/.mpd?time_shift=300',\n      'type': 'application/dash+xml'\n    },\n    {\n      'title': 'Dash - DVB DASH low latency',\n      'src': 'https://demo.unified-streaming.com/k8s/live/stable/live-low-latency.isml/.mpd',\n      'type': 'application/dash+xml'\n    }\n  ],\n  'MP4': [\n    {\n      'title': 'VOD - MP4',\n      'description': 'The dig',\n      'src': 'https://media.swissinfo.ch/media/video/dddaff93-c2cd-4b6e-bdad-55f75a519480/rendition/154a844b-de1d-4854-93c1-5c61cd07e98c.mp4',\n      'type': 'video/mp4'\n    },\n    {\n      'title': 'AVC Progressive',\n      'src': 'https://bitmovin-a.akamaihd.net/content/MI201109210084_1/MI201109210084_mpeg-4_hd_high_1080p25_10mbits.mp4',\n      'type': 'video/mp4'\n    }\n  ],\n  'AOD': [\n    {\n      'title': 'Audio HLS',\n      'description': 'Content with PTS rollover',\n      'src': 'https://cdn.rts.ch/audio-sample/playlist.m3u8',\n      'type': 'application/x-mpegURL'\n    }\n  ]\n};\n\nexport default EXAMPLES;\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nfunction*o(o,f){if(void 0!==o){let i=0;for(const t of o)yield f(t,i++)}}export{o as map};\n//# sourceMappingURL=map.js.map\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable containing the result of calling `f(value)` on each\n * value in `items`.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     <ul>\n *       ${map(items, (i) => html`<li>${i}</li>`)}\n *     </ul>\n *   `;\n * }\n * ```\n */\nexport function* map<T>(\n  items: Iterable<T> | undefined,\n  f: (value: T, index: number) => unknown\n) {\n  if (items !== undefined) {\n    let i = 0;\n    for (const value of items) {\n      yield f(value, i++);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nfunction n(n,r,t){return n?r(n):t?.(n)}export{n as when};\n//# sourceMappingURL=when.js.map\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\ntype Falsy = null | undefined | false | 0 | -0 | 0n | '';\n\n/**\n * When `condition` is true, returns the result of calling `trueCase()`, else\n * returns the result of calling `falseCase()` if `falseCase` is defined.\n *\n * This is a convenience wrapper around a ternary expression that makes it a\n * little nicer to write an inline conditional without an else.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${when(this.user, () => html`User: ${this.user.username}`, () => html`Sign In...`)}\n *   `;\n * }\n * ```\n */\nexport function when<C extends Falsy, T, F = undefined>(\n  condition: C,\n  trueCase: (c: C) => T,\n  falseCase?: (c: C) => F\n): F;\nexport function when<C, T, F>(\n  condition: C extends Falsy ? never : C,\n  trueCase: (c: C) => T,\n  falseCase?: (c: C) => F\n): T;\nexport function when<C, T, F = undefined>(\n  condition: C,\n  trueCase: (c: Exclude<C, Falsy>) => T,\n  falseCase?: (c: Extract<C, Falsy>) => F\n): C extends Falsy ? F : T;\nexport function when(\n  condition: unknown,\n  trueCase: (c: unknown) => unknown,\n  falseCase?: (c: unknown) => unknown\n): unknown {\n  return condition ? trueCase(condition) : falseCase?.(condition);\n}\n","import { html, LitElement, unsafeCSS } from 'lit';\nimport { animations, theme } from '../theme/theme';\nimport router from '../router/router';\nimport componentCSS from 'bundle-text:./search-page.scss';\nimport './search-bar-component';\nimport ilProvider from '../core/il-provider';\nimport '../spinner/spinner-component';\nimport '../core/intersection-observer-component';\nimport '../core/scroll-to-top-component';\nimport '../core/content-link-component';\nimport { map } from 'lit/directives/map.js';\nimport Pillarbox from '../../../src/pillarbox';\nimport { when } from 'lit/directives/when.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nexport class SearchPage extends LitElement {\n  static properties = {\n    loading: { state: true, type: Boolean },\n    results: { state: true, type: Array },\n    nextPage: { state: true, type: Function }\n  };\n\n  static styles = [\n    theme, animations, unsafeCSS(componentCSS)\n  ];\n\n  /**\n   * The abort controller for handling search cancellation.\n   *\n   * @private\n   * @type {AbortController}\n   */\n  #abortController = new AbortController();\n  /**\n   * The reference to the query params changed event handler.\n   *\n   * @private\n   * @type {Function}\n   */\n  #onQueryParamsChanged;\n\n  constructor() {\n    super();\n\n    this.loading = false;\n    this.results = null;\n    this.nextPage = null;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.#onQueryParamsChanged = () => {\n      const searchBar = this.renderRoot.querySelector('search-bar');\n\n      searchBar.query = router.queryParams.query ?? '';\n      searchBar.bu = router.queryParams.bu ?? 'rsi';\n    };\n    router.addEventListener('queryparams', this.#onQueryParamsChanged);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.abortSearch();\n    router.removeEventListener('queryparams', this.#onQueryParamsChanged);\n  }\n\n  async firstUpdated(_changedProperties) {\n    super.firstUpdated(_changedProperties);\n    const searchBar = this.renderRoot.querySelector('search-bar');\n\n    this.#onQueryParamsChanged();\n    await this.#search(searchBar.bu, searchBar.query);\n  }\n\n  async #onSearchBarChanged(bu, query) {\n    router.updateState({ bu, ...(query ? { query } : {}) });\n    await this.#search(bu, query);\n  }\n\n  /**\n   * Performs a search based on the specified business unit and query. Performing\n   * a new search will abort the previous search if it's ongoing and display a\n   * loading spinner for the asynchronous operation.\n   *\n   * @param {string} bu - The selected business unit.\n   * @param {string} query - The search query.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if\n   * the fetch request for the search results fails.\n   */\n  async #search(bu, query) {\n    const signal = this.abortSearch();\n\n    if (!query) {\n      [this.results, this.nextPage] = [null, null];\n\n      return;\n    }\n\n    this.loading = true;\n    try {\n      const data = await ilProvider.search(bu, query, signal);\n\n      [this.results, this.nextPage] = [data.results, data.next];\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  /**\n   * Advances to the next page of search results and updates the UI accordingly.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if\n   * the fetch request for the next page fails.\n   */\n  async #fetchNextPage() {\n    const signal = this.abortSearch();\n    const data = await this.nextPage(signal);\n\n    this.nextPage = data.next;\n    this.results = [...this.results, ...data.results];\n  }\n\n  /**\n   * Aborts the previous search by cancelling the associated abort signal and\n   * creates a new abort controller for the next search.\n   *\n   * @returns {AbortSignal} - The abort signal associated with the new search.\n   */\n  abortSearch() {\n    this.#abortController?.abort('New search launched');\n    this.#abortController = new AbortController();\n\n    return this.#abortController.signal;\n  }\n\n  #toQueryParams(r) {\n    return new URLSearchParams({ ...router.queryParams, src: r.urn, type: 'srgssr/urn' }).toString();\n  }\n\n  #renderButton(r) {\n    const date = new Intl.DateTimeFormat('fr-CH').format(new Date(r.date));\n    const duration = Pillarbox.formatTime(r.duration / 1000);\n\n    return html`\n      <content-link title=\"${r.title}\"\n                   href=\"search?${this.#toQueryParams(r)}\">\n          <div slot=\"description\">\n              <i class=\"material-icons-outlined\">${r.mediaType === 'VIDEO' ? 'movie' : 'audiotrack'}</i>\n              <span>&nbsp;| ${date} | ${duration}</span>\n          </div>\n      </content-link>\n    `;\n  }\n\n  #renderResults() {\n    const resultsClassMap = {\n      'empty' : this.results == null,\n      'no-results' : this.results && this.results.length === 0,\n      'material-icons': !this.results || this.results.length === 0\n    };\n\n    return html`\n      <section class=\"results-container fade-in ${classMap(resultsClassMap)}\"\n        @animationend=\"${e => e.target.classList.remove('fade-in')}\">\n        ${map(this.results ?? [], this.#renderButton.bind(this))}\n        ${when(this.nextPage, () => html`\n          <intersection-observer\n            @intersecting=\"${this.#fetchNextPage.bind(this)}\">\n          </intersection-observer>\n        `)}\n      </section>\n    `;\n  }\n\n  #renderSpinner() {\n    return html`\n      <loading-spinner loading class=\"slide-up-fade-in\"\n                       @animationend=\"${e => e.target.classList.remove('slide-up-fade-in')}\">\n      </loading-spinner>\n    `;\n  }\n\n  #renderScrollToTopBtn() {\n    return html`<scroll-to-top-button></scroll-to-top-button>`;\n  }\n\n  render() {\n    return html`\n      <search-bar\n        @change=\"${e => this.#onSearchBarChanged(e.detail.bu, e.detail.query)}\">\n      </search-bar>\n\n      <!-- Search results -->\n      ${when(this.loading, this.#renderSpinner.bind(this), this.#renderResults.bind(this))}\n      ${when(this.results?.length > 0, this.#renderScrollToTopBtn.bind(this))}\n    `;\n  }\n}\n\ncustomElements.define('search-page', SearchPage);\nrouter.addRoute('search', 'search-page');\n","module.exports = \"26477097c65d1c69\";","import { html, LitElement, unsafeCSS } from 'lit';\nimport { animations, theme } from '../theme/theme';\nimport componentCSS from 'bundle-text:./search-bar-component.scss';\nimport Pillarbox from '../../../src/pillarbox';\n\nconst DEFAULT_BU = 'rsi';\n\n/**\n * A search bar component for filtering content based on a query and business unit.\n *\n * @element search-bar\n *\n * @fires SearchBarComponent#change - Dispatched when the value of the search bar changes.\n */\nexport class SearchBarComponent extends LitElement {\n  static properties = {\n    bu: { type: String },\n    query: { type: String }\n  };\n\n  static styles = [theme, animations, unsafeCSS(componentCSS)];\n\n  constructor() {\n    super();\n    this.bu = DEFAULT_BU;\n    this.query = '';\n  }\n\n  #handleSearchBarKeyUp() {\n    this.query = this.renderRoot.querySelector('input').value;\n  }\n\n  #handleSelectChange(e) {\n    this.bu = e.target.value;\n  }\n\n  updated(_changedProperties) {\n    super.updated(_changedProperties);\n\n    if (['bu', 'query'].some(property => _changedProperties.has(property))) {\n      const query = this.query ?? '';\n      const bu = this.bu ?? DEFAULT_BU;\n\n      /**\n       * Custom event dispatched by SearchBarComponent when the value of the bar changes.\n       *\n       * @event SearchBarComponent#change\n       * @type {CustomEvent}\n       * @property {Object} detail - The event detail object.\n       * @property {string} detail.query - The query on the search bar.a\n       * @property {string} detail.bu - The selected bu.\n       */\n      this.dispatchEvent(new CustomEvent('change', {\n        detail: { query, bu }\n      }));\n    }\n  }\n\n  #clearSearchBar() {\n    this.query = '';\n    this.renderRoot.querySelector('input').value = '';\n  }\n\n  render() {\n    return html`\n      <div class=\"search-bar-container fade-in\"\n           @animationend=\"${e => e.target.classList.remove('fade-in')}\">\n        <select aria-label=\"Select a business unit\"\n                .value=\"${this.bu ?? DEFAULT_BU}\"\n                @change=\"${this.#handleSelectChange}\">\n          <option value=\"rsi\" selected>RSI</option>\n          <option value=\"rtr\">RTR</option>\n          <option value=\"rts\">RTS</option>\n          <option value=\"srf\">SRF</option>\n          <option value=\"swi\">SWI</option>\n        </select>\n        <input type=\"text\"\n               placeholder=\"Search for content...\"\n               @keyup=\"${Pillarbox.fn.debounce(this.#handleSearchBarKeyUp, 500)}\"\n               .value=\"${this.query ?? ''}\">\n        <button title=\"Clear search\"\n                @click=\"${this.#clearSearchBar}\">\n          <i class=\"material-icons-outlined\">close</i>\n        </button>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('search-bar', SearchBarComponent);\n","module.exports = \"73f11f1423eca880\";","const IL_DEFAULT_HOST = 'il.srgssr.ch';\nconst DEFAULT_QUERY_PARAMS = {\n  'vector': 'srgplay'\n};\nconst DEFAULT_SEARCH_PARAMS = {\n  'includeAggregations': false,\n  'includeSuggestions': false,\n  'sortBy': 'default',\n  'sortDir': 'desc',\n  'pageSize': 50,\n  ...DEFAULT_QUERY_PARAMS\n};\nconst DEFAULT_SHOWLIST_PARAMS = {\n  'onlyActiveShows': true,\n  ...DEFAULT_QUERY_PARAMS\n};\n\nconst toMedia = ({ title, urn, mediaType, date, duration }) => ({\n  title, urn, mediaType, date, duration\n});\n\n/**\n * Class representing a provider for the integration layer.\n *\n * @class\n */\nclass ILProvider {\n  /**\n   * Creates an instance of ILProvider.\n   *\n   * @param {string} [hostName='il.srgssr.ch'] - The hostname for the integration layer (without the protocol).\n   */\n  constructor(hostName = IL_DEFAULT_HOST) {\n    this.baseUrl = `${hostName}/integrationlayer/2.0`;\n  }\n\n  /**\n   * Performs a search for media content based on the provided business unit and query.\n   *\n   * @param {string} bu - The business unit for which the search is performed (rsi, rtr, rts, srf or swi).\n   * @param {string} query - The search query.\n   * @param {AbortSignal} [signal=undefined] - (Optional) An abort signal,\n   * allows to abort the query through an abort controller.\n   *\n   * @returns {Promise<{ results: Array<{ title: string, urn: string }>, next: function }>} - A promise\n   * that resolves to an object containing :\n   * - `results`: An array of objects containing the title, URN, media type, date, and duration of the search results.\n   * - `next`: A function that, when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */\n  async search(bu, query, signal = undefined) {\n    const data = await this.#fetch(\n      `/${bu.toLowerCase()}/searchResultMediaList`,\n      { ...DEFAULT_SEARCH_PARAMS, 'q': query },\n      signal\n    );\n    const toResults = (data) => data.searchResultMediaList.map(toMedia);\n\n    return {\n      results: toResults(data),\n      next: data.next ? this.#nextProvider(data.next, toResults) : undefined\n    };\n  }\n\n  /**\n   * Retrieves a list of topics for the specified business unit and transmission type.\n   *\n   * @param {string} bu - The business unit for which to retrieve topics (rsi, rtr, rts, srf, or swi).\n   * @param {string} [transmission='tv'] - The transmission type ('tv' or 'radio').\n   *\n   * @returns {Promise<Array<{ title: string, urn: string }>>} - A promise that resolves to an array\n   * of objects containing the title and URN of the topics.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */\n  async topics(bu, transmission = 'tv') {\n    const data = await this.#fetch(`/${bu.toLowerCase()}/topicList/${transmission}`);\n\n    return data.topicList.map(\n      ({ title, urn }) => ({ title, urn })\n    );\n  }\n\n  /**\n   * Retrieves the latest media content for a specific topic.\n   *\n   * @param {string} topicUrn - The URN (Unique Resource Name) of the topic.\n   * @param {number} [pageSize=30] - The maximum number of episodes to retrieve.\n   *\n   * @returns {Promise<{ results: Array<{ title: string, urn: string }>, next: function }>} - A promise\n   * that resolves to an object containing :\n   * - `results`: An array of objects containing the title, URN, media type, date, and duration of the medias.\n   * - `next`: A function that, when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */\n  async latestByTopic(topicUrn, pageSize = 30) {\n    const data = await this.#fetch(`/mediaList/latest/byTopicUrn/${topicUrn}`, { pageSize });\n\n    const toResults = (data) => data.mediaList.map(toMedia);\n\n    return {\n      results: toResults(data),\n      next: data.next ? this.#nextProvider(data.next, toResults) : undefined\n    };\n  }\n\n  /**\n   * Retrieves a list of shows for the specified business unit, transmission type, and ordering.\n   *\n   * @param {string} bu - The business unit for which to retrieve shows (rsi, rtr, rts, srf, or swi).\n   * @param {string} [pageSize='unlimited'] - The maximum number of shows to retrieve. Use 'unlimited' for all shows.\n   * @param {string} [transmission='tv'] - The transmission type ('tv' or 'radio').\n   *\n   * @returns {Promise<Array<{ title: string, urn: string }>>} - A promise that resolves to an array\n   * of objects containing the title and URN of the shows.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */\n  async shows(bu, pageSize = 'unlimited', transmission = 'tv') {\n    const data = await this.#fetch(\n      `/${bu.toLowerCase()}/showList/${transmission}/alphabetical`,\n      { ...DEFAULT_SHOWLIST_PARAMS, 'pageSize': pageSize }\n    );\n\n    return data.showList.map(\n      ({ title, urn }) => ({ title, urn })\n    );\n  }\n\n  /**\n   * Retrieves the latest media content for a specific show.\n   *\n   * @param {string} showUrn - The URN (Unique Resource Name) of the show.\n   * @param {number} [pageSize=30] - The maximum number of episodes to retrieve.\n   *\n   * @returns {Promise<{ results: Array<{ title: string, urn: string }>, next: function }>} - A promise\n   * that resolves to an object containing :\n   * - `results`: An array of objects containing the title, URN, media type, date, and duration of the medias.\n   * - `next`: A function that, when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */\n  async latestByShow(showUrn, pageSize = 30) {\n    const data = await this.#fetch(\n      `/episodeComposition/latestByShow/byUrn/${showUrn}`,\n      { ...DEFAULT_QUERY_PARAMS, 'pageSize': pageSize }\n    );\n\n    const toResults = (data) => data.episodeList\n      .map(({ mediaList }) => mediaList[0])\n      .map(toMedia);\n\n    return {\n      results: toResults(data),\n      next: data.next ? this.#nextProvider(data.next, toResults) : undefined\n    };\n  }\n\n  /**\n   * Retrieves editorial media content for the specified business unit.\n   *\n   * @param {string} bu - The business unit for which to retrieve editorial media (rsi, rtr, rts, srf, or swi).\n   * @param {number} [pageSize=30] - The maximum number of editorial media items to retrieve.\n   *\n   * @returns {Promise<{ results: Array<{ title: string, urn: string }>, next: function }>} - A promise\n   * that resolves to an object containing :\n   * - `results`: An array of objects containing the title, URN, media type, date, and duration of the medias.\n   * - `next`: A function that, when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */\n  async editorial(bu, pageSize = 30) {\n    const data = await this.#fetch(\n      `/${bu.toLowerCase()}/mediaList/video/editorial`,\n      { ...DEFAULT_QUERY_PARAMS, 'pageSize': pageSize }\n    );\n\n    const toResults = (data) => data.mediaList.map(toMedia);\n\n    return {\n      results: toResults(data),\n      next: data.next ? this.#nextProvider(data.next, toResults) : undefined\n    };\n  }\n\n  /**\n   * Retrieves livestream media content for the specified business unit and media type.\n   *\n   * @param {string} bu - The business unit for which to retrieve livestreams (rsi, rtr, rts, srf, or swi).\n   * @param {string} [mediaType='video'] - The media type ('video' or 'audio').\n   *\n   * @returns {Promise<Array<{ title: string, urn: string }>>} - A promise that resolves to an array\n   * of objects containing the title and URN of the livestream media content.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */\n  async livestreams(bu, mediaType = 'video') {\n    const data = await this.#fetch(`/${bu.toLowerCase()}/mediaList/${mediaType}/livestreams`);\n\n    return data.mediaList.map(toMedia);\n  }\n\n  /**\n   * Retrieves scheduled livestream media content for the specified business unit.\n   *\n   * @param {string} bu - The business unit for which to retrieve scheduled livestreams (rsi, rtr, rts, srf, or swi).\n   * @param {number} [pageSize=10] - The maximum number of scheduled livestreams to retrieve.\n   *\n   * @returns {Promise<{ results: Array<{ title: string, urn: string }>, next: function }>} - A promise\n   * that resolves to an object containing :\n   * - `results`: An array of objects containing the title, URN, media type, date, and duration of the medias.\n   * - `next`: A function that, when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */\n  async scheduledLivestream(bu, pageSize = 10) {\n    const data = await this.#fetch(\n      `/${bu.toLowerCase()}/mediaList/video/scheduledLivestreams`,\n      { ...DEFAULT_QUERY_PARAMS, 'pageSize': pageSize }\n    );\n    const toResults = (data) => data.mediaList.map(toMedia);\n\n    return {\n      results: toResults(data),\n      next: data.next ? this.#nextProvider(data.next, toResults) : undefined\n    };\n  }\n\n  /**\n   * Retrieves media content for the livecenter for the specified business unit.\n   *\n   * @param {string} bu - The business unit for which to retrieve livecenter media (rsi, rtr, rts, srf, or swi).\n   * @param {number} [pageSize=10] - The maximum number of livecenter media items to retrieve.\n   *\n   * @returns {Promise<{ results: Array<{ title: string, urn: string }>, next: function }>} - A promise\n   * that resolves to an object containing :\n   * - `results`: An array of objects containing the title, URN, media type, date, and duration of the medias.\n   * - `next`: A function that, when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */\n  async livecenter(bu, pageSize = 10) {\n    const data = await this.#fetch(\n      `/${bu.toLowerCase()}/mediaList/video/scheduledLivestreams/livecenter`,\n      { ...DEFAULT_QUERY_PARAMS, 'pageSize': pageSize }\n    );\n    const toResults = (data) => data.mediaList.map(toMedia);\n\n    return {\n      results: toResults(data),\n      next: data.next ? this.#nextProvider(data.next, toResults) : undefined\n    };\n  }\n\n  /**\n   * Retrieves a list of channels for the specified business unit and transmission type.\n   *\n   * @param {string} bu - The business unit for which to retrieve channels (rsi, rtr, rts, srf, or swi).\n   * @param {string} [transmission='radio'] - The transmission type ('tv' or 'radio').\n   *\n   * @returns {Promise<Array<{ title: string, id: string }>>} - A promise that resolves to an array\n   * of objects containing the title and ID of the channels.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */\n  async channels(bu, transmission = 'radio') {\n    const data = await this.#fetch(`/${bu.toLowerCase()}/channelList/${transmission}`);\n\n    return data.channelList.map(\n      ({ title, id }) => ({ title, id })\n    );\n  }\n\n  /**\n   * Retrieves radio shows for the specified business unit and channel.\n   *\n   * @param {string} bu - The business unit for which to retrieve radio shows (rsi, rtr, rts, srf, or swi).\n   * @param {string} channelId - The ID of the channel.\n   * @param {string} [pageSize='unlimited'] - The maximum number of radio shows to retrieve. Use 'unlimited' for all shows.\n   *\n   * @returns {Promise<Array<{ title: string, urn: string }>>} - A promise that resolves to an array\n   * of objects containing the title and URN of the radio shows.\n   *\n   * @throws {Promise<Response>} - A rejected promise with the response object if the fetch request fails.\n   */\n  async radioShowByChannel(bu, channelId, pageSize = 'unlimited') {\n    const data = await this.#fetch(\n      `/${bu.toLowerCase()}/showList/radio/alphabeticalByChannel/${channelId}`,\n      { ...DEFAULT_QUERY_PARAMS, 'pageSize': pageSize }\n    );\n\n    return data.showList.map(\n      ({ title, urn }) => ({ title, urn })\n    );\n  }\n\n\n  /**\n   * Asynchronously fetches data from the IL for the specified path and parameters.\n   *\n   * @private\n   * @param {string} path - The path to fetch data from.\n   * @param {Object} [params=DEFAULT_QUERY_PARAMS] - (Optional) parameters for the request.\n   * @param {AbortSignal} [signal=undefined] - (Optional) AbortSignal to abort the request.\n   *\n   * @returns {Promise<*>} A Promise that resolves to the JSON response data.\n   *\n   * @throws {Response} If the HTTP response is not ok (status code other than 2xx).\n   * @throws {Error} If the fetch operation fails for any other reason.\n   */\n  async #fetch(path, params = DEFAULT_QUERY_PARAMS, signal = undefined) {\n    const queryParams = new URLSearchParams(params).toString();\n    const url = `https://${this.baseUrl}/${path.replace(/^\\/+/, '')}?${queryParams}`;\n\n    return fetch(url, { signal }).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.json();\n    }).catch((reason) => {\n      return Promise.reject(reason);\n    });\n  }\n\n  /**\n   * Generates a function that, when called, retrieves the next set of data and\n   * returns a new object with updated results and the next function.\n   *\n   * @private\n   * @template T - The type of data returned by the resultMapper function.\n   *\n   * @param {string} nextUrl - The URL for fetching the next set of data.\n   * @param {(data: any) => T} resultMapper - A function to map the raw data to the desired format.\n   *\n   * @returns {(signal?: AbortSignal) => Promise<{ results: T, next: function }>} - A function that,\n   * when called, retrieves the next set of data and returns a new object with updated results and the next function.\n   */\n  #nextProvider(nextUrl, resultMapper) {\n    return async (signal = undefined) => {\n      const nextData = await fetch(nextUrl, { signal }).then(response => {\n        if (!response.ok) {\n          return Promise.reject(response);\n        }\n\n        return response.json();\n      }).catch((reason) => {\n        return Promise.reject(reason);\n      });\n\n      const nextResults = resultMapper(nextData);\n\n      return {\n        results: nextResults,\n        next: this.#nextProvider(nextData.next, resultMapper)\n      };\n    };\n  }\n}\n\nexport default new ILProvider();\n","import { html, LitElement, unsafeCSS } from 'lit';\nimport spinnerCss from 'bundle-text:./spinner-component.scss';\nimport { animations } from '../theme/theme';\n\n/**\n * A spinner component.\n *\n * @element loading-spinner\n */\nexport class SpinnerComponent extends LitElement {\n  static properties = {\n    loading: { type: Boolean },\n  };\n\n  static styles = [animations, unsafeCSS(spinnerCss)];\n\n  constructor() {\n    super();\n    this.loading = false;\n  }\n\n  render() {\n    return html`\n      <div class=\"spinner-container ${!this.loading ? 'hidden' : ''}\">\n        <div class=\"spinner\"></div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('loading-spinner', SpinnerComponent);\n","module.exports = \"b6283475b34a67b9\";","import { html, LitElement } from 'lit';\nimport { animations } from '../theme/theme';\n\n\nconst DEFAULT_INT_OPTIONS = { root: null, rootMargin: '0px', threshold: 0.1 };\n\n/**\n * Attach an Intersection Observer to a target element and execute a callback when it becomes visible.\n *\n * @param {Element} target - The target element to observe.\n * @param {Function} callback - The callback function to execute when the target is intersecting.\n * @param {Object} options - (Optional) Options to configure the Intersection Observer.\n * @param {Element} [options.root=null] - The element that is used as the viewport for checking visibility.\n * @param {string} [options.rootMargin='0px'] - Margin around the root. Can have values similar to CSS margin property.\n * @param {number} [options.threshold=0.1] - The threshold at which the callback will be triggered.\n */\nconst onIntersecting = (target, callback, options = DEFAULT_INT_OPTIONS) => {\n  new IntersectionObserver((entries) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        callback();\n      }\n    });\n  }, options).observe(target);\n};\n\n\n/**\n * This web component acts as a sentinel for an Intersection Observer,\n * dispatching an 'intersecting' event when the observed element intersects\n * with the view.\n *\n * @element intersection-observer\n * @csspart sentinel - the sentinel element.\n *\n * @fires IntersectionObserverComponent#intersecting - Dispatched when the observed element intersects with the view.\n */\nexport class IntersectionObserverComponent extends LitElement {\n  static styles = [\n    animations\n  ];\n\n  firstUpdated(_changedProperties) {\n    super.firstUpdated(_changedProperties);\n    onIntersecting(\n      this.renderRoot.querySelector('div'),\n      () => {\n        /**\n         * Custom event dispatched by IntersectionObserverComponent when the observed element intersects\n         * with the view.\n         *\n         * @event IntersectionObserverComponent#intersecting\n         * @type {CustomEvent}\n         * @property {Object} detail - The event detail object.\n         * @property {string} detail.src - The URL or URN of the media content to be loaded.\n         * @property {string | undefined} detail.type - The type of media. Undefined if the type cannot be determined.\n         * @property {Object | undefined} detail.keySystems - DRM key systems for the loaded media.\n         */\n        this.dispatchEvent(new CustomEvent('intersecting'));\n      }\n    );\n  }\n\n  render() {\n    return html`\n      <div part=\"sentinel\"></div>\n    `;\n  }\n}\n\ncustomElements.define('intersection-observer', IntersectionObserverComponent);\n","import { css, html, LitElement } from 'lit';\nimport { animations, theme } from '../theme/theme';\n\n/**\n * A custom web component that provides a button to scroll to the top of the page.\n *\n * @element scroll-to-top-button\n */\nexport class ScrollToTopComponent extends LitElement {\n  static styles = [\n    theme,\n    animations,\n    css`\n      .scroll-to-top-button {\n        position: fixed;\n        right: 20px;\n        bottom: 20px;\n        z-index: 1;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: var(--size-7);\n        height: var(--size-7);\n        padding: 0;\n        border: none;\n        border-radius: var(--radius-round);\n      }\n\n      .scroll-to-top-button i {\n        font-size: var(--size-8);\n      }\n  `];\n\n  render() {\n    return html`\n      <button class=\"scroll-to-top-button\" title=\"Scroll to top\" \n              @click=\"${() => window.scrollTo({ top: 0, behavior: 'smooth' })}\">\n        <i class=\"material-icons-outlined\">arrow_circle_up</i>\n      </button>\n    `;\n  }\n}\n\ncustomElements.define('scroll-to-top-button', ScrollToTopComponent);\n","import router from '../router/router';\nimport { html, LitElement, unsafeCSS } from 'lit';\nimport { animations, theme } from '../theme/theme';\nimport '../core/toggle-switch-component.js';\nimport PreferencesProvider from './preferences-provider';\nimport componentCss from 'bundle-text:./settings-page.scss';\n\n/**\n * A web component that represents the settings page.\n *\n * @element settings-page\n */\nexport class SettingsPage extends LitElement {\n  static properties = {\n    autoplay: { type: Boolean, state: true },\n    muted: { type: Boolean, state: true },\n    debug: { type: Boolean, state: true }\n  };\n\n  static styles = [theme, animations, unsafeCSS(componentCss)];\n\n  constructor() {\n    super();\n    const preferences = PreferencesProvider.loadPreferences();\n\n    this.autoplay = preferences.autoplay ?? false;\n    this.muted = preferences.muted ?? true;\n    this.debug = preferences.debug ?? false;\n  }\n\n  updated(_changedProperties) {\n    super.updated(_changedProperties);\n\n    const preferences = PreferencesProvider.loadPreferences();\n\n    [..._changedProperties.keys()]\n      .filter(property => ['autoplay', 'muted', 'debug'].includes(property))\n      .forEach((property) => preferences[property] = this[property]);\n\n    PreferencesProvider.savePreferences(preferences);\n\n    if (_changedProperties.has('debug')) {\n      router.replaceState(this.debug ? { debug: 'true' } : {});\n    }\n  }\n\n  #renderToggle(property, label) {\n    return html`\n      <div part=\"toggle-container\">\n        <label for=\"${property}-switch\" part=\"label\">${label}</label>\n        <toggle-switch id=\"${property}-switch\"\n                       part=\"toggle-switch\"\n                       exportparts=\"slider, switch\"\n                       ?checked=\"${this[property]}\"\n                       @change=\"${(e) => this[property] = e.detail.checked}\">\n        </toggle-switch>\n      </div>\n    `;\n  }\n  render() {\n    return html`\n      <section class=\"fade-in\" @animationend=\"${e => e.target.classList.remove('fade-in')}\">\n        <h2 part=\"title\">Player Settings</h2>\n        ${this.#renderToggle('autoplay', 'Autoplay')}\n        ${this.#renderToggle('muted', 'Player starts muted')}\n        ${this.#renderToggle('debug', 'Enable debug mode')}\n      </section>\n    `;\n  }\n}\n\ncustomElements.define('settings-page', SettingsPage);\nrouter.addRoute('settings', 'settings-page');\n","import { html, LitElement, unsafeCSS } from 'lit';\nimport { theme } from '../theme/theme';\nimport componentCSS from 'bundle-text:./toggle-switch-component.scss';\n\n/**\n * Custom element representing a toggle switch.\n *\n * @element toggle-switch\n *\n * @csspart switch - The container for the toggle switch.\n * @csspart slider - The slider button of the toggle switch.\n *\n * @prop {Boolean} checked - Reflects the current state of the toggle switch.\n * @prop {Boolean} disabled - Indicates whether the toggle switch is disabled.\n *\n * @attribute {String} role - ARIA role for accessibility, set to 'switch'.\n * @attribute {String} tabindex - ARIA tabindex for accessibility, set to '0'.\n *\n * @fires ToggleSwitchComponent#change\n *\n * @example\n * <toggle-switch checked></toggle-switch>\n *\n * @customElement\n */\nexport class ToggleSwitchComponent extends LitElement {\n  static formAssociated = true;\n  static properties = {\n    checked: { type: Boolean, reflect: true },\n    disabled: { type: Boolean }\n  };\n\n  constructor() {\n    super();\n    this.checked = false;\n    this.disabled = false;\n  }\n\n  static styles = [\n    theme, unsafeCSS(componentCSS)\n  ];\n\n  #onKeyDown = (e) => {\n    if (e.key === ' ') {\n      e.preventDefault();\n      this.toggle();\n    }\n  };\n\n  #onClick = () => {\n    this.toggle();\n  };\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'switch');\n    }\n\n    if (!this.hasAttribute('tabindex')) {\n      this.setAttribute('tabindex', '0');\n    }\n\n    this.addEventListener('click', this.#onClick);\n    this.addEventListener('keydown', this.#onKeyDown);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.removeEventListener('click', this.#onClick);\n    this.removeEventListener('keydown', this.#onKeyDown);\n  }\n\n  toggle(force) {\n    if (!this.disabled) {\n      this.checked = force ?? !this.checked;\n    }\n  }\n\n  updated(_changedProperties) {\n    super.updated(_changedProperties);\n\n    if (_changedProperties.has('checked')) {\n      this.setAttribute('aria-checked', this.checked.toString());\n      /**\n       * Custom event dispatched when the state of the toggle switch changes.\n       *\n       * @event ToggleSwitchComponent#change\n       * @type {CustomEvent}\n       * @property {Object} detail - The event detail object.\n       * @property {Boolean} detail.checked - The new state of the toggle switch.\n       */\n      this.dispatchEvent(new CustomEvent('change', { detail: { checked: this.checked }}));\n    }\n\n  }\n\n  render() {\n    return html`\n        <div part=\"switch\">\n            <div part=\"slider\"></div>\n        </div>\n    `;\n  }\n}\n\n\ncustomElements.define('toggle-switch', ToggleSwitchComponent);\n","module.exports = \"12fc1fe7d4640d94\";","module.exports = \"320616b9fb1746f9\";","import { html, LitElement, unsafeCSS } from 'lit';\nimport { animations, theme } from '../theme/theme';\nimport router from '../router/router';\nimport componentCSS from 'bundle-text:./lists-page.scss';\nimport '../spinner/spinner-component';\nimport '../core/intersection-observer-component';\nimport '../core/scroll-to-top-component';\nimport { map } from 'lit/directives/map.js';\nimport { when } from 'lit/directives/when.js';\nimport { openPlayerModal } from '../player/player-dialog';\nimport ListsPageStateManager from './lists-page-state-manager';\nimport { listsSections } from './lists-sections';\nimport Pillarbox from '../../../src/pillarbox';\n\nexport class ListsPage extends LitElement {\n  static properties = {\n    loading: { state: true, type: Boolean },\n    stack: { state: true, type: Array },\n    level: { state: true, type: Object },\n    nextPage: { state: true, type: Function }\n  };\n\n  static styles = [\n    theme, animations, unsafeCSS(componentCSS)\n  ];\n\n  /**\n   * The abort controller for handling search cancellation.\n   *\n   * @private\n   * @type {AbortController}\n   */\n  #abortController = new AbortController();\n  /**\n   * Keeps track of the state of the list page : the current level in display, as\n   * well as the traversal stack.\n   *\n   * @private\n   * @type {ListsPageStateManager}\n   */\n  #stateManager;\n  /**\n   * The reference to the query params changed event handler.\n   *\n   * @private\n   * @type {Function}\n   */\n  #onQueryParamsChanged;\n\n  constructor() {\n    super();\n\n    this.loading = false;\n    this.#stateManager = new ListsPageStateManager(listsSections);\n    this.#updateState();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.#onQueryParamsChanged = async (event) => {\n      if (!event.detail.popstate) {\n        return;\n      }\n\n      this.abortFetch();\n      const manager = new ListsPageStateManager(this.#stateManager.root),\n        { section, bu, nodes } = event.detail.queryParams;\n\n      this.loading = true;\n      try {\n        await manager.initialize(section, bu, nodes);\n        this.#stateManager = manager;\n        this.#updateState();\n      } finally {\n        this.loading = false;\n      }\n    };\n    router.addEventListener('queryparams', this.#onQueryParamsChanged);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.abortFetch();\n    router.removeEventListener('queryparams', this.#onQueryParamsChanged);\n  }\n\n  firstUpdated(_changedProperties) {\n    super.firstUpdated(_changedProperties);\n    this.#onQueryParamsChanged(\n      { detail: { popstate: true, queryParams: router.queryParams }}\n    );\n  }\n\n  #updateState() {\n    this.stack = [...this.#stateManager.stack];\n    this.level = [...this.#stateManager.level];\n  }\n\n  /**\n   * Navigates to the specified section and node in the content tree.\n   *\n   * @param {number} sectionIndex - The index of the section.\n   * @param {number} nodeIndex - The index of the node.\n   */\n  async navigateTo(sectionIndex, nodeIndex) {\n    if (this.#stateManager.isLeafSection(sectionIndex)) {\n      const node = this.#stateManager.retrieveNode(sectionIndex, nodeIndex);\n\n      openPlayerModal({ src: node.urn, type: 'srgssr/urn' });\n    } else {\n      this.abortFetch();\n      this.loading = true;\n      try {\n        await this.#stateManager.fetchNextState(sectionIndex, nodeIndex);\n        this.#updateState();\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n\n  /**\n   * Aborts the previous fetch by cancelling the associated abort signal and\n   * creates a new abort controller for the next fetch.\n   *\n   * @returns {AbortSignal} - The abort signal associated with the new fetch.\n   */\n  abortFetch() {\n    this.#abortController?.abort('New search launched');\n    this.#abortController = new AbortController();\n\n    return this.#abortController.signal;\n  }\n\n  #toMediaButtonParams(node) {\n    return new URLSearchParams({ ...router.queryParams, src: node.urn, type: 'srgssr/urn' }).toString();\n  }\n\n  #renderMediaButton(node) {\n    const date = new Intl.DateTimeFormat('fr-CH').format(new Date(node.date));\n    const duration = Pillarbox.formatTime(node.duration / 1000);\n\n    return html`\n      <content-link title=\"${node.title}\" href=\"lists?${this.#toMediaButtonParams(node)}\">\n        <div slot=\"description\">\n          <i class=\"material-icons-outlined\">${node.mediaType === 'VIDEO' ? 'movie' : 'audiotrack'}</i>\n          <span>&nbsp;| ${date} | ${duration}</span>\n        </div>\n      </content-link>\n    `;\n  }\n\n  #toLevelParams(sectionIdx, nodeIdx) {\n    const params = this.#stateManager.paramsAt(sectionIdx, nodeIdx);\n\n    return new URLSearchParams(params).toString();\n  }\n\n  #renderLevelButton(node, sectionIdx, nodeIdx) {\n    return html`\n      <content-link title=\"${typeof node === 'string' ? node : node.title}\"\n                   href=\"lists?${this.#toLevelParams(sectionIdx, nodeIdx)}\"\n                   data-section-idx=\"${sectionIdx}\" data-node-idx=\"${nodeIdx}\">\n      </content-link>\n    `;\n  }\n\n  async #nextPage(section) {\n    const signal = this.abortFetch();\n\n    await section.fetchNext(signal);\n    this.#updateState();\n  }\n\n  #renderNodes(nodes, sectionIdx) {\n    const firstSection = this.level[0];\n    const hasIntesectionObserver = this.level.length === 1 && firstSection.next;\n\n    return html`\n        ${map(nodes, (node, idx) => html`\n            ${when(node.mediaType, () => this.#renderMediaButton(node, idx), () => this.#renderLevelButton(node, sectionIdx, idx))}\n        `)}\n        ${when(hasIntesectionObserver, () => html`\n            <intersection-observer\n                    @intersecting=\"${() => this.#nextPage(firstSection)}\">\n            </intersection-observer>\n        `)}\n    `;\n  }\n\n  async #onSectionsClicked(e) {\n    const button = e.target.closest('content-link');\n\n    if (this.loading || !('nodeIdx' in button.dataset)) return;\n\n    const sectionIndex = button.dataset.sectionIdx;\n    const nodeIndex = button.dataset.nodeIdx;\n\n    await this.navigateTo(sectionIndex, nodeIndex);\n  }\n\n  #renderResults() {\n    return html`\n        <div class=\"fade-in\"\n             @animationend=\"${e => e.target.classList.remove('fade-in')}\"\n             @click=\"${this.#onSectionsClicked.bind(this)}\">\n            ${map(this.level, (section, idx) => html`\n                <section>\n                    <h2 class=\"sticky\">${section.title}</h2>\n                    ${this.#renderNodes(section.nodes, idx)}\n                </section>\n            `)}\n        </div>\n    `;\n  }\n\n  #renderSpinner() {\n    return html`\n        <loading-spinner loading class=\"slide-up-fade-in\"\n                         @animationend=\"${e => e.target.classList.remove('slide-up-fade-in')}\">\n        </loading-spinner>\n    `;\n  }\n\n  #renderScrollToTopBtn() {\n    return html`\n        <scroll-to-top-button></scroll-to-top-button>`;\n  }\n\n  #onNavigationClicked(e) {\n    if (e.target.tagName.toLowerCase() !== 'button') return;\n    this.abortFetch();\n    this.#stateManager.fetchPreviousState(e.target.dataset.navigationIdx);\n    this.#updateState();\n    router.updateState(this.#stateManager.params, ['section', 'bu', 'nodes']);\n  }\n\n  #renderNavigation() {\n    return html`\n        <div class=\"tree-navigation-container\"\n             @click=\"${this.#onNavigationClicked.bind(this)}\">\n            ${when(this.stack.length > 0, () => html`\n                <button data-navigation-idx=\"0\">Home</button>\n            `)}\n            ${map(this.stack.slice(1), (step, idx) => html`\n                <i class=\"material-icons-outlined\">chevron_right</i>\n                <button data-navigation-idx=\"${idx + 1}\">\n                    ${step.level[step.sectionIndex].title}\n                </button>\n            `)}\n        </div>\n    `;\n  }\n\n  render() {\n    const renderScrollBtn = this.level.length === 1 && this.level[0].next;\n\n    return html`\n        ${this.#renderNavigation()}\n        ${when(this.loading, this.#renderSpinner.bind(this), this.#renderResults.bind(this))}\n        ${when(renderScrollBtn, this.#renderScrollToTopBtn.bind(this))}\n    `;\n  }\n}\n\ncustomElements.define('lists-page', ListsPage);\nrouter.addRoute('lists', 'lists-page');\n","module.exports = \"0e7e825b5eaa345e\";","import { toKebabCase } from '../core/string-utils';\n\n/**\n * Manages the state of a lists page, allowing navigation and retrieval of section data.\n *\n * @class\n */\nclass ListsPageStateManager {\n  /**\n   * Creates an instance of ListsPageStateManager.\n   *\n   * @constructor\n   * @param {Array<Section>} root - The root level of the lists page.\n   */\n  constructor(root) {\n    /**\n     * Stack to keep track of the traversal steps for navigation.\n     *\n     * @type {Array<{level: Array<Section>, sectionIndex: number, nodeIndex: number}>}\n     */\n    this.stack = [];\n    /**\n     * The current level of the content tree.\n     *\n     * @type {Array<Section>}\n     */\n    this.level = root;\n  }\n\n  /**\n   * Initializes the state manager with the provided section, business unit, and nodes.\n   *\n   * @async\n   * @param {string} section - The section to initialize.\n   * @param {string} bu - The business unit associated with the section.\n   * @param {string} nodes - A comma-separated string of nodes representing the initial state.\n   * @returns {Promise<void>} - A promise that resolves when initialization is complete.\n   *\n   * @example\n   * // Example Usage:\n   * await stateManager.initialize(\"radio-shows\", \"rts\", \"a9e7621504c6959e35c3ecbe7f6bed0446cdf8da,urn:rts:show:radio:9801398\");\n   */\n  async initialize(section, bu, nodes) {\n    if (!section || !bu) {\n      return;\n    }\n\n    const sectionIndex = this.#findSectionIndex(section);\n    const nodeIndex = this.#findNodeIndex(this.level[sectionIndex].nodes, bu);\n\n    await this.fetchNextState(sectionIndex, nodeIndex);\n\n\n    for (const nodeStr of (nodes?.split(',') || [])) {\n      const nodeIndex = this.#findNodeIndex(this.level[0].nodes, nodeStr);\n\n      await this.fetchNextState(0, nodeIndex);\n    }\n  }\n\n  /**\n   * Fetches the next state based on the provided section index and node index.\n   *\n   * @param {number} sectionIndex - The index of the section.\n   * @param {number} nodeIndex - The index of the node.\n   * @returns {Promise<void>} - A promise that resolves when the state is fetched.\n   */\n  async fetchNextState(sectionIndex, nodeIndex) {\n    const section = this.level[sectionIndex];\n\n    this.stack.push({ level: this.level, sectionIndex, nodeIndex });\n    this.level = [await section.resolve(section.nodes[nodeIndex])];\n  }\n\n  /**\n   * Fetches the previous state based on the provided stack index.\n   *\n   * @param {number} stackIndex - The index in the stack.\n   */\n  fetchPreviousState(stackIndex) {\n    this.level = this.stack[stackIndex].level;\n    this.stack.splice(stackIndex);\n  }\n\n  /**\n   * Checks if the specified section at the given index is a leaf section.\n   *\n   * @param {number} sectionIndex - The index of the section.\n   *\n   * @returns {boolean} - True if the section is a leaf section, false otherwise.\n   */\n  isLeafSection(sectionIndex) {\n    return this.level[sectionIndex]?.isLeaf();\n  }\n\n  /**\n   * Retrieves the node at the specified section and node indices.\n   *\n   * @param {number} sectionIndex - The index of the section.\n   * @param {number} nodeIndex - The index of the node.\n   *\n   * @returns {any} - The retrieved node.\n   */\n  retrieveNode(sectionIndex, nodeIndex) {\n    return this.level[sectionIndex]?.nodes[nodeIndex];\n  }\n\n  /**\n   * Gets the root level of the content tree.\n   *\n   * @returns {Array<Section>} - The root level of the content tree.\n   */\n  get root() {\n    return this.stack[0]?.level || this.level;\n  }\n\n  /**\n   * Return the current state of this manager as query params that are parsable\n   * by {@link #initialize}.\n   *\n   * @returns {{}|{bu: string, section: string, nodes?: string}} The current state as query params.\n   */\n  get params() {\n    return ListsPageStateManager.#params(this.stack);\n  }\n\n  static #params(stack) {\n    if (stack.length === 0) {\n      return {};\n    }\n\n    const root = stack[0];\n    const rootSection = root.level[root.sectionIndex];\n    const nodes = stack.slice(1).map(n => {\n      const node = n.level[n.sectionIndex].nodes[n.nodeIndex];\n\n      return node.id || node.urn;\n    });\n    let params = {\n      section: toKebabCase(rootSection.title),\n      bu: rootSection.nodes[root.nodeIndex].toLowerCase()\n    };\n\n    if (nodes && nodes.length) {\n      params['nodes'] = nodes.join(',');\n    }\n\n    return params;\n  }\n\n  paramsAt(sectionIndex, nodeIndex) {\n    return ListsPageStateManager.#params(\n      [...this.stack, { level: this.level, sectionIndex, nodeIndex }]\n    );\n  }\n\n  /**\n   * Finds the index of a section based on its title in kebab case.\n   *\n   * @private\n   * @param {string} sectionStr - The section title to find.\n   * @returns {number} - The index of the section.\n   *\n   * @example\n   * const index = stateManager.#findSectionIndex(\"Products\");\n   */\n  #findSectionIndex(sectionStr) {\n    const normalizedSectionStr = toKebabCase(sectionStr).toLowerCase();\n\n    return this.level\n      .map(s => toKebabCase(s.title).toLowerCase())\n      .findIndex(title => title === normalizedSectionStr);\n  }\n\n  /**\n   * Finds the index of a node based on its string representation.\n   *\n   * @private\n   * @param {Array<Node>} nodes - The array of nodes to search.\n   * @param {string} str - The string representation of the node to find.\n   *\n   * @returns {number} - The index of the node.\n   */\n  #findNodeIndex(nodes, str) {\n    const normalizedStr = str.toLowerCase();\n\n    return nodes\n      .map(n => (n.urn || n.id || n.toString()).toLowerCase())\n      .findIndex(n => n === normalizedStr);\n  }\n}\n\nexport default ListsPageStateManager;\n","/**\n * Converts a given string to kebab case, spaces are replaced with hyphens\n * and all letters are converted to lowercase.\n *\n * @param {string} str - The input string to be converted to kebab case.\n * @returns {string} - The input string converted to kebab case.\n *\n * @example\n * const result = toKebabCase(\"Hello World\");\n * console.log(result); // Output: \"hello-world\"\n *\n * @example\n * const result = toKebabCase(\"CamelCase Example\");\n * console.log(result); // Output: \"camelcase-example\"\n */\nexport const toKebabCase = (str) => str.replace(/\\s+/g, '-').toLowerCase();\n","import ilProvider from '../core/il-provider';\n\n/**\n * A section within the content hierarchy.\n *\n * @property {string} title - The title of the section node.\n * @property {string[]} values - An array of values associated with the section.\n * @property {function} resolve - A function that, when defined, resolves the next level\n *                                of the hierarchy asynchronously.\n */\nclass Section {\n\n  /**\n   * Creates an instance of Section.\n   *\n   * @param {Object} options - The options for creating the section.\n   * @param {string} options.title - The title of the section.\n   * @param {string[]} options.nodes - An array of nodes associated with the section.\n   * @param {function} [options.resolve] - (Optional) A function that, when defined, resolves the next level\n   *                                       of the hierarchy asynchronously.\n   * @param {function} [options.next] - (Optional) A function that, when defined, resolves the next level\n   *                                    of the hierarchy asynchronously.\n   */\n  constructor({ title, nodes, resolve = undefined, next = undefined }) {\n    this.title = title;\n    this.nodes = nodes;\n    this.resolve = resolve;\n    this.next = next;\n  }\n\n  /**\n   * Checks if the node is a leaf node (i.e., has no further levels to resolve).\n   *\n   * @returns {boolean} True if the node is a leaf node, false otherwise.\n   */\n  isLeaf() {\n    return !this.resolve;\n  }\n\n  /**\n   * Fetch more nodes from the next function if available.\n   * @param signal\n   * @returns {Promise<*>}\n   */\n  async fetchNext(signal = undefined) {\n    if (!this.next) return;\n    const data = await this.next(signal);\n\n    this.next = data.next;\n    this.nodes.push(...data.results);\n\n    return data.results;\n  }\n}\n\nconst toNodesAndNext = (data) =>  ({ nodes: data.results, next: data.next });\n\n/**\n * An asynchronous tree-like structure that allows traversing the SRG SSR content\n * by category in a hierarchical fashion.\n *\n * @type {Section[]}\n */\nexport const listsSections = [\n  new Section({\n    title: 'TV Topics',\n    nodes: ['RSI', 'RTR', 'RTS', 'SRF', 'SWI'],\n    resolve: async (bu) => new Section({\n      title: `${bu} TV Topics`,\n      nodes: await ilProvider.topics(bu),\n      resolve: async (topic) => new Section({\n        title: topic.title,\n        ...toNodesAndNext(await ilProvider.latestByTopic(topic.urn))\n      })\n    })\n  }),\n  new Section({\n    title: 'TV Shows',\n    nodes: ['RSI', 'RTR', 'RTS', 'SRF', 'SWI'],\n    resolve: async (bu) => new Section({\n      title: `${bu} TV Shows`,\n      nodes: await ilProvider.shows(bu),\n      resolve: async (show) => new Section({\n        title: show.title,\n        ...toNodesAndNext(await ilProvider.latestByShow(show.urn))\n      })\n    })\n  }),\n  new Section({\n    title: 'TV Latest Videos',\n    nodes: ['RSI', 'RTR', 'RTS', 'SRF'],\n    resolve: async (bu) => new Section({\n      title: `${bu} TV Latest Videos`,\n      ...toNodesAndNext(await ilProvider.editorial(bu))\n    })\n  }),\n  new Section({\n    title: 'TV Livestreams',\n    nodes: ['RSI', 'RTR', 'RTS', 'SRF'],\n    resolve: async (bu) => new Section({\n      title: `${bu} TV Livestreams`,\n      nodes: await ilProvider.livestreams(bu)\n    })\n  }),\n  new Section({\n    title: 'Live web',\n    nodes: ['RSI', 'RTR', 'RTS', 'SRF'],\n    resolve: async (bu) => new Section({\n      title: `${bu} Live web`,\n      ...toNodesAndNext(await ilProvider.scheduledLivestream(bu))\n    })\n  }),\n  new Section({\n    title: 'Live center',\n    nodes: ['RSI', 'RTR', 'RTS', 'SRF'],\n    resolve: async (bu) => new Section({\n      title: `${bu} Live center`,\n      nodes: await ilProvider.livecenter(bu)\n    })\n  }),\n  new Section({\n    title: 'Radio Shows',\n    nodes: ['RSI', 'RTR', 'RTS', 'SRF'],\n    resolve: async (bu) => new Section({\n      title: `${bu} Radio Channels`,\n      nodes: await ilProvider.channels(bu),\n      resolve: async (channel) => new Section({\n        title: `${channel.title} Radio shows`,\n        nodes: await ilProvider.radioShowByChannel(bu, channel.id),\n        resolve: async (show) => new Section({\n          title: show.title,\n          ...toNodesAndNext(await ilProvider.latestByShow(show.urn))\n        })\n      })\n    })\n  }),\n  new Section({\n    title: 'Radio Livestreams',\n    nodes: ['RSI', 'RTR', 'RTS', 'SRF'],\n    resolve: async (bu) => new Section({\n      title: `${bu} Radio Livestreams`,\n      nodes: await ilProvider.livestreams(bu, 'audio')\n    })\n  })\n];\n"],"names":["$parcel$interopDefault","a","__esModule","default","$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$4OnIV","$1d04fb3d6fcfa221$export$2e2bcd8739ae039","loadPreferences","JSON","parse","localStorage","getItem","savePreferences","preferences","setItem","stringify","$a61db921cb412e6c$var$DEMO_PLAYER_ID","$a61db921cb412e6c$var$DEFAULT_OPTIONS","fill","restoreEl","$a61db921cb412e6c$export$11ae10a4ef8c3aa4","window","player","muted","autoplay","debug","$a61db921cb412e6c$export$64a35e4be81ccfc0","getPlayer","dispose","pillarbox","videojs","$c81d632c93adcfed$exports","$30933cb119085804$exports","$30933cb119085804$var$balanced","b","str","RegExp","$30933cb119085804$var$maybeMatch","r","$30933cb119085804$var$range","start","end","pre","slice","body","length","post","reg","m","match","begs","beg","left","right","result","ai","indexOf","bi","i","push","pop","range","substr","$c81d632c93adcfed$var$expand","isTop","expansions","test","k","expansion","isNumericSequence","isAlphaSequence","isSequence","isOptions","$c81d632c93adcfed$var$escClose","n","split","$c81d632c93adcfed$var$parseCommaParts","parts","p","postParts","shift","apply","map","$c81d632c93adcfed$var$embrace","N","c","x","$c81d632c93adcfed$var$numeric","y","width","Math","max","incr","abs","$c81d632c93adcfed$var$lte","$c81d632c93adcfed$var$gte","pad","some","$c81d632c93adcfed$var$isPadded","String","fromCharCode","need","z","Array","join","j","$c81d632c93adcfed$var$escSlash","$c81d632c93adcfed$var$escOpen","$c81d632c93adcfed$var$escComma","$c81d632c93adcfed$var$escPeriod","$c81d632c93adcfed$var$unescapeBraces","random","parseInt","charCodeAt","el","$5e7996718b7e3ba8$export$fd15c38a89c33022","pattern","TypeError","$a278060bbdc395f8$var$posixClasses","$a278060bbdc395f8$var$braceEscape","s","replace","$a278060bbdc395f8$var$regexpEscape","$a278060bbdc395f8$var$rangesToString","ranges","$a278060bbdc395f8$export$542081d93172af","glob","position","charAt","negs","pos","sawStart","uflag","escaping","negate","endPos","rangeStart","WHILE","cls","unip","u","neg","Object","entries","startsWith","sranges","snegs","$4ffc8d515e45a860$export$e8bacd2802a88316","windowsPathsNoEscape","$c9bb26969dd669b7$var$types","Set","$c9bb26969dd669b7$var$isExtglobType","has","$c9bb26969dd669b7$var$startNoDot","$c9bb26969dd669b7$var$addPatternStart","$c9bb26969dd669b7$var$justDots","$c9bb26969dd669b7$var$reSpecials","$c9bb26969dd669b7$var$regExpEscape","$c9bb26969dd669b7$var$qmark","$c9bb26969dd669b7$var$star","$c9bb26969dd669b7$var$starNoEmpty","$c9bb26969dd669b7$export$f65a2bad84928952","type","root","hasMagic","parent","parentIndex","filledNegs","options","toString","emptyExt","constructor","undefined","fillNegs","pp","part","copyIn","toJSON","ret","isStart","unshift","isEnd","pl","clone","parseAST","ast","opt","inBrace","braceStart","braceNeg","acc","noext","ext","substring","fromGlob","toMMPattern","re","toRegExpSource","nocase","nocaseMagicOnly","toUpperCase","toLowerCase","assign","_src","_glob","allowDot","dot","noEmpty","src","_","parseGlob","needNoTrav","aps","needNoDot","repeated","partsToRegExp","bodyDotAllowed","_hasMagic","filter","needUflag","consumed","magic","$cfae44f0dfdf62c0$exports","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$var$defaultSetTimout","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","setTimeout","e","clearTimeout","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","concat","$cfae44f0dfdf62c0$var$drainQueue","timeout","len","run","$cfae44f0dfdf62c0$var$runClearTimeout","marker","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","nextTick","args","arguments","prototype","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","$5ad63134f2f5e985$export$262af1bf5171b3a1","nocomment","$5ad63134f2f5e985$export$cdceb28afdae3ea9","$5ad63134f2f5e985$var$starDotExtRE","$5ad63134f2f5e985$var$starDotExtTest","f","endsWith","$5ad63134f2f5e985$var$starDotExtTestDot","$5ad63134f2f5e985$var$starDotExtTestNocase","$5ad63134f2f5e985$var$starDotExtTestNocaseDot","$5ad63134f2f5e985$var$starDotStarRE","$5ad63134f2f5e985$var$starDotStarTest","includes","$5ad63134f2f5e985$var$starDotStarTestDot","$5ad63134f2f5e985$var$dotStarRE","$5ad63134f2f5e985$var$dotStarTest","$5ad63134f2f5e985$var$starRE","$5ad63134f2f5e985$var$starTest","$5ad63134f2f5e985$var$starTestDot","$5ad63134f2f5e985$var$qmarksRE","$5ad63134f2f5e985$var$qmarksTestNocase","$0","$5ad63134f2f5e985$var$qmarksTestNoExt","$5ad63134f2f5e985$var$qmarksTestNocaseDot","$5ad63134f2f5e985$var$qmarksTestNoExtDot","$5ad63134f2f5e985$var$qmarksTestDot","$5ad63134f2f5e985$var$qmarksTest","$5ad63134f2f5e985$var$defaultPlatform","platform","$5ad63134f2f5e985$var$path","win32","sep","posix","$5ad63134f2f5e985$export$5aee1a5bd9743d8f","$5ad63134f2f5e985$export$6c01ffe652e570ac","Symbol","GLOBSTAR","$5ad63134f2f5e985$var$ext","defaults","def","keys","orig","Minimatch","AST","unescape","escape","makeRe","braceExpand","list","$5ad63134f2f5e985$export$3dcea0790d30fa81","nobrace","mm","nonull","$5ad63134f2f5e985$var$globMagic","$5ad63134f2f5e985$var$regExpEscape","set","nonegate","comment","empty","preserveMultipleSlashes","partial","globSet","globParts","isWindows","windowsNoMagicRoot","regexp","allowWindowsEscape","make","magicalBraces","parseNegate","console","error","rawGlobParts","slashSplit","preprocess","__","isUNC","isDrive","ss","noglobstar","optimizationLevel","firstPhasePreProcess","secondPhasePreProcess","levelOneOptimize","adjascentGlobstarOptimize","gs","splice","reduce","prev","levelTwoFileOptimize","isArray","didSomething","dd","gss","next","p2","other","splin","needDot","matched","partsMatch","emptyGSMatch","which","negateOffset","matchOne","file","fileDrive","fileUNC","patternDrive","patternUNC","fdi","pdi","fd","pd","fi","pi","fl","hit","fr","pr","swallowee","fastTest","twoStar","$5ad63134f2f5e985$var$qmark","flags","add","forEach","open","close","ex","ff","filename","matchBase","flipNegate","$ee5e9ca62ce1cc5e$var$Router","EventTarget","defaultPath","currentRoute","currentQueryParams","routes","addEventListener","queryParams","fromEntries","URL","location","href","searchParams","handleRouteChange","pathname","addRoute","component","destroy","path","isActiveRoute","findRoute","find","navigateTo","url","normalizedPath","trim","base","search","URLSearchParams","history","pushState","updateState","keysToRemove","filteredParams","key","replaceState","newParams","popstate","matchCurrentParams","dispatchEvent","CustomEvent","detail","route","updateCurrentRoute","params","paramsKeys","every","$ee5e9ca62ce1cc5e$export$2e2bcd8739ae039","$54e2f009849dffbd$var$dialog","document","getElementById","documentElement","style","overflowY","querySelector","classList","toggle","target","$54e2f009849dffbd$var$toParams","keySystems","vendor","$54e2f009849dffbd$export$3c8d206a213df2ed","showModal","$54e2f009849dffbd$export$7b3648a3edd9643f","$54e2f009849dffbd$var$toKeySystem","keySystem","certificateUrl","licenseUrl","$54e2f009849dffbd$var$loadPlayerFromRouter","$1914347b4edf3c73$exports","$b0c6b7520e7d4b94$exports","$3233927aa82734f9$var$t","$3233927aa82734f9$export$b4d10f6001c083c2","ShadowRoot","ShadyCSS","nativeShadow","Document","CSSStyleSheet","$3233927aa82734f9$var$s","$3233927aa82734f9$var$o","WeakMap","$3233927aa82734f9$export$505d1e8739bad805","t","o","_$cssResult$","cssText","styleSheet","get","replaceSync","$3233927aa82734f9$export$8d80f9cac07cdb3","$3233927aa82734f9$export$dbf350e5966cf602","$3233927aa82734f9$export$2ca4a66ec4cecb90","adoptedStyleSheets","createElement","litNonce","setAttribute","textContent","appendChild","$3233927aa82734f9$export$ee69dfd951e24778","cssRules","is","$27fcf98b67c2a783$var$i","defineProperty","$27fcf98b67c2a783$var$e","getOwnPropertyDescriptor","$27fcf98b67c2a783$var$r","getOwnPropertyNames","$27fcf98b67c2a783$var$h","getOwnPropertySymbols","$27fcf98b67c2a783$var$o","getPrototypeOf","$27fcf98b67c2a783$var$n","$27fcf98b67c2a783$var$a","$27fcf98b67c2a783$var$c","trustedTypes","$27fcf98b67c2a783$var$l","emptyScript","$27fcf98b67c2a783$var$p","reactiveElementPolyfillSupport","$27fcf98b67c2a783$var$d","$27fcf98b67c2a783$export$7312b35fbf521afb","toAttribute","Boolean","fromAttribute","Number","$27fcf98b67c2a783$export$53a6892c50694894","$27fcf98b67c2a783$var$y","attribute","converter","reflect","hasChanged","metadata","litPropertyMetadata","$27fcf98b67c2a783$export$c7c07a37856565d","HTMLElement","addInitializer","_$Ei","l","observedAttributes","finalize","_$Eh","createProperty","state","elementProperties","noAccessor","getPropertyDescriptor","h","requestUpdate","configurable","enumerable","getPropertyOptions","hasOwnProperty","Map","finalized","properties","_$Eu","elementStyles","finalizeStyles","styles","flat","reverse","_$Ep","isUpdatePending","hasUpdated","_$Em","_$Ev","_$Eg","Promise","enableUpdating","_$AL","_$ES","addController","_$E_","renderRoot","isConnected","hostConnected","removeController","delete","size","createRenderRoot","shadowRoot","attachShadow","shadowRootOptions","connectedCallback","disconnectedCallback","hostDisconnected","attributeChangedCallback","_$AK","_$EO","removeAttribute","C","_$EP","_$Ej","reject","scheduleUpdate","performUpdate","wrapped","shouldUpdate","willUpdate","hostUpdate","update","_$ET","_$AE","hostUpdated","firstUpdated","updated","updateComplete","getUpdateComplete","mode","ReactiveElement","reactiveElementVersions","$e5ed8027d647799b$var$t","$e5ed8027d647799b$var$i","$e5ed8027d647799b$var$s","createPolicy","createHTML","$e5ed8027d647799b$var$e","$e5ed8027d647799b$var$h","$e5ed8027d647799b$var$o","$e5ed8027d647799b$var$n","$e5ed8027d647799b$var$r","$e5ed8027d647799b$var$l","createComment","$e5ed8027d647799b$var$c","$e5ed8027d647799b$var$a","$e5ed8027d647799b$var$u","iterator","$e5ed8027d647799b$var$d","$e5ed8027d647799b$var$f","$e5ed8027d647799b$var$v","$e5ed8027d647799b$var$_","$e5ed8027d647799b$var$m","$e5ed8027d647799b$var$p","$e5ed8027d647799b$var$g","$e5ed8027d647799b$var$$","$e5ed8027d647799b$var$y","_$litType$","strings","values","$e5ed8027d647799b$export$c0bb0b647f701bb5","$e5ed8027d647799b$export$9c068ae9cc5db4e8","for","$e5ed8027d647799b$export$45b790e32b2810ee","$e5ed8027d647799b$var$A","$e5ed8027d647799b$var$E","createTreeWalker","$e5ed8027d647799b$var$C","$e5ed8027d647799b$var$P","d","lastIndex","exec","$e5ed8027d647799b$var$V","v","currentNode","content","firstChild","replaceWith","childNodes","nextNode","nodeType","hasAttributes","getAttributeNames","getAttribute","index","ctor","$e5ed8027d647799b$var$k","$e5ed8027d647799b$var$H","$e5ed8027d647799b$var$I","$e5ed8027d647799b$var$R","tagName","append","data","innerHTML","$e5ed8027d647799b$var$N","_$Co","_$Cl","_$litDirective$","_$AO","_$AT","_$AS","$e5ed8027d647799b$var$S","_$AV","_$AN","_$AD","_$AM","parentNode","_$AU","creationScope","importNode","$e5ed8027d647799b$var$M","nextSibling","$e5ed8027d647799b$var$L","_$AI","_$Cv","_$AH","_$AA","_$AB","startNode","endNode","_$AR","g","$","T","insertBefore","createTextNode","_$AC","_$AP","remove","setConnected","element","O","toggleAttribute","capture","passive","removeEventListener","handleEvent","host","$e5ed8027d647799b$var$Z","litHtmlPolyfillSupport","litHtmlVersions","$e5ed8027d647799b$export$b3890eb0ae9dca99","renderBefore","_$litPart$","$fe586ba0757c37f7$export$3f2f9f5909897157","renderOptions","_$Do","render","_$litElement$","litElementHydrateSupport","LitElement","$fe586ba0757c37f7$var$r","litElementPolyfillSupport","litElementVersions","$3baabda811939da5$export$99b43ad1ed32e735","$3baabda811939da5$export$befdefbdce210f91","_$Ct","_$Ci","$0c76f114343011b1$export$3bebd1f0e3943985","et","directiveName","vt","raw","resultType","$0c76f114343011b1$export$b6e69390c23686fb","$bfe18e8a91052d2d$var$t","$bfe18e8a91052d2d$export$1cb98903879b8bf5","$ec807946e5e69539$exports","$356a447a83d57522$export$bca14c5b3b88a9c9","$356a447a83d57522$export$7f9953c70dacfd7f","customElements","define","selected","updateSelected","origin","onClick","event","preventDefault","$d125bb14449a55ba$exports","$a2ce308324cf5a5c$export$22a378f9b7f1c84e","onRouteUpdated","VERSION","$406b40d5dbcaec7e$exports","$0e5c059fc79abe53$export$56cc687933817664","it","st","$de95cfbbb35218c3$export$4752de7af8489f99","drmSettings","drmSettingsShown","initDrmSettings","submitMedia","handleLoadBarKeyUp","value","btnSettingsClassMap","drmSettingsTemplate","_changedProperties","onFormAnimationEnd","contains","formAnimationClassMap","$3fb9073b849654e3$exports","$769a58f5d65b2ce2$export$24e84480ca50488d","$d2794e412c64e2be$export$2e2bcd8739ae039","$e0ecebd5da923169$export$871de8747c9eaa88","$5478b4ac633a513e$export$a55877ca9db47377","$a3ab66be9c16fbba$export$ab3b36b1d858cfdc","section","examples","example","description","$5ed491bf9cfc16f6$exports","$04672841e8d67895$exports","$10959f7350a8fa7f$export$623254183196058d","bu","query","handleSearchBarKeyUp","handleSelectChange","property","clearSearchBar","fn","debounce","$ea2ff1e94ba678e0$var$DEFAULT_QUERY_PARAMS","$ea2ff1e94ba678e0$var$DEFAULT_SEARCH_PARAMS","$ea2ff1e94ba678e0$var$DEFAULT_SHOWLIST_PARAMS","$ea2ff1e94ba678e0$var$toMedia","urn","mediaType","date","duration","$ea2ff1e94ba678e0$export$2e2bcd8739ae039","hostName","baseUrl","signal","fetch","toResults","searchResultMediaList","results","nextProvider","topics","transmission","topicList","latestByTopic","topicUrn","pageSize","mediaList","shows","showList","latestByShow","showUrn","episodeList","editorial","livestreams","scheduledLivestream","livecenter","channels","channelList","radioShowByChannel","channelId","then","response","ok","json","catch","reason","nextUrl","resultMapper","nextData","$4cca4a9f83c81a97$exports","$f85b88e478e8d5fc$export$b89c56aa2355c84","loading","$29c14111c42ebe68$var$DEFAULT_INT_OPTIONS","rootMargin","threshold","$29c14111c42ebe68$var$onIntersecting","callback","IntersectionObserver","entry","isIntersecting","observe","$532fd685b226af53$export$d7bc076340ee0582","scrollTo","top","behavior","$574dff8cba2aa561$export$a54ec244c8863715","nextPage","Function","abortController","AbortController","onQueryParamsChanged","searchBar","abortSearch","onSearchBarChanged","fetchNextPage","abort","toQueryParams","renderButton","Intl","DateTimeFormat","format","Date","formatTime","renderResults","resultsClassMap","bind","renderSpinner","renderScrollToTopBtn","$8a6ac94ac07fb9c7$exports","$72dc08c47d24c983$export$f803919487061f17","formAssociated","checked","disabled","onKeyDown","hasAttribute","force","$f4d31c88ef3af4ba$exports","$8da8438256938e39$export$8f6dcfe950367406","renderToggle","label","$eefafb93ca452263$exports","$1fbb3dd11a9ef521$export$73bda83cddbc7187","$97cf939ffe4a74b2$var$ListsPageStateManager","stack","level","initialize","nodes","sectionIndex","findSectionIndex","nodeIndex","findNodeIndex","nodeStr","fetchNextState","resolve","fetchPreviousState","stackIndex","isLeafSection","isLeaf","retrieveNode","rootSection","node","paramsAt","sectionStr","normalizedSectionStr","findIndex","normalizedStr","$80ddaff76be80c29$var$Section","fetchNext","$80ddaff76be80c29$var$toNodesAndNext","$80ddaff76be80c29$export$b7bd107105965dda","topic","show","channel","$7adac226aaa535fd$export$4546797870416e9b","stateManager","abortFetch","manager","toMediaButtonParams","renderMediaButton","toLevelParams","sectionIdx","nodeIdx","renderLevelButton","renderNodes","firstSection","hasIntesectionObserver","idx","onSectionsClicked","button","closest","dataset","onNavigationClicked","navigationIdx","renderNavigation","step","renderScrollBtn","$b2124721a73c4f6e$var$preferences","global","emptyStringForBooleanAttribute","polyfillSupport","JSCompiler_renameProperty","prop","_obj","defaultConverter","fromValue","notEqual","old","defaultPropertyDeclaration","initializer","this","__prepare","_initializers","__attributeToPropertyMap","descriptor","oldValue","superCtor","props","propKeys","attr","__attributeNameForProperty","Infinity","getCompatibleStyle","super","__instanceProperties","__reflectingProperty","__initialize","__updatePromise","res","_$changedProperties","__saveInstanceProperties","controller","__controllers","instanceProperties","adoptStyles","_requestedUpdate","_old","_$attributeToProperty","__propertyToAttribute","attrValue","propName","initial","initialValue","_$changeProperty","__enqueueUpdate","__reflectingProperties","changedProperties","__markUpdated","_$didUpdate","supportsAdoptingStyleSheets","constructionToken","cssTagCache","CSSResult","safeToken","_strings","_styleSheet","cacheable","unsafeCSS","css","textFromCSSResult","nonce","sheet","rule","cssResultFromStyleSheet","policy","boundAttributeSuffix","markerMatch","nodeMarker","createMarker","isPrimitive","isIterable","SPACE_CHAR","textEndRegex","commentEndRegex","comment2EndRegex","tagEndRegex","singleQuoteAttrEndRegex","doubleQuoteAttrEndRegex","rawTextElement","tag","html","svg","noChange","nothing","templateCache","walker","trustFromTemplateString","tsa","stringFromTSA","getTemplateHtml","attrNames","rawTextEndRegex","regex","attrName","attrNameEndIndex","Template","attrNameIndex","partCount","svgElement","realName","statics","PropertyPart","BooleanAttributePart","EventPart","AttributePart","_options","resolveDirective","attributeIndex","currentDirective","__directives","__directive","nextDirectiveConstructor","_$initialize","_$resolve","TemplateInstance","template","_$parts","_$disconnectableChildren","_$template","_$parent","_$isConnected","_clone","fragment","partIndex","templatePart","ChildPart","ElementPart","_update","_$setValue","__isConnected","_$committedValue","_$startNode","_$endNode","directiveParent","_$clear","_commitText","_commitTemplateResult","_commitNode","_commitIterable","_insert","_$getTemplate","instance","itemParts","itemPart","item","from","_$notifyConnectionChanged","valueIndex","noCommit","change","_commitValue","newListener","oldListener","shouldRemoveListener","shouldAddListener","_$LH","_boundAttributeSuffix","_marker","_markerMatch","_HTML_RESULT","_getTemplateHtml","_TemplateInstance","_isIterable","_resolveDirective","_ChildPart","_AttributePart","_BooleanAttributePart","_EventPart","_PropertyPart","_ElementPart","container","partOwnerNode","__childPart","_$LE","isServer","UnsafeSVGDirective","UnsafeHTMLDirective","unsafeSVG","directive","PartType","ATTRIBUTE","CHILD","PROPERTY","BOOLEAN_ATTRIBUTE","EVENT","ELEMENT","Directive","_partInfo","__part","__attributeIndex","_part","partInfo","_value","_templateResult","unsafeHTML","classMap","classInfo","_previousClasses","_staticClasses","items","when","condition","trueCase","falseCase"],"version":3,"file":"index.52596b25.js.map"}