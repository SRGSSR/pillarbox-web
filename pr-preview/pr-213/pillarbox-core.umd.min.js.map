{"version":3,"file":"pillarbox-core.umd.min.js","sources":["../node_modules/global/window.js","../node_modules/dom-walk/index.js","../node_modules/min-document/dom-comment.js","../node_modules/min-document/dom-text.js","../node_modules/min-document/event/dispatch-event.js","../node_modules/min-document/event/add-event-listener.js","../node_modules/min-document/event/remove-event-listener.js","../node_modules/min-document/serialize.js","../node_modules/min-document/dom-element.js","../node_modules/min-document/dom-fragment.js","../node_modules/min-document/event.js","../node_modules/min-document/document.js","../node_modules/min-document/index.js","../node_modules/global/document.js","../node_modules/keycode/index.js","../node_modules/safe-json-parse/tuple.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/is-function/index.js","../node_modules/@videojs/xhr/lib/http-handler.js","../node_modules/@videojs/xhr/lib/index.js","../node_modules/videojs-vtt.js/lib/vtt.js","../node_modules/videojs-vtt.js/lib/vttcue.js","../node_modules/videojs-vtt.js/lib/vttregion.js","../node_modules/videojs-vtt.js/lib/browser-index.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/url-toolkit/src/url-toolkit.js","../node_modules/@videojs/vhs-utils/es/resolve-url.js","../node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/stream.js","../node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","../node_modules/m3u8-parser/dist/m3u8-parser.es.js","../node_modules/@videojs/vhs-utils/es/codecs.js","../node_modules/@videojs/vhs-utils/es/byte-helpers.js","../node_modules/@videojs/vhs-utils/es/media-types.js","../node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","../node_modules/@xmldom/xmldom/lib/conventions.js","../node_modules/@xmldom/xmldom/lib/dom.js","../node_modules/@xmldom/xmldom/lib/entities.js","../node_modules/@xmldom/xmldom/lib/sax.js","../node_modules/@xmldom/xmldom/lib/dom-parser.js","../node_modules/@xmldom/xmldom/lib/index.js","../node_modules/mpd-parser/dist/mpd-parser.es.js","../node_modules/@videojs/vhs-utils/es/media-groups.js","../node_modules/mux.js/lib/utils/numbers.js","../node_modules/mux.js/lib/tools/parse-sidx.js","../node_modules/@videojs/vhs-utils/es/id3-helpers.js","../node_modules/@videojs/vhs-utils/es/mp4-helpers.js","../node_modules/@videojs/vhs-utils/es/ebml-helpers.js","../node_modules/@videojs/vhs-utils/es/nal-helpers.js","../node_modules/@videojs/vhs-utils/es/containers.js","../node_modules/mux.js/lib/utils/clock.js","../node_modules/video.js/dist/video.es.js","../node_modules/videojs-contrib-eme/dist/videojs-contrib-eme.es.js","../src/components/player.js","../src/pillarbox.js"],"sourcesContent":["var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","var slice = Array.prototype.slice\n\nmodule.exports = iterativelyWalk\n\nfunction iterativelyWalk(nodes, cb) {\n    if (!('length' in nodes)) {\n        nodes = [nodes]\n    }\n    \n    nodes = slice.call(nodes)\n\n    while(nodes.length) {\n        var node = nodes.shift(),\n            ret = cb(node)\n\n        if (ret) {\n            return ret\n        }\n\n        if (node.childNodes && node.childNodes.length) {\n            nodes = slice.call(node.childNodes).concat(nodes)\n        }\n    }\n}\n","module.exports = Comment\n\nfunction Comment(data, owner) {\n    if (!(this instanceof Comment)) {\n        return new Comment(data, owner)\n    }\n\n    this.data = data\n    this.nodeValue = data\n    this.length = data.length\n    this.ownerDocument = owner || null\n}\n\nComment.prototype.nodeType = 8\nComment.prototype.nodeName = \"#comment\"\n\nComment.prototype.toString = function _Comment_toString() {\n    return \"[object Comment]\"\n}\n","module.exports = DOMText\n\nfunction DOMText(value, owner) {\n    if (!(this instanceof DOMText)) {\n        return new DOMText(value)\n    }\n\n    this.data = value || \"\"\n    this.length = this.data.length\n    this.ownerDocument = owner || null\n}\n\nDOMText.prototype.type = \"DOMTextNode\"\nDOMText.prototype.nodeType = 3\nDOMText.prototype.nodeName = \"#text\"\n\nDOMText.prototype.toString = function _Text_toString() {\n    return this.data\n}\n\nDOMText.prototype.replaceData = function replaceData(index, length, value) {\n    var current = this.data\n    var left = current.substring(0, index)\n    var right = current.substring(index + length, current.length)\n    this.data = left + value + right\n    this.length = this.data.length\n}\n","module.exports = dispatchEvent\n\nfunction dispatchEvent(ev) {\n    var elem = this\n    var type = ev.type\n\n    if (!ev.target) {\n        ev.target = elem\n    }\n\n    if (!elem.listeners) {\n        elem.listeners = {}\n    }\n\n    var listeners = elem.listeners[type]\n\n    if (listeners) {\n        return listeners.forEach(function (listener) {\n            ev.currentTarget = elem\n            if (typeof listener === 'function') {\n                listener(ev)\n            } else {\n                listener.handleEvent(ev)\n            }\n        })\n    }\n\n    if (elem.parentNode) {\n        elem.parentNode.dispatchEvent(ev)\n    }\n}\n","module.exports = addEventListener\n\nfunction addEventListener(type, listener) {\n    var elem = this\n\n    if (!elem.listeners) {\n        elem.listeners = {}\n    }\n\n    if (!elem.listeners[type]) {\n        elem.listeners[type] = []\n    }\n\n    if (elem.listeners[type].indexOf(listener) === -1) {\n        elem.listeners[type].push(listener)\n    }\n}\n","module.exports = removeEventListener\n\nfunction removeEventListener(type, listener) {\n    var elem = this\n\n    if (!elem.listeners) {\n        return\n    }\n\n    if (!elem.listeners[type]) {\n        return\n    }\n\n    var list = elem.listeners[type]\n    var index = list.indexOf(listener)\n    if (index !== -1) {\n        list.splice(index, 1)\n    }\n}\n","module.exports = serializeNode\n\nvar voidElements = [\"area\",\"base\",\"br\",\"col\",\"embed\",\"hr\",\"img\",\"input\",\"keygen\",\"link\",\"menuitem\",\"meta\",\"param\",\"source\",\"track\",\"wbr\"];\n\nfunction serializeNode(node) {\n    switch (node.nodeType) {\n        case 3:\n            return escapeText(node.data)\n        case 8:\n            return \"<!--\" + node.data + \"-->\"\n        default:\n            return serializeElement(node)\n    }\n}\n\nfunction serializeElement(elem) {\n    var strings = []\n\n    var tagname = elem.tagName\n\n    if (elem.namespaceURI === \"http://www.w3.org/1999/xhtml\") {\n        tagname = tagname.toLowerCase()\n    }\n\n    strings.push(\"<\" + tagname + properties(elem) + datasetify(elem))\n\n    if (voidElements.indexOf(tagname) > -1) {\n        strings.push(\" />\")\n    } else {\n        strings.push(\">\")\n\n        if (elem.childNodes.length) {\n            strings.push.apply(strings, elem.childNodes.map(serializeNode))\n        } else if (elem.textContent || elem.innerText) {\n            strings.push(escapeText(elem.textContent || elem.innerText))\n        } else if (elem.innerHTML) {\n            strings.push(elem.innerHTML)\n        }\n\n        strings.push(\"</\" + tagname + \">\")\n    }\n\n    return strings.join(\"\")\n}\n\nfunction isProperty(elem, key) {\n    var type = typeof elem[key]\n\n    if (key === \"style\" && Object.keys(elem.style).length > 0) {\n      return true\n    }\n\n    return elem.hasOwnProperty(key) &&\n        (type === \"string\" || type === \"boolean\" || type === \"number\") &&\n        key !== \"nodeName\" && key !== \"className\" && key !== \"tagName\" &&\n        key !== \"textContent\" && key !== \"innerText\" && key !== \"namespaceURI\" &&  key !== \"innerHTML\"\n}\n\nfunction stylify(styles) {\n    if (typeof styles === 'string') return styles\n    var attr = \"\"\n    Object.keys(styles).forEach(function (key) {\n        var value = styles[key]\n        key = key.replace(/[A-Z]/g, function(c) {\n            return \"-\" + c.toLowerCase();\n        })\n        attr += key + \":\" + value + \";\"\n    })\n    return attr\n}\n\nfunction datasetify(elem) {\n    var ds = elem.dataset\n    var props = []\n\n    for (var key in ds) {\n        props.push({ name: \"data-\" + key, value: ds[key] })\n    }\n\n    return props.length ? stringify(props) : \"\"\n}\n\nfunction stringify(list) {\n    var attributes = []\n    list.forEach(function (tuple) {\n        var name = tuple.name\n        var value = tuple.value\n\n        if (name === \"style\") {\n            value = stylify(value)\n        }\n\n        attributes.push(name + \"=\" + \"\\\"\" + escapeAttributeValue(value) + \"\\\"\")\n    })\n\n    return attributes.length ? \" \" + attributes.join(\" \") : \"\"\n}\n\nfunction properties(elem) {\n    var props = []\n    for (var key in elem) {\n        if (isProperty(elem, key)) {\n            props.push({ name: key, value: elem[key] })\n        }\n    }\n\n    for (var ns in elem._attributes) {\n      for (var attribute in elem._attributes[ns]) {\n        var prop = elem._attributes[ns][attribute]\n        var name = (prop.prefix ? prop.prefix + \":\" : \"\") + attribute\n        props.push({ name: name, value: prop.value })\n      }\n    }\n\n    if (elem.className) {\n        props.push({ name: \"class\", value: elem.className })\n    }\n\n    return props.length ? stringify(props) : \"\"\n}\n\nfunction escapeText(s) {\n    var str = '';\n\n    if (typeof(s) === 'string') { \n        str = s; \n    } else if (s) {\n        str = s.toString();\n    }\n\n    return str\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n}\n\nfunction escapeAttributeValue(str) {\n    return escapeText(str).replace(/\"/g, \"&quot;\")\n}\n","var domWalk = require(\"dom-walk\")\nvar dispatchEvent = require(\"./event/dispatch-event.js\")\nvar addEventListener = require(\"./event/add-event-listener.js\")\nvar removeEventListener = require(\"./event/remove-event-listener.js\")\nvar serializeNode = require(\"./serialize.js\")\n\nvar htmlns = \"http://www.w3.org/1999/xhtml\"\n\nmodule.exports = DOMElement\n\nfunction DOMElement(tagName, owner, namespace) {\n    if (!(this instanceof DOMElement)) {\n        return new DOMElement(tagName)\n    }\n\n    var ns = namespace === undefined ? htmlns : (namespace || null)\n\n    this.tagName = ns === htmlns ? String(tagName).toUpperCase() : tagName\n    this.nodeName = this.tagName\n    this.className = \"\"\n    this.dataset = {}\n    this.childNodes = []\n    this.parentNode = null\n    this.style = {}\n    this.ownerDocument = owner || null\n    this.namespaceURI = ns\n    this._attributes = {}\n\n    if (this.tagName === 'INPUT') {\n      this.type = 'text'\n    }\n}\n\nDOMElement.prototype.type = \"DOMElement\"\nDOMElement.prototype.nodeType = 1\n\nDOMElement.prototype.appendChild = function _Element_appendChild(child) {\n    if (child.parentNode) {\n        child.parentNode.removeChild(child)\n    }\n\n    this.childNodes.push(child)\n    child.parentNode = this\n\n    return child\n}\n\nDOMElement.prototype.replaceChild =\n    function _Element_replaceChild(elem, needle) {\n        // TODO: Throw NotFoundError if needle.parentNode !== this\n\n        if (elem.parentNode) {\n            elem.parentNode.removeChild(elem)\n        }\n\n        var index = this.childNodes.indexOf(needle)\n\n        needle.parentNode = null\n        this.childNodes[index] = elem\n        elem.parentNode = this\n\n        return needle\n    }\n\nDOMElement.prototype.removeChild = function _Element_removeChild(elem) {\n    // TODO: Throw NotFoundError if elem.parentNode !== this\n\n    var index = this.childNodes.indexOf(elem)\n    this.childNodes.splice(index, 1)\n\n    elem.parentNode = null\n    return elem\n}\n\nDOMElement.prototype.insertBefore =\n    function _Element_insertBefore(elem, needle) {\n        // TODO: Throw NotFoundError if referenceElement is a dom node\n        // and parentNode !== this\n\n        if (elem.parentNode) {\n            elem.parentNode.removeChild(elem)\n        }\n\n        var index = needle === null || needle === undefined ?\n            -1 :\n            this.childNodes.indexOf(needle)\n\n        if (index > -1) {\n            this.childNodes.splice(index, 0, elem)\n        } else {\n            this.childNodes.push(elem)\n        }\n\n        elem.parentNode = this\n        return elem\n    }\n\nDOMElement.prototype.setAttributeNS =\n    function _Element_setAttributeNS(namespace, name, value) {\n        var prefix = null\n        var localName = name\n        var colonPosition = name.indexOf(\":\")\n        if (colonPosition > -1) {\n            prefix = name.substr(0, colonPosition)\n            localName = name.substr(colonPosition + 1)\n        }\n        if (this.tagName === 'INPUT' && name === 'type') {\n          this.type = value;\n        }\n        else {\n          var attributes = this._attributes[namespace] || (this._attributes[namespace] = {})\n          attributes[localName] = {value: value, prefix: prefix}\n        }\n    }\n\nDOMElement.prototype.getAttributeNS =\n    function _Element_getAttributeNS(namespace, name) {\n        var attributes = this._attributes[namespace];\n        var value = attributes && attributes[name] && attributes[name].value\n        if (this.tagName === 'INPUT' && name === 'type') {\n          return this.type;\n        }\n        if (typeof value !== \"string\") {\n            return null\n        }\n        return value\n    }\n\nDOMElement.prototype.removeAttributeNS =\n    function _Element_removeAttributeNS(namespace, name) {\n        var attributes = this._attributes[namespace];\n        if (attributes) {\n            delete attributes[name]\n        }\n    }\n\nDOMElement.prototype.hasAttributeNS =\n    function _Element_hasAttributeNS(namespace, name) {\n        var attributes = this._attributes[namespace]\n        return !!attributes && name in attributes;\n    }\n\nDOMElement.prototype.setAttribute = function _Element_setAttribute(name, value) {\n    return this.setAttributeNS(null, name, value)\n}\n\nDOMElement.prototype.getAttribute = function _Element_getAttribute(name) {\n    return this.getAttributeNS(null, name)\n}\n\nDOMElement.prototype.removeAttribute = function _Element_removeAttribute(name) {\n    return this.removeAttributeNS(null, name)\n}\n\nDOMElement.prototype.hasAttribute = function _Element_hasAttribute(name) {\n    return this.hasAttributeNS(null, name)\n}\n\nDOMElement.prototype.removeEventListener = removeEventListener\nDOMElement.prototype.addEventListener = addEventListener\nDOMElement.prototype.dispatchEvent = dispatchEvent\n\n// Un-implemented\nDOMElement.prototype.focus = function _Element_focus() {\n    return void 0\n}\n\nDOMElement.prototype.toString = function _Element_toString() {\n    return serializeNode(this)\n}\n\nDOMElement.prototype.getElementsByClassName = function _Element_getElementsByClassName(classNames) {\n    var classes = classNames.split(\" \");\n    var elems = []\n\n    domWalk(this, function (node) {\n        if (node.nodeType === 1) {\n            var nodeClassName = node.className || \"\"\n            var nodeClasses = nodeClassName.split(\" \")\n\n            if (classes.every(function (item) {\n                return nodeClasses.indexOf(item) !== -1\n            })) {\n                elems.push(node)\n            }\n        }\n    })\n\n    return elems\n}\n\nDOMElement.prototype.getElementsByTagName = function _Element_getElementsByTagName(tagName) {\n    tagName = tagName.toLowerCase()\n    var elems = []\n\n    domWalk(this.childNodes, function (node) {\n        if (node.nodeType === 1 && (tagName === '*' || node.tagName.toLowerCase() === tagName)) {\n            elems.push(node)\n        }\n    })\n\n    return elems\n}\n\nDOMElement.prototype.contains = function _Element_contains(element) {\n    return domWalk(this, function (node) {\n        return element === node\n    }) || false\n}\n","var DOMElement = require(\"./dom-element.js\")\n\nmodule.exports = DocumentFragment\n\nfunction DocumentFragment(owner) {\n    if (!(this instanceof DocumentFragment)) {\n        return new DocumentFragment()\n    }\n\n    this.childNodes = []\n    this.parentNode = null\n    this.ownerDocument = owner || null\n}\n\nDocumentFragment.prototype.type = \"DocumentFragment\"\nDocumentFragment.prototype.nodeType = 11\nDocumentFragment.prototype.nodeName = \"#document-fragment\"\n\nDocumentFragment.prototype.appendChild  = DOMElement.prototype.appendChild\nDocumentFragment.prototype.replaceChild = DOMElement.prototype.replaceChild\nDocumentFragment.prototype.removeChild  = DOMElement.prototype.removeChild\n\nDocumentFragment.prototype.toString =\n    function _DocumentFragment_toString() {\n        return this.childNodes.map(function (node) {\n            return String(node)\n        }).join(\"\")\n    }\n","module.exports = Event\n\nfunction Event(family) {}\n\nEvent.prototype.initEvent = function _Event_initEvent(type, bubbles, cancelable) {\n    this.type = type\n    this.bubbles = bubbles\n    this.cancelable = cancelable\n}\n\nEvent.prototype.preventDefault = function _Event_preventDefault() {\n    \n}\n","var domWalk = require(\"dom-walk\")\n\nvar Comment = require(\"./dom-comment.js\")\nvar DOMText = require(\"./dom-text.js\")\nvar DOMElement = require(\"./dom-element.js\")\nvar DocumentFragment = require(\"./dom-fragment.js\")\nvar Event = require(\"./event.js\")\nvar dispatchEvent = require(\"./event/dispatch-event.js\")\nvar addEventListener = require(\"./event/add-event-listener.js\")\nvar removeEventListener = require(\"./event/remove-event-listener.js\")\n\nmodule.exports = Document;\n\nfunction Document() {\n    if (!(this instanceof Document)) {\n        return new Document();\n    }\n\n    this.head = this.createElement(\"head\")\n    this.body = this.createElement(\"body\")\n    this.documentElement = this.createElement(\"html\")\n    this.documentElement.appendChild(this.head)\n    this.documentElement.appendChild(this.body)\n    this.childNodes = [this.documentElement]\n    this.nodeType = 9\n}\n\nvar proto = Document.prototype;\nproto.createTextNode = function createTextNode(value) {\n    return new DOMText(value, this)\n}\n\nproto.createElementNS = function createElementNS(namespace, tagName) {\n    var ns = namespace === null ? null : String(namespace)\n    return new DOMElement(tagName, this, ns)\n}\n\nproto.createElement = function createElement(tagName) {\n    return new DOMElement(tagName, this)\n}\n\nproto.createDocumentFragment = function createDocumentFragment() {\n    return new DocumentFragment(this)\n}\n\nproto.createEvent = function createEvent(family) {\n    return new Event(family)\n}\n\nproto.createComment = function createComment(data) {\n    return new Comment(data, this)\n}\n\nproto.getElementById = function getElementById(id) {\n    id = String(id)\n\n    var result = domWalk(this.childNodes, function (node) {\n        if (String(node.id) === id) {\n            return node\n        }\n    })\n\n    return result || null\n}\n\nproto.getElementsByClassName = DOMElement.prototype.getElementsByClassName\nproto.getElementsByTagName = DOMElement.prototype.getElementsByTagName\nproto.contains = DOMElement.prototype.contains\n\nproto.removeEventListener = removeEventListener\nproto.addEventListener = addEventListener\nproto.dispatchEvent = dispatchEvent\n","var Document = require('./document.js');\n\nmodule.exports = new Document();\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n  case \"line-left\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n  case \"line-right\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 6.2.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            const split = event.attributes.RESOLUTION.split('x');\n            const resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'daterange'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['ID', 'CLASS'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = String(event.attributes[key]);\n          }\n        });\n        ['START-DATE', 'END-DATE'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = new Date(event.attributes[key]);\n          }\n        });\n        ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['END-ON-NEXT'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/i.test(event.attributes[key]);\n          }\n        });\n        ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = event.attributes[key].toString(16);\n          }\n        });\n        const clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n\n        for (const key in event.attributes) {\n          if (!clientAttributePattern.test(key)) {\n            continue;\n          }\n\n          const isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n          const isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n          event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'independent-segments'\n        });\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor() {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    const daterangeTags = {};\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition;\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            },\n\n            'daterange'() {\n              this.manifest.daterange = this.manifest.daterange || [];\n              this.manifest.daterange.push(camelCaseKeys(entry.attributes));\n              const index = this.manifest.daterange.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${index}`, entry.attributes, ['ID', 'START-DATE']);\n              const daterange = this.manifest.daterange[index];\n\n              if (daterange.endDate && daterange.startDate && new Date(daterange.endDate) < new Date(daterange.startDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                });\n              }\n\n              if (daterange.duration && daterange.duration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE DURATION must not be negative'\n                });\n              }\n\n              if (daterange.plannedDuration && daterange.plannedDuration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                });\n              }\n\n              const endOnNextYes = !!daterange.endOnNext;\n\n              if (endOnNextYes && !daterange.class) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                });\n              }\n\n              if (endOnNextYes && (daterange.duration || daterange.endDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                });\n              }\n\n              if (daterange.duration && daterange.endDate) {\n                const startDate = daterange.startDate;\n                const newDateInSeconds = startDate.setSeconds(startDate.getSeconds() + daterange.duration);\n                this.manifest.daterange[index].endDate = new Date(newDateInSeconds);\n              }\n\n              if (daterange && !this.manifest.dateTimeString) {\n                this.trigger('warn', {\n                  message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n                });\n              }\n\n              if (!daterangeTags[daterange.id]) {\n                daterangeTags[daterange.id] = daterange;\n              } else {\n                for (const attribute in daterangeTags[daterange.id]) {\n                  if (daterangeTags[daterange.id][attribute] !== daterange[attribute]) {\n                    this.trigger('warn', {\n                      message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes and same attribute values'\n                    });\n                    break;\n                  }\n                }\n              }\n            },\n\n            'independent-segments'() {\n              this.manifest.independentSegments = true;\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\nexport var browserSupportsCodec = function browserSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","/*! @name mpd-parser @version 1.3.0 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"1.3.0\";\n\nconst isObject = obj => {\n  return !!obj && typeof obj === 'object';\n};\n\nconst merge = (...objects) => {\n  return objects.reduce((result, source) => {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nconst values = o => Object.keys(o).map(k => o[k]);\n\nconst range = (start, end) => {\n  const result = [];\n\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nconst flatten = lists => lists.reduce((x, y) => x.concat(y), []);\nconst from = list => {\n  if (!list.length) {\n    return [];\n  }\n\n  const result = [];\n\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nconst findIndexes = (l, key) => l.reduce((a, e, i) => {\n  if (e[key]) {\n    a.push(i);\n  }\n\n  return a;\n}, []);\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nconst union = (lists, keyFunction) => {\n  return values(lists.reduce((acc, list) => {\n    list.forEach(el => {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  INVALID_NUMBER_OF_CONTENT_STEERING: 'INVALID_NUMBER_OF_CONTENT_STEERING',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nconst urlTypeToSegment = ({\n  baseUrl = '',\n  source = '',\n  range = '',\n  indexRange = ''\n}) => {\n  const segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    const rangeStr = range ? range : indexRange;\n    const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    let length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nconst byteRangeToString = byterange => {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return `${byterange.offset}-${endRange}`;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nconst parseEndNumber = endNumber => {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nconst segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static(attributes) {\n    const {\n      duration,\n      timescale = 1,\n      sourceDuration,\n      periodDuration\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber);\n    const segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic(attributes) {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      duration,\n      periodStart = 0,\n      minimumUpdatePeriod = 0,\n      timeShiftBufferDepth = Infinity\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    const segmentCount = Math.ceil(periodDuration * timescale / duration);\n    const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nconst toSegments = attributes => number => {\n  const {\n    duration,\n    timescale = 1,\n    periodStart,\n    startNumber = 1\n  } = attributes;\n  return {\n    number: startNumber + number,\n    duration: duration / timescale,\n    timeline: periodStart,\n    time: number * duration\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseByDuration = attributes => {\n  const {\n    type,\n    duration,\n    timescale = 1,\n    periodDuration,\n    sourceDuration\n  } = attributes;\n  const {\n    start,\n    end\n  } = segmentRange[type](attributes);\n  const segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    const index = segments.length - 1; // section is either a period or the full source\n\n    const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nconst segmentsFromBase = attributes => {\n  const {\n    baseUrl,\n    initialization = {},\n    sourceDuration,\n    indexRange = '',\n    periodStart,\n    presentationTime,\n    number = 0,\n    duration\n  } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: baseUrl,\n    indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    const segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nconst addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n  // Retain init segment information\n  const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  const timeline = playlist.timeline || 0;\n  const sidxByteRange = playlist.sidx.byterange;\n  const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n  const segments = [];\n  const type = playlist.endList ? 'static' : 'dynamic';\n  const periodStart = playlist.sidx.timeline;\n  let presentationTime = periodStart;\n  let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  let startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (let i = 0; i < mediaReferences.length; i++) {\n    const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    const duration = reference.subsegmentDuration; // should be an inclusive range\n\n    let endIndex; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    const indexRange = `${startIndex}-${endIndex}`;\n    const attributes = {\n      baseUrl,\n      timescale,\n      timeline,\n      periodStart,\n      presentationTime,\n      number,\n      duration,\n      sourceDuration,\n      indexRange,\n      type\n    };\n    const segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nconst SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nconst TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nconst getUniqueTimelineStarts = timelineStarts => {\n  return union(timelineStarts, ({\n    timeline\n  }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nconst findPlaylistWithName = (playlists, name) => {\n  for (let i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nconst getMediaGroupPlaylists = manifest => {\n  let mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nconst updateMediaSequenceForPlaylist = ({\n  playlist,\n  mediaSequence\n}) => {\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach((segment, index) => {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nconst updateSequenceNumbers = ({\n  oldPlaylists,\n  newPlaylists,\n  timelineStarts\n}) => {\n  newPlaylists.forEach(playlist => {\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    const firstNewSegment = playlist.segments[0];\n    const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nconst positionManifestOnTimeline = ({\n  oldManifest,\n  newManifest\n}) => {\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nconst generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n\nconst mergeDiscontiguousPlaylists = playlists => {\n  // Break out playlists into groups based on their baseUrl\n  const playlistsByBaseUrl = playlists.reduce(function (acc, cur) {\n    if (!acc[cur.attributes.baseUrl]) {\n      acc[cur.attributes.baseUrl] = [];\n    }\n\n    acc[cur.attributes.baseUrl].push(cur);\n    return acc;\n  }, {});\n  let allPlaylists = [];\n  Object.values(playlistsByBaseUrl).forEach(playlistGroup => {\n    const mergedPlaylists = values(playlistGroup.reduce((acc, playlist) => {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      const name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n      if (!acc[name]) {\n        // First Period\n        acc[name] = playlist;\n        acc[name].attributes.timelineStarts = [];\n      } else {\n        // Subsequent Periods\n        if (playlist.segments) {\n          // first segment of subsequent periods signal a discontinuity\n          if (playlist.segments[0]) {\n            playlist.segments[0].discontinuity = true;\n          }\n\n          acc[name].segments.push(...playlist.segments);\n        } // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      }\n\n      acc[name].attributes.timelineStarts.push({\n        // Although they represent the same number, it's important to have both to make it\n        // compatible with HLS potentially having a similar attribute.\n        start: playlist.attributes.periodStart,\n        timeline: playlist.attributes.periodStart\n      });\n      return acc;\n    }, {}));\n    allPlaylists = allPlaylists.concat(mergedPlaylists);\n  });\n  return allPlaylists.map(playlist => {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nconst addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n  const sidxKey = generateSidxKey(playlist.sidx);\n  const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nconst addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (const i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nconst formatAudioPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  mediaSequence,\n  discontinuitySequence,\n  discontinuityStarts\n}, isAudioOnly) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuitySequence,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nconst formatVttPlaylist = ({\n  attributes,\n  segments,\n  mediaSequence,\n  discontinuityStarts,\n  discontinuitySequence\n}) => {\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  const m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth,\n    ['PROGRAM-ID']: 1\n  };\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  const vttPlaylist = {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts,\n    discontinuitySequence,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.serviceLocation) {\n    vttPlaylist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  return vttPlaylist;\n};\nconst organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n  let mainPlaylist;\n  const formattedPlaylists = playlists.reduce((a, playlist) => {\n    const role = playlist.attributes.role && playlist.attributes.role.value || '';\n    const language = playlist.attributes.lang || '';\n    let label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      const roleLabel = role ? ` (${role})` : '';\n      label = `${playlist.attributes.lang}${roleLabel}`;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    const firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nconst organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n  return playlists.reduce((a, playlist) => {\n    const label = playlist.attributes.label || playlist.attributes.lang || 'text';\n\n    if (!a[label]) {\n      a[label] = {\n        language: label,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nconst organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n  if (!svc) {\n    return svcObj;\n  }\n\n  svc.forEach(service => {\n    const {\n      channel,\n      language\n    } = service;\n    svcObj[language] = {\n      autoselect: false,\n      default: false,\n      instreamId: channel,\n      language\n    };\n\n    if (service.hasOwnProperty('aspectRatio')) {\n      svcObj[language].aspectRatio = service.aspectRatio;\n    }\n\n    if (service.hasOwnProperty('easyReader')) {\n      svcObj[language].easyReader = service.easyReader;\n    }\n\n    if (service.hasOwnProperty('3D')) {\n      svcObj[language]['3D'] = service['3D'];\n    }\n  });\n  return svcObj;\n}, {});\n\nconst formatVideoPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  discontinuityStarts\n}) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments\n  };\n\n  if (attributes.frameRate) {\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n  }\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nconst videoOnly = ({\n  attributes\n}) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n\nconst audioOnly = ({\n  attributes\n}) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n\nconst vttOnly = ({\n  attributes\n}) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nconst addMediaSequenceValues = (playlists, timelineStarts) => {\n  // increment all segments sequentially\n  playlists.forEach(playlist => {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach((segment, index) => {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nconst flattenMediaGroupPlaylists = mediaGroupObject => {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce((acc, label) => {\n    const labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nconst toM3u8 = ({\n  dashPlaylists,\n  locations,\n  contentSteering,\n  sidxMapping = {},\n  previousManifest,\n  eventStream\n}) => {\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  const {\n    sourceDuration: duration,\n    type,\n    suggestedPresentationDelay,\n    minimumUpdatePeriod\n  } = dashPlaylists[0].attributes;\n  const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n  const manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: {\n      AUDIO: {},\n      VIDEO: {},\n      ['CLOSED-CAPTIONS']: {},\n      SUBTITLES: {}\n    },\n    uri: '',\n    duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (contentSteering) {\n    manifest.contentSteering = contentSteering;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  if (eventStream && eventStream.length > 0) {\n    manifest.eventStream = eventStream;\n  }\n\n  const isAudioOnly = manifest.playlists.length === 0;\n  const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  const playlistTimelineStarts = formattedPlaylists.map(({\n    timelineStarts\n  }) => timelineStarts);\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nconst getLiveRValue = (attributes, time, duration) => {\n  const {\n    NOW,\n    clientOffset,\n    availabilityStartTime,\n    timescale = 1,\n    periodStart = 0,\n    minimumUpdatePeriod = 0\n  } = attributes;\n  const now = (NOW + clientOffset) / 1000;\n  const periodStartWC = availabilityStartTime + periodStart;\n  const periodEndWC = now + minimumUpdatePeriod;\n  const periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nconst parseByTimeline = (attributes, segmentTimeline) => {\n  const {\n    type,\n    minimumUpdatePeriod = 0,\n    media = '',\n    sourceDuration,\n    timescale = 1,\n    startNumber = 1,\n    periodStart: timeline\n  } = attributes;\n  const segments = [];\n  let time = -1;\n\n  for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    const S = segmentTimeline[sIndex];\n    const duration = S.d;\n    const repeat = S.r || 0;\n    const segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    let count;\n\n    if (repeat < 0) {\n      const nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    const end = startNumber + segments.length + count;\n    let number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number,\n        duration: duration / timescale,\n        time,\n        timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nconst identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nconst identifierReplacement = values => (match, identifier, format, width) => {\n  if (match === '$$') {\n    // escape sequence\n    return '$';\n  }\n\n  if (typeof values[identifier] === 'undefined') {\n    return match;\n  }\n\n  const value = '' + values[identifier];\n\n  if (identifier === 'RepresentationID') {\n    // Format tag shall not be present with RepresentationID\n    return value;\n  }\n\n  if (!format) {\n    width = 1;\n  } else {\n    width = parseInt(width, 10);\n  }\n\n  if (value.length >= width) {\n    return value;\n  }\n\n  return `${new Array(width - value.length + 1).join('0')}${value}`;\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nconst constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseTemplateInfo = (attributes, segmentTimeline) => {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nconst segmentsFromTemplate = (attributes, segmentTimeline) => {\n  const templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  const {\n    initialization = {\n      sourceURL: '',\n      range: ''\n    }\n  } = attributes;\n  const mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  const segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(segment => {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    const presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    const map = {\n      uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nconst SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n  const {\n    baseUrl,\n    initialization = {}\n  } = attributes;\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nconst segmentsFromList = (attributes, segmentTimeline) => {\n  const {\n    duration,\n    segmentUrls = [],\n    periodStart\n  } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n  let segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  const segments = segmentTimeInfo.map((segmentTime, index) => {\n    if (segmentUrlMap[index]) {\n      const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(segment => segment);\n  return segments;\n};\n\nconst generateSegments = ({\n  attributes,\n  segmentInfo\n}) => {\n  let segmentAttributes;\n  let segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  const segmentsInfo = {\n    attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    const {\n      duration,\n      timescale = 1\n    } = segmentAttributes;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce((max, segment) => {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nconst toPlaylists = representations => representations.map(generateSegments);\n\nconst findChildren = (element, name) => from(element.childNodes).filter(({\n  tagName\n}) => tagName === name);\nconst getContent = element => element.textContent.trim();\n\n/**\n * Converts the provided string that may contain a division operation to a number.\n *\n * @param {string} value - the provided string value\n *\n * @return {number} the parsed string value\n */\nconst parseDivisionValue = value => {\n  return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n};\n\nconst parseDuration = str => {\n  const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  const SECONDS_IN_DAY = 24 * 60 * 60;\n  const SECONDS_IN_HOUR = 60 * 60;\n  const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  const match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  const [year, month, day, hour, minute, second] = match.slice(1);\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nconst parseDate = str => {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nconst parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the frame rate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed frame rate\n   */\n  frameRate(value) {\n    return parseDivisionValue(value);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration(value) {\n    const parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTime.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTime\n   */\n  presentationTime(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT(value) {\n    return value;\n  }\n\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nconst parseAttributes = el => {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce((a, e) => {\n    const parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nconst keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime',\n  // ISO_IEC 23009-1_2022 5.8.5.2.2 The mp4 Protection Scheme\n  'urn:mpeg:dash:mp4protection:2011': 'mp4protection'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {Object[]} references\n *        List of objects containing the reference URL as well as its attributes\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {Object[]}\n *         List of objects with resolved urls and attributes\n */\n\nconst buildBaseUrls = (references, baseUrlElements) => {\n  if (!baseUrlElements.length) {\n    return references;\n  }\n\n  return flatten(references.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      const initialBaseUrl = getContent(baseUrlElement);\n      const resolvedBaseUrl = resolveUrl(reference.baseUrl, initialBaseUrl);\n      const finalBaseUrl = merge(parseAttributes(baseUrlElement), {\n        baseUrl: resolvedBaseUrl\n      }); // If the URL is resolved, we want to get the serviceLocation from the reference\n      // assuming there is no serviceLocation on the initialBaseUrl\n\n      if (resolvedBaseUrl !== initialBaseUrl && !finalBaseUrl.serviceLocation && reference.serviceLocation) {\n        finalBaseUrl.serviceLocation = reference.serviceLocation;\n      }\n\n      return finalBaseUrl;\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nconst getSegmentInformation = adaptationSet => {\n  const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge({\n    tag: 'SegmentURL'\n  }, parseAttributes(s)));\n  const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  const segmentTimelineParentNode = segmentList || segmentTemplate;\n  const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  const template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  const segmentInfo = {\n    template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(key => {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {Object[]} adaptationSetBaseUrls\n *        List of objects containing resolved base URLs and attributes\n *        inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nconst inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n  const repBaseUrlElements = findChildren(representation, 'BaseURL');\n  const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n  const attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n  const representationSegmentInfo = getSegmentInformation(representation);\n  return repBaseUrls.map(baseUrl => {\n    return {\n      segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n      attributes: merge(attributes, baseUrl)\n    };\n  });\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nconst generateKeySystemInformation = contentProtectionNodes => {\n  return contentProtectionNodes.reduce((acc, node) => {\n    const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    const keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes\n      };\n      const psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        const pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nconst parseCaptionServiceMetadata = service => {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      let channel;\n      let language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        [channel, language] = value.split('=');\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel,\n        language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      const flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        const [channel, opts = ''] = value.split('=');\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(opt => {\n          const [name, val] = opt.split(':');\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * A map callback that will parse all event stream data for a collection of periods\n * DASH ISO_IEC_23009 5.10.2.2\n * https://dashif-documents.azurewebsites.net/Events/master/event.html#mpd-event-timing\n *\n * @param {PeriodInformation} period object containing necessary period information\n * @return a collection of parsed eventstream event objects\n */\n\nconst toEventStream = period => {\n  // get and flatten all EventStreams tags and parse attributes and children\n  return flatten(findChildren(period.node, 'EventStream').map(eventStream => {\n    const eventStreamAttributes = parseAttributes(eventStream);\n    const schemeIdUri = eventStreamAttributes.schemeIdUri; // find all Events per EventStream tag and map to return objects\n\n    return findChildren(eventStream, 'Event').map(event => {\n      const eventAttributes = parseAttributes(event);\n      const presentationTime = eventAttributes.presentationTime || 0;\n      const timescale = eventStreamAttributes.timescale || 1;\n      const duration = eventAttributes.duration || 0;\n      const start = presentationTime / timescale + period.attributes.start;\n      return {\n        schemeIdUri,\n        value: eventStreamAttributes.value,\n        id: eventAttributes.id,\n        start,\n        end: start + duration / timescale,\n        messageData: getContent(event) || eventAttributes.messageData,\n        contentEncoding: eventStreamAttributes.contentEncoding,\n        presentationTimeOffset: eventStreamAttributes.presentationTimeOffset || 0\n      };\n    });\n  }));\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {Object[]} periodBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nconst toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n  const adaptationSetAttributes = parseAttributes(adaptationSet);\n  const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n  const role = findChildren(adaptationSet, 'Role')[0];\n  const roleAttributes = {\n    role: parseAttributes(role)\n  };\n  let attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n  const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n  const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n  if (captionServices) {\n    attrs = merge(attrs, {\n      captionServices\n    });\n  }\n\n  const label = findChildren(adaptationSet, 'Label')[0];\n\n  if (label && label.childNodes.length) {\n    const labelVal = label.childNodes[0].nodeValue.trim();\n    attrs = merge(attrs, {\n      label: labelVal\n    });\n  }\n\n  const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n  if (Object.keys(contentProtection).length) {\n    attrs = merge(attrs, {\n      contentProtection\n    });\n  }\n\n  const segmentInfo = getSegmentInformation(adaptationSet);\n  const representations = findChildren(adaptationSet, 'Representation');\n  const adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n  return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n  * @param {Object[]} mpdBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nconst toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n  const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n  const periodAttributes = merge(mpdAttributes, {\n    periodStart: period.attributes.start\n  });\n\n  if (typeof period.attributes.duration === 'number') {\n    periodAttributes.periodDuration = period.attributes.duration;\n  }\n\n  const adaptationSets = findChildren(period.node, 'AdaptationSet');\n  const periodSegmentInfo = getSegmentInformation(period.node);\n  return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n};\n/**\n * Tranforms an array of content steering nodes into an object\n * containing CDN content steering information from the MPD manifest.\n *\n * For more information on the DASH spec for Content Steering parsing, see:\n * https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {Node[]} contentSteeringNodes\n *        Content steering nodes\n * @param {Function} eventHandler\n *        The event handler passed into the parser options to handle warnings\n * @return {Object}\n *        Object containing content steering data\n */\n\nconst generateContentSteeringInformation = (contentSteeringNodes, eventHandler) => {\n  // If there are more than one ContentSteering tags, throw an error\n  if (contentSteeringNodes.length > 1) {\n    eventHandler({\n      type: 'warn',\n      message: 'The MPD manifest should contain no more than one ContentSteering tag'\n    });\n  } // Return a null value if there are no ContentSteering tags\n\n\n  if (!contentSteeringNodes.length) {\n    return null;\n  }\n\n  const infoFromContentSteeringTag = merge({\n    serverURL: getContent(contentSteeringNodes[0])\n  }, parseAttributes(contentSteeringNodes[0])); // Converts `queryBeforeStart` to a boolean, as well as setting the default value\n  // to `false` if it doesn't exist\n\n  infoFromContentSteeringTag.queryBeforeStart = infoFromContentSteeringTag.queryBeforeStart === 'true';\n  return infoFromContentSteeringTag;\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nconst getPeriodStart = ({\n  attributes,\n  priorPeriodAttributes,\n  mpdType\n}) => {\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nconst inheritAttributes = (mpd, options = {}) => {\n  const {\n    manifestUri = '',\n    NOW = Date.now(),\n    clientOffset = 0,\n    // TODO: For now, we are expecting an eventHandler callback function\n    // to be passed into the mpd parser as an option.\n    // In the future, we should enable stream parsing by using the Stream class from vhs-utils.\n    // This will support new features including a standardized event handler.\n    // See the m3u8 parser for examples of how stream parsing is currently used for HLS parsing.\n    // https://github.com/videojs/vhs-utils/blob/88d6e10c631e57a5af02c5a62bc7376cd456b4f5/src/stream.js#L9\n    eventHandler = function () {}\n  } = options;\n  const periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  const locations = findChildren(mpd, 'Location');\n  const mpdAttributes = parseAttributes(mpd);\n  const mpdBaseUrls = buildBaseUrls([{\n    baseUrl: manifestUri\n  }], findChildren(mpd, 'BaseURL'));\n  const contentSteeringNodes = findChildren(mpd, 'ContentSteering'); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach((node, index) => {\n    const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    const priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node,\n      attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    contentSteeringInfo: generateContentSteeringInformation(contentSteeringNodes, eventHandler),\n    // TODO: There are occurences where this `representationInfo` array contains undesired\n    // duplicates. This generally occurs when there are multiple BaseURL nodes that are\n    // direct children of the MPD node. When we attempt to resolve URLs from a combination of the\n    // parent BaseURL and a child BaseURL, and the value does not resolve,\n    // we end up returning the child BaseURL multiple times.\n    // We need to determine a way to remove these duplicates in a safe way.\n    // See: https://github.com/videojs/mpd-parser/pull/17#discussion_r162750527\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls))),\n    eventStream: flatten(periods.map(toEventStream))\n  };\n};\n\nconst stringToMpdXml = manifestString => {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  const parser = new DOMParser();\n  let xml;\n  let mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throws on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nconst parseUTCTimingScheme = mpd => {\n  const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  const attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nconst VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nconst parse = (manifestString, options = {}) => {\n  const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    contentSteering: parsedManifestInfo.contentSteeringInfo,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest,\n    eventStream: parsedManifestInfo.eventStream\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nconst parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","/**\n * @license\n * Video.js 8.11.1 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport keycode from 'keycode';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport { Parser } from 'm3u8-parser';\nimport { DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, parseCodecs, muxerSupportsCodec, browserSupportsCodec, translateLegacyCodec, codecsFromDefault, isAudioCodec, getMimeForCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$6 = \"8.11.1\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nconst hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecycle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nconst hooks = function (type, fn) {\n  hooks_[type] = hooks_[type] || [];\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n  return hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hook = function (type, fn) {\n  hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nconst removeHook = function (type, fn) {\n  const index = hooks(type).indexOf(fn);\n  if (index <= -1) {\n    return false;\n  }\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hookOnce = function (type, fn) {\n  hooks(type, [].concat(fn).map(original => {\n    const wrapper = (...args) => {\n      removeHook(type, wrapper);\n      return original(...args);\n    };\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nconst FullscreenApi = {\n  prefixed: true\n};\n\n// browser API methods\nconst apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen']];\nconst specApi = apiMap[0];\nlet browserApi;\n\n// determine the supported set of functions\nfor (let i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (let i = 0; i < browserApi.length; i++) {\n    FullscreenApi[specApi[i]] = browserApi[i];\n  }\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n// This is the private tracking variable for the logging history.\nlet history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} name\n *         The name of the console method to use.\n *\n * @param  {Object} log\n *         The arguments to be passed to the matching console method.\n *\n * @param {string} [styles]\n *        styles for name\n */\nconst LogByTypeFactory = (name, log, styles) => (type, level, args) => {\n  const lvl = log.levels[level];\n  const lvlRegExp = new RegExp(`^(${lvl})$`);\n  let resultName = name;\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n  if (styles) {\n    resultName = `%c${name}`;\n    args.unshift(styles);\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift(resultName + ':');\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n\n    // only store 1000 history entries\n    const splice = history.length - 1000;\n    history.splice(0, splice > 0 ? splice : 0);\n  }\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  let fn = window$1.console[type];\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\nfunction createLogger$1(name, delimiter = ':', styles = '') {\n  // This is the private tracking variable for logging level.\n  let level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  let logByType;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * *[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {...*} args\n   *           One or more messages or objects that should be logged.\n   */\n  const log = function (...args) {\n    logByType('log', level, args);\n  };\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log, styles);\n\n  /**\n   * Create a new subLogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} subName\n   *        The name to add call the new logger\n   * @param {string} [subDelimiter]\n   *        Optional delimiter\n   * @param {string} [subStyles]\n   *        Optional styles\n   * @return {Object}\n   */\n  log.createLogger = (subName, subDelimiter, subStyles) => {\n    const resultDelimiter = subDelimiter !== undefined ? subDelimiter : delimiter;\n    const resultStyles = subStyles !== undefined ? subStyles : styles;\n    const resultName = `${name} ${resultDelimiter} ${subName}`;\n    return createLogger$1(resultName, resultDelimiter, resultStyles);\n  };\n\n  /**\n   * Create a new logger.\n   *\n   * @param {string} newName\n   *        The name for the new logger\n   * @param {string} [newDelimiter]\n   *        Optional delimiter\n   * @param {string} [newStyles]\n   *        Optional styles\n   * @return {Object}\n   */\n  log.createNewLogger = (newName, newDelimiter, newStyles) => {\n    return createLogger$1(newName, newDelimiter, newStyles);\n  };\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {'all'|'debug'|'info'|'warn'|'error'|'off'} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = lvl => {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(`\"${lvl}\" in not a valid log level`);\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = () => history ? [].concat(history) : [];\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = fname => {\n    return (history || []).filter(historyItem => {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = () => {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = () => {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = () => {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = (...args) => logByType('error', level, args);\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = (...args) => logByType('warn', level, args);\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = (...args) => logByType('debug', level, args);\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nconst log$1 = createLogger$1('VIDEOJS');\nconst createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {*} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {*}\n *         The new accumulated value.\n */\nconst toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nconst keys = function (object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(key => fn(object[key], key));\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {*} [initial = 0]\n *        Starting value\n *\n * @return {*}\n *         The final accumulated value.\n */\nfunction reduce(object, fn, initial = 0) {\n  return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction merge$1(...sources) {\n  const result = {};\n  sources.forEach(source => {\n    if (!source) {\n      return;\n    }\n    each(source, (value, key) => {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n      result[key] = merge$1(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Returns an array of values for a given object\n *\n * @param  {Object} source - target object\n * @return {Array<unknown>} - object values\n */\nfunction values(source = {}) {\n  const result = [];\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */\nfunction defineLazyProperty(obj, key, getValue, setter = true) {\n  const set = value => Object.defineProperty(obj, key, {\n    value,\n    enumerable: true,\n    writable: true\n  });\n  const options = {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const value = getValue();\n      set(value);\n      return value;\n    }\n  };\n  if (setter) {\n    options.set = set;\n  }\n  return Object.defineProperty(obj, key, options);\n}\n\nvar Obj = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  each: each,\n  reduce: reduce,\n  isObject: isObject,\n  isPlain: isPlain,\n  merge: merge$1,\n  values: values,\n  defineLazyProperty: defineLazyProperty\n});\n\n/**\n * @file browser.js\n * @module browser\n */\n\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPOD = false;\n\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */\nlet IOS_VERSION = null;\n\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_ANDROID = false;\n\n/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */\nlet ANDROID_VERSION;\n\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_FIREFOX = false;\n\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_EDGE = false;\n\n/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */\nlet IS_CHROMIUM = false;\n\n/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Deprecated, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */\nlet IS_CHROME = false;\n\n/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */\nlet CHROMIUM_VERSION = null;\n\n/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Deprecated, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet CHROME_VERSION = null;\n\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet IE_VERSION = null;\n\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SAFARI = false;\n\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WINDOWS = false;\n\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPAD = false;\n\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE = false;\n\n/**\n * Whether or not this is a Tizen device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_TIZEN = false;\n\n/**\n * Whether or not this is a WebOS device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WEBOS = false;\n\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\nconst UAD = window$1.navigator && window$1.navigator.userAgentData;\nif (UAD && UAD.platform && UAD.brands) {\n  // If userAgentData is present, use it instead of userAgent to avoid warnings\n  // Currently only implemented on Chromium\n  // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n  IS_ANDROID = UAD.platform === 'Android';\n  IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n  IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n  IS_WINDOWS = UAD.platform === 'Windows';\n}\n\n// If the browser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif (!IS_CHROMIUM) {\n  const USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  IS_IPOD = /iPod/i.test(USER_AGENT);\n  IOS_VERSION = function () {\n    const match = USER_AGENT.match(/OS (\\d+)_/i);\n    if (match && match[1]) {\n      return match[1];\n    }\n    return null;\n  }();\n  IS_ANDROID = /Android/i.test(USER_AGENT);\n  ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n    if (!match) {\n      return null;\n    }\n    const major = match[1] && parseFloat(match[1]);\n    const minor = match[2] && parseFloat(match[2]);\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n    return null;\n  }();\n  IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  IS_EDGE = /Edg/i.test(USER_AGENT);\n  IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = function () {\n    const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n    return null;\n  }();\n  IE_VERSION = function () {\n    const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    let version = result && parseFloat(result[1]);\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n    return version;\n  }();\n  IS_TIZEN = /Tizen/i.test(USER_AGENT);\n  IS_WEBOS = /Web0S/i.test(USER_AGENT);\n  IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE && !IS_TIZEN && !IS_WEBOS;\n  IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n}\n\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get IS_IPOD () { return IS_IPOD; },\n  get IOS_VERSION () { return IOS_VERSION; },\n  get IS_ANDROID () { return IS_ANDROID; },\n  get ANDROID_VERSION () { return ANDROID_VERSION; },\n  get IS_FIREFOX () { return IS_FIREFOX; },\n  get IS_EDGE () { return IS_EDGE; },\n  get IS_CHROMIUM () { return IS_CHROMIUM; },\n  get IS_CHROME () { return IS_CHROME; },\n  get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n  get CHROME_VERSION () { return CHROME_VERSION; },\n  get IE_VERSION () { return IE_VERSION; },\n  get IS_SAFARI () { return IS_SAFARI; },\n  get IS_WINDOWS () { return IS_WINDOWS; },\n  get IS_IPAD () { return IS_IPAD; },\n  get IS_IPHONE () { return IS_IPHONE; },\n  get IS_TIZEN () { return IS_TIZEN; },\n  get IS_WEBOS () { return IS_WEBOS; },\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {*} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n    const ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {ContentDescriptor} [content]\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n  const el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    const val = properties[propName];\n\n    // Handle textContent since it's not supported everywhere and we have a\n    // method for it.\n    if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n  if (content) {\n    appendContent(el, content);\n  }\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {HTMLElement} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  return element.classList.contains(classToCheck);\n}\n\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\nfunction addClass(element, ...classesToAdd) {\n  element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\nfunction removeClass(element, ...classesToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n  element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n  if (typeof predicate !== 'boolean') {\n    predicate = undefined;\n  }\n  classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    const attrValue = attributes[attrName];\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\nfunction getAttributes(tag) {\n  const obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  const knownBooleans = ['autoplay', 'controls', 'playsinline', 'loop', 'muted', 'default', 'defaultMuted'];\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    const attrs = tag.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attrName = attrs[i].name;\n      /** @type {boolean|string} */\n      let attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (knownBooleans.includes(attrName)) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n      obj[attrName] = attrVal;\n    }\n  }\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text.\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking.\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    const rect = el.getBoundingClientRect();\n    const result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n    return result;\n  }\n}\n\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  let left = 0;\n  let top = 0;\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n}\n\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  const translated = {\n    x: 0,\n    y: 0\n  };\n  if (IS_IOS) {\n    let item = el;\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      const transform = computedStyle(item, 'transform');\n      if (/^matrix/.test(transform)) {\n        const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n        translated.x += values[12];\n        translated.y += values[13];\n      }\n      item = item.parentNode;\n    }\n  }\n  const position = {};\n  const boxTarget = findPosition(event.target);\n  const box = findPosition(el);\n  const boxW = box.width;\n  const boxH = box.height;\n  let offsetY = event.offsetY - (box.top - boxTarget.top);\n  let offsetX = event.offsetX - (box.left - boxTarget.left);\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {*} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `Text`     | A TextNode. The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|Text|Array|Function} ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(value => {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(value => value);\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(node => el.appendChild(node));\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if an event was a single left click.\n *\n * @param  {MouseEvent} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nconst $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\nconst $$ = createQuerier('querySelectorAll');\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n  if (typeof window$1.getComputedStyle === 'function') {\n    let computedStyleValue;\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n  return '';\n}\n\n/**\n * Copy document style sheets to another window.\n *\n * @param    {Window} win\n *           The window element you want to copy the document style sheets to.\n *\n */\nfunction copyStyleSheetsToWindow(win) {\n  [...document.styleSheets].forEach(styleSheet => {\n    try {\n      const cssRules = [...styleSheet.cssRules].map(rule => rule.cssText).join('');\n      const style = document.createElement('style');\n      style.textContent = cssRules;\n      win.document.head.appendChild(style);\n    } catch (e) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.type = styleSheet.type;\n      // For older Safari this has to be the string; on other browsers setting the MediaList works\n      link.media = styleSheet.media.mediaText;\n      link.href = styleSheet.href;\n      win.document.head.appendChild(link);\n    }\n  });\n}\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$,\n  computedStyle: computedStyle,\n  copyStyleSheetsToWindow: copyStyleSheetsToWindow\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nlet _windowLoaded = false;\nlet videojs$1;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nconst autoSetup = function () {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n  const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  const mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n    for (let i = 0, e = mediaEls.length; i < e; i++) {\n      const mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          const options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n  window$1.setTimeout(autoSetup, wait);\n}\n\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM style element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nconst createStyleElement = function (className) {\n  const style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nconst setTextContent = function (el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar DomData = new WeakMap();\n\n/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData.delete(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string[]} types\n *        Type of event to bind to.\n *\n * @param {Function} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    const old = event || window$1.event;\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (const key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      const doc = document.documentElement;\n      const body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true;\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nlet _supportsPassive;\nconst supportsPassive = function () {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {\n      // disregard\n    }\n  }\n  return _supportsPassive;\n};\n\n/**\n * Touch events Chrome expects to be passive\n */\nconst passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {Function} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n  const data = DomData.get(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n  data.handlers[type].push(fn);\n  if (!data.dispatcher) {\n    data.disabled = false;\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n      event = fixEvent(event);\n      const handlers = data.handlers[event.type];\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        const handlersCopy = handlers.slice(0);\n        for (let m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      let options = false;\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {Function} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  const removeType = function (el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (const t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n  const handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (let n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  const parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n    const targetData = DomData.get(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction any(elem, type, fn) {\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n\n  // multiple ons, but one off for everything\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nconst UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {*} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\nconst bind_ = function (context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  const bound = fn.bind(context);\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\nconst throttle = function (fn, wait) {\n  let last = window$1.performance.now();\n  const throttled = function (...args) {\n    const now = window$1.performance.now();\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\nconst debounce = function (func, wait, immediate, context = window$1) {\n  let timeout;\n  const cancel = () => {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  const debounced = function () {\n    const self = this;\n    const args = arguments;\n    let later = function () {\n      timeout = null;\n      later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\nvar Fn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n  bind_: bind_,\n  throttle: throttle,\n  debounce: debounce\n});\n\n/**\n * @file src/js/event-target.js\n */\nlet EVENT_MAP;\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nclass EventTarget$2 {\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    on(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {\n    off(this, type, fn);\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    one(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    any(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {\n    const type = event.type || event;\n\n    // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n    if (typeof event === 'string') {\n      event = {\n        type\n      };\n    }\n    event = fixEvent(event);\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n    trigger(this, event);\n  }\n  queueTrigger(event) {\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n    const type = event.type || event;\n    let map = EVENT_MAP.get(this);\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n    const oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    const timeout = window$1.setTimeout(() => {\n      map.delete(type);\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(this);\n      }\n      this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  }\n}\n\n/**\n * A Custom DOM event.\n *\n * @typedef {CustomEvent} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventListener\n * @this {EventTarget}\n *\n * @param {Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @protected\n */\nEventTarget$2.prototype.allowedEvents_ = {};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\nconst objName = obj => {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n  if (obj.name_) {\n    return obj.name_;\n  }\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n  return typeof obj;\n};\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nconst isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} target\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\nconst addEventedCallback = (target, callback) => {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n    target.eventedCallbacks.push(callback);\n  }\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nconst isValidEventType = type =>\n// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateTarget = (target, obj, fnName) => {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateEventType = (type, obj, fnName) => {\n  if (!isValidEventType(type)) {\n    throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateListener = (listener, obj, fnName) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nconst normalizeListenArgs = (self, args, fnName) => {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  let target;\n  let type;\n  let listener;\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n    [type, listener] = args;\n  } else {\n    [target, type, listener] = args;\n  }\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind_(self, listener);\n  return {\n    isTargetingSelf,\n    target,\n    type,\n    listener\n  };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nconst listen = (target, method, type, listener) => {\n  validateTarget(target, target, method);\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nconst EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'on');\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      const removeListenerOnDispose = () => this.off(target, type, listener);\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'one');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listeners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'any');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      const target = targetOrType;\n      const type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off');\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind_(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    const type = event && typeof event !== 'string' ? event.type : event;\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n    }\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target, options = {}) {\n  const {\n    eventBusKey\n  } = options;\n\n  // Set or create the eventBusEl_.\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n  Object.assign(target, EventedMixin);\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(callback => {\n      callback();\n    });\n  }\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', () => {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData.delete(val);\n      }\n    });\n    window$1.setTimeout(() => {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nconst StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState(stateUpdates) {\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n    let changes;\n    each(stateUpdates, (value, key) => {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: this.state[key],\n          to: value\n        };\n      }\n      this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes,\n        type: 'statechanged'\n      });\n    }\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  Object.assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = Object.assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n  return target;\n}\n\n/**\n * @file str.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nconst toLowerCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toLowerCase());\n};\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nconst toTitleCase$1 = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nconst titleCaseEquals = function (str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\nvar Str = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toLowerCase: toLowerCase,\n  toTitleCase: toTitleCase$1,\n  titleCaseEquals: titleCaseEquals\n});\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nclass Component$1 {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * parameters and any callback value will be ignored.\n   *\n   * @callback ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to initialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  constructor(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n    this.isDisposed_ = false;\n\n    // Hold the reference to the parent component via `addChild` method\n    this.parentComponent_ = null;\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = merge$1({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = merge$1(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      const id = player && player.id && player.id() || 'no_player';\n      this.id_ = `${id}_component_${newGUID()}`;\n    }\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(c => this.addClass(c));\n    }\n\n    // Remove the placeholder event methods. If the component is evented, the\n    // real methods are added next\n    ['on', 'off', 'one', 'any', 'trigger'].forEach(fn => {\n      this[fn] = undefined;\n    });\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map();\n    this.clearingTimersOnDispose_ = false;\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n    this.ready(ready);\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  // `on`, `off`, `one`, `any` and `trigger` are here so tsc includes them in definitions.\n  // They are replaced or removed in the constructor\n\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {}\n\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} [fn]\n   *        The function to remove. If not specified, all listeners managed by Video.js will be removed.\n   */\n  off(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {}\n\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   *\n   * @param {Object} [hash]\n   *        Optionally extra argument to pass through to an event listener\n   */\n  trigger(event, hash) {}\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n  dispose(options = {}) {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true;\n\n    // Dispose all children.\n    if (this.children_) {\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  }\n\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return { import('./player').default }\n   *         The player that this `Component` has attached to.\n   */\n  player() {\n    return this.player_;\n  }\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n    this.options_ = merge$1(this.options_, obj);\n    return this.options_;\n  }\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  el() {\n    return this.el_;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  localize(string, tokens, defaultValue = string) {\n    const code = this.player_.language && this.player_.language();\n    const languages = this.player_.languages && this.player_.languages();\n    const language = languages && languages[code];\n    const primaryCode = code && code.split('-')[0];\n    const primaryLang = languages && languages[primaryCode];\n    let localizedString = defaultValue;\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        const value = tokens[index - 1];\n        let ret = value;\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n        return ret;\n      });\n    }\n    return localizedString;\n  }\n\n  /**\n   * Handles language change for the player in components. Should be overridden by sub-components.\n   *\n   * @abstract\n   */\n  handleLanguagechange() {}\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  id() {\n    return this.id_;\n  }\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  name() {\n    return this.name_;\n  }\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  children() {\n    return this.children_;\n  }\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  getChildById(id) {\n    return this.childIndex_[id];\n  }\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  getChild(name) {\n    if (!name) {\n      return;\n    }\n    return this.childNameIndex_[name];\n  }\n\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  getDescendant(...names) {\n    // flatten array argument into the main array\n    names = names.reduce((acc, n) => acc.concat(n), []);\n    let currentChild = this;\n    for (let i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n    return currentChild;\n  }\n\n  /**\n   * Adds an SVG icon element to another element or component.\n   *\n   * @param {string} iconName\n   *        The name of icon. A list of all the icon names can be found at 'sandbox/svg-icons.html'\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on. Defaults to the current Component's element.\n   *\n   * @return {Element}\n   *        The newly created icon element.\n   */\n  setIcon(iconName, el = this.el()) {\n    // TODO: In v9 of video.js, we will want to remove font icons entirely.\n    // This means this check, as well as the others throughout the code, and\n    // the unecessary CSS for font icons, will need to be removed.\n    // See https://github.com/videojs/video.js/pull/8260 as to which components\n    // need updating.\n    if (!this.player_.options_.experimentalSvgIcons) {\n      return;\n    }\n    const xmlnsURL = 'http://www.w3.org/2000/svg';\n\n    // The below creates an element in the format of:\n    // <span><svg><use>....</use></svg></span>\n    const iconContainer = createEl('span', {\n      className: 'vjs-icon-placeholder vjs-svg-icon'\n    }, {\n      'aria-hidden': 'true'\n    });\n    const svgEl = document.createElementNS(xmlnsURL, 'svg');\n    svgEl.setAttributeNS(null, 'viewBox', '0 0 512 512');\n    const useEl = document.createElementNS(xmlnsURL, 'use');\n    svgEl.appendChild(useEl);\n    useEl.setAttributeNS(null, 'href', `#vjs-icon-${iconName}`);\n    iconContainer.appendChild(svgEl);\n\n    // Replace a pre-existing icon if one exists.\n    if (this.iconIsSet_) {\n      el.replaceChild(iconContainer, el.querySelector('.vjs-icon-placeholder'));\n    } else {\n      el.appendChild(iconContainer);\n    }\n    this.iconIsSet_ = true;\n    return iconContainer;\n  }\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  addChild(child, options = {}, index = this.children_.length) {\n    let component;\n    let componentName;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      const componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      const ComponentClass = Component$1.getComponent(componentClassName);\n      if (!ComponentClass) {\n        throw new Error(`Component ${componentClassName} does not exist`);\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      let refNode = null;\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  }\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    if (!component || !this.children_) {\n      return;\n    }\n    let childFound = false;\n    for (let i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n    if (!childFound) {\n      return;\n    }\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    const compEl = component.el();\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  initChildren() {\n    const children = this.options_.children;\n    if (children) {\n      // `this` is `parent`\n      const parentOptions = this.options_;\n      const handleAdd = child => {\n        const name = child.name;\n        let opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        const newChild = this.addChild(name, opts);\n        if (newChild) {\n          this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      let workingChildren;\n      const Tech = Component$1.getComponent('Tech');\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(child => {\n        let name;\n        let opts;\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n        return {\n          name,\n          opts\n        };\n      }).filter(child => {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registered as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n\n  /**\n   * Builds the default DOM class name. Should be overridden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ready(fn, sync = false) {\n    if (!fn) {\n      return;\n    }\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      const readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  }\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $$(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  hasClass(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */\n  addClass(...classesToAdd) {\n    addClass(this.el_, ...classesToAdd);\n  }\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */\n  removeClass(...classesToRemove) {\n    removeClass(this.el_, ...classesToRemove);\n  }\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  toggleClass(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  show() {\n    this.removeClass('vjs-hidden');\n  }\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  hide() {\n    this.addClass('vjs-hidden');\n  }\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attribute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  getAttribute(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  setAttribute(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  removeAttribute(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The width when getting, zero if there is no width\n   */\n  width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The height when getting, zero if there is no height\n   */\n  height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The dimension when getting or 0 if unset\n   */\n  dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {Event}\n         */\n        this.trigger('componentresize');\n      }\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    const val = this.el_.style[widthOrHeight];\n    const pxIndex = val.indexOf('px');\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  currentDimension(widthOrHeight) {\n    let computedWidthOrHeight = 0;\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n      computedWidthOrHeight = this.el_[rule];\n    }\n    return computedWidthOrHeight;\n  }\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  currentWidth() {\n    return this.currentDimension('width');\n  }\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  currentHeight() {\n    return this.currentDimension('height');\n  }\n\n  /**\n   * Set the focus to this component\n   */\n  focus() {\n    this.el_.focus();\n  }\n\n  /**\n   * Remove the focus from this component\n   */\n  blur() {\n    this.el_.blur();\n  }\n\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping.\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.stopPropagation();\n      }\n      this.player_.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {KeyboardEvent} event\n   *        The event that caused this function to be called.\n   */\n  handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @protected\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    let touchStart = 0;\n    let firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    const tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    const touchTimeThreshold = 200;\n    let couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = window$1.performance.now();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        const xdiff = event.touches[0].pageX - firstTouch.pageX;\n        const ydiff = event.touches[0].pageY - firstTouch.pageY;\n        const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n    const noTap = function () {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        const touchTime = window$1.performance.now() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {MouseEvent}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    const report = bind_(this.player(), this.player().reportUserActivity);\n    let touchHolding;\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n    const touchEnd = function (event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  setTimeout(fn, timeout) {\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(() => {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n      }\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_.delete(timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n    return timeoutId;\n  }\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  setInterval(fn, interval) {\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    const intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an interval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_.delete(intervalId);\n      window$1.clearInterval(intervalId);\n    }\n    return intervalId;\n  }\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  requestAnimationFrame(fn) {\n    this.clearTimersOnDispose_();\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id;\n    fn = bind_(this, fn);\n    id = window$1.requestAnimationFrame(() => {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n      }\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  requestNamedAnimationFrame(name, fn) {\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n    this.clearTimersOnDispose_();\n    fn = bind_(this, fn);\n    const id = this.requestAnimationFrame(() => {\n      fn();\n      if (this.namedRafs_.has(name)) {\n        this.namedRafs_.delete(name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_.delete(name);\n  }\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  cancelAnimationFrame(id) {\n    if (this.rafIds_.has(id)) {\n      this.rafIds_.delete(id);\n      window$1.cancelAnimationFrame(id);\n    }\n    return id;\n  }\n\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  clearTimersOnDispose_() {\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', () => {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        this[idName].forEach((val, key) => this[cancelName](key));\n      });\n      this.clearingTimersOnDispose_ = false;\n    });\n  }\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  static registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n    }\n    const Tech = Component$1.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    const isTech = Tech && Tech.isTech(ComponentToRegister);\n    const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n    if (isTech || !isComp) {\n      let reason;\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n      throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n    }\n    name = toTitleCase$1(name);\n    if (!Component$1.components_) {\n      Component$1.components_ = {};\n    }\n    const Player = Component$1.getComponent('Player');\n    if (name === 'Player' && Player && Player.players) {\n      const players = Player.players;\n      const playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n    Component$1.components_[name] = ComponentToRegister;\n    Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {typeof Component}\n   *         The `Component` that got registered under the given name.\n   */\n  static getComponent(name) {\n    if (!name || !Component$1.components_) {\n      return;\n    }\n    return Component$1.components_[name];\n  }\n}\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time.js\n * @module time\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time, which mimics {@link TimeRanges}.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n *\n * @return  {TimeRange}\n */\nfunction createTimeRangesObj(ranges) {\n  let timeRangesObj;\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = () => (ranges || []).values();\n  }\n  return timeRangesObj;\n}\n\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n *\n * @return {TimeRange}\n */\nfunction createTimeRanges$1(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nconst defaultImplementation = function (seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor(seconds / 60 % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor(guide / 60 % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\n// Internal pointer to the current implementation.\nlet implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds, guide = seconds) {\n  return implementation(seconds, guide);\n}\n\nvar Time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTimeRanges: createTimeRanges$1,\n  createTimeRange: createTimeRanges$1,\n  setFormatTime: setFormatTime,\n  resetFormatTime: resetFormatTime,\n  formatTime: formatTime\n});\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param { import('./time').TimeRange } buffered\n *        The current `TimeRanges` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  let bufferedDuration = 0;\n  let start;\n  let end;\n  if (!duration) {\n    return 0;\n  }\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges$1(0, 0);\n  }\n  for (let i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n    bufferedDuration += end - start;\n  }\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n    Object.assign(this, value);\n  }\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * An object containing an error type, as well as other information regarding the error.\n *\n * @typedef {{errorType: string, [key: string]: any}} ErrorMetadata\n */\n\n/**\n * An optional object to give more detail about the error. This can be used to give\n * a higher level of specificity to an error versus the more generic MediaError codes.\n * `metadata` expects an `errorType` string that should align with the values from videojs.Error.\n *\n * @type {ErrorMetadata}\n */\nMediaError.prototype.metadata = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n/**\n * W3C error code for any custom error.\n *\n * @member MediaError#MEDIA_ERR_CUSTOM\n * @constant {number}\n * @default 0\n */\nMediaError.MEDIA_ERR_CUSTOM = 0;\n\n/**\n * W3C error code for any custom error.\n *\n * @member MediaError.MEDIA_ERR_CUSTOM\n * @constant {number}\n * @default 0\n */\nMediaError.prototype.MEDIA_ERR_CUSTOM = 0;\n\n/**\n * W3C error code for media error aborted.\n *\n * @member MediaError#MEDIA_ERR_ABORTED\n * @constant {number}\n * @default 1\n */\nMediaError.MEDIA_ERR_ABORTED = 1;\n\n/**\n * W3C error code for media error aborted.\n *\n * @member MediaError.MEDIA_ERR_ABORTED\n * @constant {number}\n * @default 1\n */\nMediaError.prototype.MEDIA_ERR_ABORTED = 1;\n\n/**\n * W3C error code for any network error.\n *\n * @member MediaError#MEDIA_ERR_NETWORK\n * @constant {number}\n * @default 2\n */\nMediaError.MEDIA_ERR_NETWORK = 2;\n\n/**\n * W3C error code for any network error.\n *\n * @member MediaError.MEDIA_ERR_NETWORK\n * @constant {number}\n * @default 2\n */\nMediaError.prototype.MEDIA_ERR_NETWORK = 2;\n\n/**\n * W3C error code for any decoding error.\n *\n * @member MediaError#MEDIA_ERR_DECODE\n * @constant {number}\n * @default 3\n */\nMediaError.MEDIA_ERR_DECODE = 3;\n\n/**\n * W3C error code for any decoding error.\n *\n * @member MediaError.MEDIA_ERR_DECODE\n * @constant {number}\n * @default 3\n */\nMediaError.prototype.MEDIA_ERR_DECODE = 3;\n\n/**\n * W3C error code for any time that a source is not supported.\n *\n * @member MediaError#MEDIA_ERR_SRC_NOT_SUPPORTED\n * @constant {number}\n * @default 4\n */\nMediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n/**\n * W3C error code for any time that a source is not supported.\n *\n * @member MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED\n * @constant {number}\n * @default 4\n */\nMediaError.prototype.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n/**\n * W3C error code for any time that a source is encrypted.\n *\n * @member MediaError#MEDIA_ERR_ENCRYPTED\n * @constant {number}\n * @default 5\n */\nMediaError.MEDIA_ERR_ENCRYPTED = 5;\n\n/**\n * W3C error code for any time that a source is encrypted.\n *\n * @member MediaError.MEDIA_ERR_ENCRYPTED\n * @constant {number}\n * @default 5\n */\nMediaError.prototype.MEDIA_ERR_ENCRYPTED = 5;\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, e => {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nconst trackToJson_ = function (track) {\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param { import('../tech/tech').default } tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nconst textTracksToJson = function (tech) {\n  const trackEls = tech.$$('track');\n  const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n  const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    const json = trackToJson_(trackEl.track);\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nconst jsonToTextTracks = function (json, tech) {\n  json.forEach(function (track) {\n    const addedTrack = tech.addRemoteTextTrack(track).track;\n    if (!track.src && track.cues) {\n      track.cues.forEach(cue => addedTrack.addCue(cue));\n    }\n  });\n  return tech.textTracks();\n};\nvar textTrackConverter = {\n  textTracksToJson,\n  jsonToTextTracks,\n  trackToJson_\n};\n\n/**\n * @file modal-dialog.js\n */\nconst MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\nclass ModalDialog extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param { import('./utils/dom').ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.close_ = e => this.close(e);\n    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n    this.closeable(!this.options_.uncloseable);\n    this.content(this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    this.contentEl_ = createEl('div', {\n      className: `${MODAL_CLASS_NAME}-content`\n    }, {\n      role: 'document'\n    });\n    this.descEl_ = createEl('p', {\n      className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n      id: this.el().getAttribute('aria-describedby')\n    });\n    textContent(this.descEl_, this.description());\n    this.el_.appendChild(this.descEl_);\n    this.el_.appendChild(this.contentEl_);\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': `${this.id()}_description`,\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  description() {\n    let desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n    return desc;\n  }\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  open() {\n    if (!this.opened_) {\n      const player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n      this.on('keydown', this.handleKeyDown_);\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  }\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  close() {\n    if (!this.opened_) {\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n    this.off('keydown', this.handleKeyDown_);\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  closeable(value) {\n    if (typeof value === 'boolean') {\n      const closeable = this.closeable_ = !!value;\n      let close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        const temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  }\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  fill() {\n    this.fillWith(this.content());\n  }\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param { import('./utils/dom').ContentDescriptor} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  fillWith(content) {\n    const contentEl = this.contentEl();\n    const parentEl = contentEl.parentNode;\n    const nextSiblingEl = contentEl.nextSibling;\n\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {Event}\n      */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    const closeButton = this.getChild('closeButton');\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {Event}\n    */\n    this.trigger('modalempty');\n  }\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  { import('./utils/dom').ContentDescriptor} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return { import('./utils/dom').ContentDescriptor}\n   *         The current content of the modal dialog\n   */\n  content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  }\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  conditionalFocus_() {\n    const activeEl = document.activeElement;\n    const playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    }\n\n    // exit early if it isn't a tab key\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n    const focusableEls = this.focusableEls_();\n    const activeEl = this.el_.querySelector(':focus');\n    let focusIndex;\n    for (let i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  focusableEls_() {\n    const allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, child => {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  }\n}\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nclass TrackList extends EventTarget$2 {\n  /**\n   * Create an instance of this class\n   *\n   * @param { import('./track').default[] } tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  constructor(tracks = []) {\n    super();\n    this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.tracks_.length;\n      }\n    });\n    for (let i = 0; i < tracks.length; i++) {\n      this.addTrack(tracks[i]);\n    }\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param { import('./track').default } track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    const index = this.tracks_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n    track.labelchange_ = () => {\n      this.trigger({\n        track,\n        type: 'labelchange',\n        target: this\n      });\n    };\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param { import('./track').default } rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  removeTrack(rtrack) {\n    let track;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return { import('./track').default }\n   * @private\n   */\n  getTrackById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const track = this[i];\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @protected\n */\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param { import('./audio-track').default } track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers$1 = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\nclass AudioTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./audio-track').default[] } [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param { import('./audio-track').default } track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.enabledChange_ = () => {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers$1(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', track.enabledChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  }\n}\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param { import('./video-track').default } track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\nclass VideoTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(this, 'selectedIndex', {\n      get() {\n        for (let i = 0; i < this.length; i++) {\n          if (this[i].selected) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      set() {}\n    });\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param { import('./video-track').default } track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.selectedChange_ = () => {\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', track.selectedChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  }\n}\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nclass TextTrackList extends TrackList {\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param { import('./text-track').default } track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    super.addTrack(track);\n    if (!this.queueChange_) {\n      this.queueChange_ = () => this.queueTrigger('change');\n    }\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n    }\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', this.queueChange_);\n    const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n\n    // manually remove the event handlers we added\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  }\n}\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nclass HtmlTrackElementList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  constructor(trackElements = []) {\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.trackElements_.length;\n      }\n    });\n    for (let i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n  addTrackElement_(trackElement) {\n    const index = this.trackElements_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  getTrackElementByTrack_(track) {\n    let trackElement_;\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n    return trackElement_;\n  }\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  removeTrackElement_(trackElement) {\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nclass TextTrackCueList {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  constructor(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n  setCues_(cues) {\n    const oldLength = this.length || 0;\n    let i = 0;\n    const l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n    const defineProp = function (index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n    if (oldLength < l) {\n      i = oldLength;\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  getCueById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const cue = this[i];\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nconst VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nconst AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nconst TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nconst TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nclass Track extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  constructor(options = {}) {\n    super();\n    const trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    let label = options.label || '';\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    for (const key in trackProps) {\n      Object.defineProperty(this, key, {\n        get() {\n          return trackProps[key];\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n    Object.defineProperty(this, 'label', {\n      get() {\n        return label;\n      },\n      set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {Event}\n           */\n          this.trigger('labelchange');\n        }\n      }\n    });\n  }\n}\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\nconst parseUrl = function (url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n\n  const props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  const a = document.createElement('a');\n  a.href = url;\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n  const details = {};\n  for (let i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  /* istanbul ignore if */\n  if (!details.host) {\n    details.host = window$1.location.host;\n  }\n  return details;\n};\n\n/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nconst getAbsoluteURL = function (url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Add the url to an anchor and let the browser parse it to convert to an absolute url\n    const a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\nconst getFileExtension = function (path) {\n  if (typeof path === 'string') {\n    const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    const pathParts = splitPathRe.exec(path);\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\nconst isCrossOrigin = function (url, winLoc = window$1.location) {\n  const urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nconst parseCues = function (srcContent, track) {\n  const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  const errors = [];\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n    }\n    errors.forEach(error => log$1.error(error));\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nconst loadTrack = function (src, track) {\n  const opts = {\n    uri: src\n  };\n  const crossOrigin = isCrossOrigin(src);\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n  const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n  XHR(opts, bind_(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n          if (event.type === 'vttjserror') {\n            log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n            return;\n          }\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\nclass TextTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param { import('../tech/tech').default } options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n    const settings = merge$1(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    let mode = TextTrackMode[settings.mode] || 'disabled';\n    const default_ = settings.default;\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    super(settings);\n    this.tech_ = settings.tech;\n    this.cues_ = [];\n    this.activeCues_ = [];\n    this.preload_ = this.tech_.preloadTextTracks !== false;\n    const cues = new TextTrackCueList(this.cues_);\n    const activeCues = new TextTrackCueList(this.activeCues_);\n    let changed = false;\n    this.timeupdateHandler = bind_(this, function (event = {}) {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n        return;\n      }\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n    const disposeHandler = () => {\n      this.stopTracking();\n    };\n    this.tech_.one('dispose', disposeHandler);\n    if (mode !== 'disabled') {\n      this.startTracking();\n    }\n    Object.defineProperties(this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get() {\n          return default_;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get() {\n          return mode;\n        },\n        set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          if (mode === newMode) {\n            return;\n          }\n          mode = newMode;\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n          this.stopTracking();\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n          return cues;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n          const ct = this.tech_.currentTime();\n          const active = [];\n          for (let i = 0, l = this.cues.length; i < l; i++) {\n            const cue = this.cues[i];\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            }\n          }\n          changed = false;\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (let i = 0; i < active.length; i++) {\n              if (this.activeCues_.indexOf(active[i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set() {}\n      }\n    });\n    if (settings.src) {\n      this.src = settings.src;\n      if (!this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        this.loaded_ = true;\n      }\n      if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(this.src, this);\n      }\n    } else {\n      this.loaded_ = true;\n    }\n  }\n  startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  }\n  stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  addCue(originalCue) {\n    let cue = originalCue;\n\n    // Testing if the cue is a VTTCue in a way that survives minification\n    if (!('getCueAsHTML' in cue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n      for (const prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n    const tracks = this.tech_.textTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  removeCue(removeCue) {\n    let i = this.cues_.length;\n    while (i--) {\n      const cue = this.cues_[i];\n      if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n * @protected\n */\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nclass AudioTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'enabled', {\n      get() {\n        return enabled;\n      },\n      set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      this.enabled = settings.enabled;\n    }\n    this.loaded_ = true;\n  }\n}\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nclass VideoTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'selected', {\n      get() {\n        return selected;\n      },\n      set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      this.selected = settings.selected;\n    }\n  }\n}\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\nclass HTMLTrackElement extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param { import('../tech/tech').default } options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    super();\n    let readyState;\n    const track = new TextTrack(options);\n    this.kind = track.kind;\n    this.src = track.src;\n    this.srclang = track.language;\n    this.label = track.label;\n    this.default = track.default;\n    Object.defineProperties(this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get() {\n          return readyState;\n        }\n      },\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get() {\n          return track;\n        }\n      }\n    });\n    readyState = HTMLTrackElement.NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', () => {\n      readyState = HTMLTrackElement.LOADED;\n      this.trigger({\n        type: 'load',\n        target: this\n      });\n    });\n  }\n}\n\n/**\n * @protected\n */\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\n/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.NONE = 0;\n\n/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADING = 1;\n\n/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADED = 2;\n\n/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.ERROR = 3;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nconst NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = `${type}Tracks`;\n  NORMAL[type].privateName = `${type}Tracks_`;\n});\nconst REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nconst ALL = Object.assign({}, NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language, options = {}) {\n  const tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  const track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\nclass Tech extends Component$1 {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options = {}, ready = function () {}) {\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    super(null, options, ready);\n    this.onDurationChange_ = e => this.onDurationChange(e);\n    this.trackProgress_ = e => this.trackProgress(e);\n    this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n    this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n    this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n    this.queuedHanders_ = new Set();\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    this.hasStarted_ = false;\n    this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      if (options && options[props.getterName]) {\n        this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/tech doesn't report it.\n    if (!this.featuresProgressEvents) {\n      this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/tech doesn't report it.\n    if (!this.featuresTimeupdateEvents) {\n      this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(track => {\n      if (options[`native${track}Tracks`] === false) {\n        this[`featuresNative${track}Tracks`] = false;\n      }\n    });\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      this.featuresNativeTextTracks = true;\n    }\n    if (!this.featuresNativeTextTracks) {\n      this.emulateTextTracks();\n    }\n    this.preloadTextTracks = options.preloadTextTracks !== false;\n    this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n    this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      this.emitTapEvents();\n    }\n    if (this.constructor) {\n      this.name_ = this.constructor.name || 'Unknown Tech';\n    }\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n  triggerSourceset(src) {\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {Event}\n     */\n    this.trigger({\n      src,\n      type: 'sourceset'\n    });\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind_(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      const numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return { import('../utils/time').TimeRange }\n   *         The time range object that was created.\n   */\n  buffered() {\n    return createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  clearTracks(types) {\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(type => {\n      const list = this[`${type}Tracks`]() || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        if (type === 'text') {\n          this.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  }\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  cleanupAutoTextTracks() {\n    const list = this.autoRemoteTextTracks_ || [];\n    let i = list.length;\n    while (i--) {\n      const track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  crossOrigin() {}\n\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  setCrossOrigin() {}\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  }\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return { import('../utils/time').TimeRange }\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  played() {\n    if (this.hasStarted_) {\n      return createTimeRanges$1(0, 0);\n    }\n    return createTimeRanges$1();\n  }\n\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  play() {}\n\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   * @param {boolean} _isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   *\n   * @see {Html5#setScrubbing}\n   */\n  setScrubbing(_isScrubbing) {}\n\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  scrubbing() {}\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @param {number} _seconds\n   *        Set the current time of the media to this.\n   * @fires Tech#timeupdate\n   */\n  setCurrentTime(_seconds) {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  initTrackListeners() {\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {Event}\n      */\n    NORMAL.names.forEach(name => {\n      const props = NORMAL[name];\n      const trackListChanges = () => {\n        this.trigger(`${name}trackchange`);\n      };\n      const tracks = this[props.getterName]();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      this.on('dispose', () => {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  addWebVttScript_() {\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      const script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = () => {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjsloaded');\n      };\n      script.onerror = () => {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjserror');\n      };\n      this.on('dispose', () => {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n\n  /**\n   * Emulate texttracks\n   *\n   */\n  emulateTextTracks() {\n    const tracks = this.textTracks();\n    const remoteTracks = this.remoteTextTracks();\n    const handleAddTrack = e => tracks.addTrack(e.track);\n    const handleRemoveTrack = e => tracks.removeTrack(e.track);\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    const updateDisplay = () => this.trigger('texttrackchange');\n    const textTracksChanges = () => {\n      updateDisplay();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  }\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    const track = merge$1(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */\n  addRemoteTextTrack(options = {}, manualCleanup) {\n    const htmlTrackElement = this.createRemoteTextTrack(options);\n    if (typeof manualCleanup !== 'boolean') {\n      manualCleanup = false;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n    if (manualCleanup === false) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  removeRemoteTextTrack(track) {\n    const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  getVideoPlaybackQuality() {\n    return {};\n  }\n\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  requestPictureInPicture() {\n    return Promise.reject();\n  }\n\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  disablePictureInPicture() {\n    return true;\n  }\n\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  setDisablePictureInPicture() {}\n\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  requestVideoFrameCallback(cb) {\n    const id = newGUID();\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', () => {\n        if (this.queuedHanders_.has(id)) {\n          this.queuedHanders_.delete(id);\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n    return id;\n  }\n\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_.delete(id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  setPoster() {}\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  playsinline() {}\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  setPlaysinline() {}\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeAudioTracks(override) {}\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeVideoTracks(override) {}\n\n  /**\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} _type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} _type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  static canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  static canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  static isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  static registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error(`Tech ${name} must be a Tech`);\n    }\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  }\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  static getTech(name) {\n    if (!name) {\n      return;\n    }\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    name = toTitleCase$1(name);\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n      return window$1.videojs[name];\n    }\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVideoFrameCallback = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    let handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    const sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  const deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    const originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    let sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source handler when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nconst middlewares = {};\nconst middlewareInstances = {};\nconst TERMINATOR = {};\n\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param { import('../player').default } player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  { import('../player').default } player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\nfunction setSource(player, src, next) {\n  player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n}\n\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param { import('../tech/tech').default } tech\n *        A Video.js tech.\n */\nfunction setTech(middleware, tech) {\n  middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {*}\n *         The final value from the tech after middleware has intercepted it.\n */\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`.\n */\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\nfunction mediate(middleware, tech, method, arg = null) {\n  const callMethod = 'call' + toTitleCase$1(method);\n  const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  const terminated = middlewareValue === TERMINATOR;\n  // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n  const returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedMediators = {\n  play: 1,\n  pause: 1\n};\nfunction middlewareIterator(method) {\n  return (value, mw) => {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n    if (mw[method]) {\n      return mw[method](value);\n    }\n    return value;\n  };\n}\nfunction executeRight(mws, method, value, terminated) {\n  for (let i = mws.length - 1; i >= 0; i--) {\n    const mw = mws[i];\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\n/**\n * Clear the middleware cache for a player.\n *\n * @param  { import('../player').default } player\n *         A {@link Player} instance.\n */\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  const mws = middlewareInstances[player.id()];\n  let mw = null;\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n  for (let i = 0; i < mws.length; i++) {\n    const [mwf, mwi] = mws[i];\n    if (mwf !== mwFactory) {\n      continue;\n    }\n    mw = mwi;\n  }\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n  return mw;\n}\nfunction setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n  const [mwFactory, ...mwrest] = middleware;\n\n  // if mwFactory is a string, then we're at a fork in the road\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    const mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n    mw.setSource(Object.assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\nconst MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nconst getMimetype = function (src = '') {\n  const ext = getFileExtension(src);\n  const mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param { import('../player').default } player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nconst findMimetype = (player, src) => {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  const matchingSources = player.cache_.sources.filter(s => s.src === src);\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  const sources = player.$$('source');\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nconst filterSource = function (src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    let newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  if (!src.type) {\n    const mimetype = getMimetype(src.src);\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n  return src;\n}\n\nvar icons = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <defs>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play\\\">\\n      <path d=\\\"M16 10v28l22-14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-pause\\\">\\n      <path d=\\\"M12 38h8V10h-8v28zm16-28v28h8V10h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-audio\\\">\\n      <path d=\\\"M24 2C14.06 2 6 10.06 6 20v14c0 3.31 2.69 6 6 6h6V24h-8v-4c0-7.73 6.27-14 14-14s14 6.27 14 14v4h-8v16h6c3.31 0 6-2.69 6-6V20c0-9.94-8.06-18-18-18z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-captions\\\">\\n      <path d=\\\"M38 8H10c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h28c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM22 22h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2zm14 0h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-subtitles\\\">\\n      <path d=\\\"M40 8H8c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM8 24h8v4H8v-4zm20 12H8v-4h20v4zm12 0h-8v-4h8v4zm0-8H20v-4h20v4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-enter\\\">\\n      <path d=\\\"M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-exit\\\">\\n      <path d=\\\"M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play-circle\\\">\\n      <path d=\\\"M20 33l12-9-12-9v18zm4-29C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-mute\\\">\\n      <path d=\\\"M33 24c0-3.53-2.04-6.58-5-8.05v4.42l4.91 4.91c.06-.42.09-.85.09-1.28zm5 0c0 1.88-.41 3.65-1.08 5.28l3.03 3.03C41.25 29.82 42 27 42 24c0-8.56-5.99-15.72-14-17.54v4.13c5.78 1.72 10 7.07 10 13.41zM8.55 6L6 8.55 15.45 18H6v12h8l10 10V26.55l8.51 8.51c-1.34 1.03-2.85 1.86-4.51 2.36v4.13a17.94 17.94 0 0 0 7.37-3.62L39.45 42 42 39.45l-18-18L8.55 6zM24 8l-4.18 4.18L24 16.36V8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-low\\\">\\n      <path d=\\\"M14 18v12h8l10 10V8L22 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-medium\\\">\\n      <path d=\\\"M37 24c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zm-27-6v12h8l10 10V8L18 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-high\\\">\\n      <path d=\\\"M6 18v12h8l10 10V8L14 18H6zm27 6c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zM28 6.46v4.13c5.78 1.72 10 7.07 10 13.41s-4.22 11.69-10 13.41v4.13c8.01-1.82 14-8.97 14-17.54S36.01 8.28 28 6.46z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-spinner\\\">\\n      <path d=\\\"M18.8 21l9.53-16.51C26.94 4.18 25.49 4 24 4c-4.8 0-9.19 1.69-12.64 4.51l7.33 12.69.11-.2zm24.28-3c-1.84-5.85-6.3-10.52-11.99-12.68L23.77 18h19.31zm.52 2H28.62l.58 1 9.53 16.5C41.99 33.94 44 29.21 44 24c0-1.37-.14-2.71-.4-4zm-26.53 4l-7.8-13.5C6.01 14.06 4 18.79 4 24c0 1.37.14 2.71.4 4h14.98l-2.31-4zM4.92 30c1.84 5.85 6.3 10.52 11.99 12.68L24.23 30H4.92zm22.54 0l-7.8 13.51c1.4.31 2.85.49 4.34.49 4.8 0 9.19-1.69 12.64-4.51L29.31 26.8 27.46 30z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 24 24\\\" id=\\\"vjs-icon-hd\\\">\\n      <path d=\\\"M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-chapters\\\">\\n      <path d=\\\"M6 26h4v-4H6v4zm0 8h4v-4H6v4zm0-16h4v-4H6v4zm8 8h28v-4H14v4zm0 8h28v-4H14v4zm0-20v4h28v-4H14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 40 40\\\" id=\\\"vjs-icon-downloading\\\">\\n      <path d=\\\"M18.208 36.875q-3.208-.292-5.979-1.729-2.771-1.438-4.812-3.729-2.042-2.292-3.188-5.229-1.146-2.938-1.146-6.23 0-6.583 4.334-11.416 4.333-4.834 10.833-5.5v3.166q-5.167.75-8.583 4.646Q6.25 14.75 6.25 19.958q0 5.209 3.396 9.104 3.396 3.896 8.562 4.646zM20 28.417L11.542 20l2.083-2.083 4.917 4.916v-11.25h2.916v11.25l4.875-4.916L28.417 20zm1.792 8.458v-3.167q1.833-.25 3.541-.958 1.709-.708 3.167-1.875l2.333 2.292q-1.958 1.583-4.25 2.541-2.291.959-4.791 1.167zm6.791-27.792q-1.541-1.125-3.25-1.854-1.708-.729-3.541-1.021V3.042q2.5.25 4.77 1.208 2.271.958 4.271 2.5zm4.584 21.584l-2.25-2.25q1.166-1.5 1.854-3.209.687-1.708.937-3.541h3.209q-.292 2.5-1.229 4.791-.938 2.292-2.521 4.209zm.541-12.417q-.291-1.833-.958-3.562-.667-1.73-1.833-3.188l2.375-2.208q1.541 1.916 2.458 4.208.917 2.292 1.167 4.75z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download\\\">\\n      <path d=\\\"M10.8 40.55q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h26.35v-7.7h3.4v7.7q0 1.4-1 2.4t-2.4 1zM24 32.1L13.9 22.05l2.45-2.45 5.95 5.95V7.15h3.4v18.4l5.95-5.95 2.45 2.45z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-done\\\">\\n      <path d=\\\"M9.8 40.5v-3.45h28.4v3.45zm9.2-9.05L7.4 19.85l2.45-2.35L19 26.65l19.2-19.2 2.4 2.4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-off\\\">\\n      <path d=\\\"M4.9 4.75L43.25 43.1 41 45.3l-4.75-4.75q-.05.05-.075.025-.025-.025-.075-.025H10.8q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h22.05l-7-7-1.85 1.8L13.9 21.9l1.85-1.85L2.7 7zm26.75 14.7l2.45 2.45-3.75 3.8-2.45-2.5zM25.7 7.15V21.1l-3.4-3.45V7.15z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-share\\\">\\n      <path d=\\\"M36 32.17c-1.52 0-2.89.59-3.93 1.54L17.82 25.4c.11-.45.18-.92.18-1.4s-.07-.95-.18-1.4l14.1-8.23c1.07 1 2.5 1.62 4.08 1.62 3.31 0 6-2.69 6-6s-2.69-6-6-6-6 2.69-6 6c0 .48.07.95.18 1.4l-14.1 8.23c-1.07-1-2.5-1.62-4.08-1.62-3.31 0-6 2.69-6 6s2.69 6 6 6c1.58 0 3.01-.62 4.08-1.62l14.25 8.31c-.1.42-.16.86-.16 1.31A5.83 5.83 0 1 0 36 32.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cog\\\">\\n      <path d=\\\"M38.86 25.95c.08-.64.14-1.29.14-1.95s-.06-1.31-.14-1.95l4.23-3.31c.38-.3.49-.84.24-1.28l-4-6.93c-.25-.43-.77-.61-1.22-.43l-4.98 2.01c-1.03-.79-2.16-1.46-3.38-1.97L29 4.84c-.09-.47-.5-.84-1-.84h-8c-.5 0-.91.37-.99.84l-.75 5.3a14.8 14.8 0 0 0-3.38 1.97L9.9 10.1a1 1 0 0 0-1.22.43l-4 6.93c-.25.43-.14.97.24 1.28l4.22 3.31C9.06 22.69 9 23.34 9 24s.06 1.31.14 1.95l-4.22 3.31c-.38.3-.49.84-.24 1.28l4 6.93c.25.43.77.61 1.22.43l4.98-2.01c1.03.79 2.16 1.46 3.38 1.97l.75 5.3c.08.47.49.84.99.84h8c.5 0 .91-.37.99-.84l.75-5.3a14.8 14.8 0 0 0 3.38-1.97l4.98 2.01a1 1 0 0 0 1.22-.43l4-6.93c.25-.43.14-.97-.24-1.28l-4.22-3.31zM24 31c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-square\\\">\\n      <path d=\\\"M36 8H12c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm0 28H12V12h24v24z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle\\\">\\n      <circle cx=\\\"24\\\" cy=\\\"24\\\" r=\\\"20\\\"></circle>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-outline\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-inner-circle\\\">\\n      <path d=\\\"M24 4C12.97 4 4 12.97 4 24s8.97 20 20 20 20-8.97 20-20S35.03 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm6-16c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6 6 2.69 6 6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cancel\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm10 27.17L31.17 34 24 26.83 16.83 34 14 31.17 21.17 24 14 16.83 16.83 14 24 21.17 31.17 14 34 16.83 26.83 24 34 31.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-replay\\\">\\n      <path d=\\\"M24 10V2L14 12l10 10v-8c6.63 0 12 5.37 12 12s-5.37 12-12 12-12-5.37-12-12H8c0 8.84 7.16 16 16 16s16-7.16 16-16-7.16-16-16-16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-repeat\\\">\\n      <path d=\\\"M14 14h20v6l8-8-8-8v6H10v12h4v-8zm20 20H14v-6l-8 8 8 8v-6h24V26h-4v8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-5\\\">\\n      <path d=\\\"M17.689 98l-8.697 8.696 8.697 8.697 2.486-2.485-4.32-4.319h1.302c4.93 0 9.071 1.722 12.424 5.165 3.352 3.443 5.029 7.638 5.029 12.584h3.55c0-2.958-.553-5.73-1.658-8.313-1.104-2.583-2.622-4.841-4.555-6.774-1.932-1.932-4.19-3.45-6.773-4.555-2.584-1.104-5.355-1.657-8.313-1.657H15.5l4.615-4.615zm-8.08 21.659v13.861h11.357v5.008H9.609V143h12.7c.834 0 1.55-.298 2.146-.894.596-.597.895-1.31.895-2.145v-7.781c0-.835-.299-1.55-.895-2.147a2.929 2.929 0 0 0-2.147-.894h-8.227v-5.096H25.35v-4.384z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-10\\\">\\n      <path d=\\\"M42.315 125.63c0-4.997-1.694-9.235-5.08-12.713-3.388-3.479-7.571-5.218-12.552-5.218h-1.315l4.363 4.363-2.51 2.51-8.787-8.786L25.221 97l2.45 2.45-4.662 4.663h1.375c2.988 0 5.788.557 8.397 1.673 2.61 1.116 4.892 2.65 6.844 4.602 1.953 1.953 3.487 4.234 4.602 6.844 1.116 2.61 1.674 5.41 1.674 8.398zM8.183 142v-19.657H3.176V117.8h9.643V142zm13.63 0c-1.156 0-2.127-.393-2.912-1.178-.778-.778-1.168-1.746-1.168-2.902v-16.04c0-1.156.393-2.127 1.178-2.912.779-.779 1.746-1.168 2.902-1.168h7.696c1.156 0 2.126.392 2.911 1.177.779.78 1.168 1.747 1.168 2.903v16.04c0 1.156-.392 2.127-1.177 2.912-.779.779-1.746 1.168-2.902 1.168zm.556-4.636h6.583v-15.02H22.37z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-30\\\">\\n      <path d=\\\"M26.047 97l-8.733 8.732 8.733 8.733 2.496-2.494-4.336-4.338h1.307c4.95 0 9.108 1.73 12.474 5.187 3.367 3.458 5.051 7.668 5.051 12.635h3.565c0-2.97-.556-5.751-1.665-8.346-1.109-2.594-2.633-4.862-4.574-6.802-1.94-1.941-4.208-3.466-6.803-4.575-2.594-1.109-5.375-1.664-8.345-1.664H23.85l4.634-4.634zM2.555 117.531v4.688h10.297v5.25H5.873v4.687h6.979v5.156H2.555V142H13.36c1.061 0 1.95-.395 2.668-1.186.718-.79 1.076-1.772 1.076-2.94v-16.218c0-1.168-.358-2.149-1.076-2.94-.717-.79-1.607-1.185-2.668-1.185zm22.482.14c-1.149 0-2.11.39-2.885 1.165-.78.78-1.172 1.744-1.172 2.893v15.943c0 1.149.388 2.11 1.163 2.885.78.78 1.745 1.172 2.894 1.172h7.649c1.148 0 2.11-.388 2.884-1.163.78-.78 1.17-1.745 1.17-2.894v-15.943c0-1.15-.386-2.111-1.16-2.885-.78-.78-1.746-1.172-2.894-1.172zm.553 4.518h6.545v14.93H25.59z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-5\\\">\\n      <path d=\\\"M29.508 97l-2.431 2.43 4.625 4.625h-1.364c-2.965 0-5.742.554-8.332 1.66-2.589 1.107-4.851 2.629-6.788 4.566-1.937 1.937-3.458 4.2-4.565 6.788-1.107 2.59-1.66 5.367-1.66 8.331h3.557c0-4.957 1.68-9.16 5.04-12.611 3.36-3.45 7.51-5.177 12.451-5.177h1.304l-4.326 4.33 2.49 2.49 8.715-8.716zm-9.783 21.61v13.89h11.382v5.018H19.725V142h12.727a2.93 2.93 0 0 0 2.15-.896 2.93 2.93 0 0 0 .896-2.15v-7.798c0-.837-.299-1.554-.896-2.152a2.93 2.93 0 0 0-2.15-.896h-8.245V123h11.29v-4.392z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-10\\\">\\n      <path d=\\\"M23.119 97l-2.386 2.383 4.538 4.538h-1.339c-2.908 0-5.633.543-8.173 1.63-2.54 1.085-4.76 2.577-6.66 4.478-1.9 1.9-3.392 4.12-4.478 6.66-1.085 2.54-1.629 5.264-1.629 8.172h3.49c0-4.863 1.648-8.986 4.944-12.372 3.297-3.385 7.368-5.078 12.216-5.078h1.279l-4.245 4.247 2.443 2.442 8.55-8.55zm-9.52 21.45v4.42h4.871V142h4.513v-23.55zm18.136 0c-1.125 0-2.066.377-2.824 1.135-.764.764-1.148 1.709-1.148 2.834v15.612c0 1.124.38 2.066 1.139 2.824.764.764 1.708 1.145 2.833 1.145h7.489c1.125 0 2.066-.378 2.824-1.136.764-.764 1.145-1.709 1.145-2.833v-15.612c0-1.125-.378-2.067-1.136-2.825-.764-.764-1.708-1.145-2.833-1.145zm.54 4.42h6.408v14.617h-6.407z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-30\\\">\\n      <path d=\\\"M25.549 97l-2.437 2.434 4.634 4.635H26.38c-2.97 0-5.753.555-8.347 1.664-2.594 1.109-4.861 2.633-6.802 4.574-1.94 1.94-3.465 4.207-4.574 6.802-1.109 2.594-1.664 5.377-1.664 8.347h3.565c0-4.967 1.683-9.178 5.05-12.636 3.366-3.458 7.525-5.187 12.475-5.187h1.307l-4.335 4.338 2.495 2.494 8.732-8.732zm-11.553 20.53v4.689h10.297v5.249h-6.978v4.688h6.978v5.156H13.996V142h10.808c1.06 0 1.948-.395 2.666-1.186.718-.79 1.077-1.771 1.077-2.94v-16.217c0-1.169-.36-2.15-1.077-2.94-.718-.79-1.605-1.186-2.666-1.186zm21.174.168c-1.149 0-2.11.389-2.884 1.163-.78.78-1.172 1.745-1.172 2.894v15.942c0 1.15.388 2.11 1.162 2.885.78.78 1.745 1.17 2.894 1.17h7.649c1.149 0 2.11-.386 2.885-1.16.78-.78 1.17-1.746 1.17-2.895v-15.942c0-1.15-.387-2.11-1.161-2.885-.78-.78-1.745-1.172-2.894-1.172zm.552 4.516h6.542v14.931h-6.542z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 512 512\\\" id=\\\"vjs-icon-audio-description\\\">\\n      <g fill-rule=\\\"evenodd\\\"><path d=\\\"M227.29 381.351V162.993c50.38-1.017 89.108-3.028 117.631 17.126 27.374 19.342 48.734 56.965 44.89 105.325-4.067 51.155-41.335 94.139-89.776 98.475-24.085 2.155-71.972 0-71.972 0s-.84-1.352-.773-2.568m48.755-54.804c31.43 1.26 53.208-16.633 56.495-45.386 4.403-38.51-21.188-63.552-58.041-60.796v103.612c-.036 1.466.575 2.22 1.546 2.57\\\"></path><path d=\\\"M383.78 381.328c13.336 3.71 17.387-11.06 23.215-21.408 12.722-22.571 22.294-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.226 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M425.154 381.328c13.336 3.71 17.384-11.061 23.215-21.408 12.721-22.571 22.291-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.511c-.586 3.874 2.226 7.315 3.866 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M466.26 381.328c13.337 3.71 17.385-11.061 23.216-21.408 12.722-22.571 22.292-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.225 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894M4.477 383.005H72.58l18.573-28.484 64.169-.135s.065 19.413.065 28.62h48.756V160.307h-58.816c-5.653 9.537-140.85 222.697-140.85 222.697zm152.667-145.282v71.158l-40.453-.27 40.453-70.888z\\\"></path></g>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-next-item\\\">\\n      <path d=\\\"M12 36l17-12-17-12v24zm20-24v24h4V12h-4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-previous-item\\\">\\n      <path d=\\\"M12 12h4v24h-4zm7 12l17 12V12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-shuffle\\\">\\n      <path d=\\\"M21.17 18.34L10.83 8 8 10.83l10.34 10.34 2.83-2.83zM29 8l4.09 4.09L8 37.17 10.83 40l25.09-25.09L40 19V8H29zm.66 18.83l-2.83 2.83 6.26 6.26L29 40h11V29l-4.09 4.09-6.25-6.26z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cast\\\">\\n      <path d=\\\"M42 6H6c-2.21 0-4 1.79-4 4v6h4v-6h36v28H28v4h14c2.21 0 4-1.79 4-4V10c0-2.21-1.79-4-4-4zM2 36v6h6c0-3.31-2.69-6-6-6zm0-8v4c5.52 0 10 4.48 10 10h4c0-7.73-6.27-14-14-14zm0-8v4c9.94 0 18 8.06 18 18h4c0-12.15-9.85-22-22-22z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-picture-in-picture-enter\\\">\\n      <path d=\\\"M38 22H22v11.99h16V22zm8 16V9.96C46 7.76 44.2 6 42 6H6C3.8 6 2 7.76 2 9.96V38c0 2.2 1.8 4 4 4h36c2.2 0 4-1.8 4-4zm-4 .04H6V9.94h36v28.1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 22 18\\\" id=\\\"vjs-icon-picture-in-picture-exit\\\">\\n      <path d=\\\"M18 4H4v10h14V4zm4 12V1.98C22 .88 21.1 0 20 0H2C.9 0 0 .88 0 1.98V16c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H2V1.97h18v14.05z\\\"></path>\\n      <path fill=\\\"none\\\" d=\\\"M-1-3h24v24H-1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-facebook\\\">\\n      <path d=\\\"M1343 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759H734V905H479V609h255V391q0-186 104-288.5T1115 0q147 0 228 12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-linkedin\\\">\\n      <path d=\\\"M477 625v991H147V625h330zm21-306q1 73-50.5 122T312 490h-2q-82 0-132-49t-50-122q0-74 51.5-122.5T314 148t133 48.5T498 319zm1166 729v568h-329v-530q0-105-40.5-164.5T1168 862q-63 0-105.5 34.5T999 982q-11 30-11 81v553H659q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5T1285 602q171 0 275 113.5t104 332.5z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-twitter\\\">\\n      <path d=\\\"M1684 408q-67 98-162 167 1 14 1 42 0 130-38 259.5T1369.5 1125 1185 1335.5t-258 146-323 54.5q-271 0-496-145 35 4 78 4 225 0 401-138-105-2-188-64.5T285 1033q33 5 61 5 43 0 85-11-112-23-185.5-111.5T172 710v-4q68 38 146 41-66-44-105-115t-39-154q0-88 44-163 121 149 294.5 238.5T884 653q-8-38-8-74 0-134 94.5-228.5T1199 256q140 0 236 102 109-21 205-78-37 115-142 178 93-10 186-50z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-tumblr\\\">\\n      <path d=\\\"M1328 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26T787 1564t-95-106-55.5-120-16.5-118V676H452V461q72-26 129-69.5t91-90 58-102 34-99T779 12q1-5 4.5-8.5T791 0h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-pinterest\\\">\\n      <path d=\\\"M1664 896q0 209-103 385.5T1281.5 1561 896 1664q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214T1180 449t-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5T377 866q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5T904 517q151 0 235.5 82t84.5 213q0 170-68.5 289T980 1220q-61 0-98-43.5T859 1072q8-35 26.5-93.5t30-103T927 800q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281T128 896q0-209 103-385.5T510.5 231 896 128t385.5 103T1561 510.5 1664 896z\\\"></path>\\n    </symbol>\\n  </defs>\\n</svg>\";\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nclass MediaLoader extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function that is run when this component is ready.\n   */\n  constructor(player, options, ready) {\n    // MediaLoader has no element\n    const options_ = merge$1({\n      createEl: false\n    }, options);\n    super(player, options_, ready);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        const techName = toTitleCase$1(j[i]);\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n  }\n}\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\nclass ClickableComponent extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  { import('./player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (this.options_.controlText) {\n      this.controlText(this.options_.controlText);\n    }\n    this.handleMouseOver_ = e => this.handleMouseOver(e);\n    this.handleMouseOut_ = e => this.handleMouseOut(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.emitTapEvents();\n    this.enable();\n  }\n\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    props = Object.assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n    if (tag === 'button') {\n      log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = Object.assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    const el = createEl(tag, props, attributes);\n    if (!this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n    }\n    this.createControlTextEl(el);\n    return el;\n  }\n  dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.el()) {\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n    const localizedText = this.localize(text);\n\n    /** @protected */\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-control vjs-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enable this `ClickableComponent`\n   */\n  enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n\n  /**\n   * Disable this `ClickableComponent`\n   */\n  disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nclass PosterImage extends ClickableComponent {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update();\n    this.update_ = e => this.update(e);\n    player.on('posterchange', this.update_);\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n  dispose() {\n    this.player().off('posterchange', this.update_);\n    super.dispose();\n  }\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    // The el is an empty div to keep position in the DOM\n    // A picture and img el will be inserted when a source is set\n    return createEl('div', {\n      className: 'vjs-poster'\n    });\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      if (this.$('img')) {\n        // If the poster's element exists, give its value\n        return this.$('img').crossOrigin;\n      } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n        // If not but the tech is ready, query the tech\n        return this.player_.crossOrigin();\n      }\n      // Otherwise check options as the  poster is usually set before the state of crossorigin\n      // can be retrieved by the getter\n      return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    if (this.$('img')) {\n      this.$('img').crossOrigin = value;\n    }\n    return;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  update(event) {\n    const url = this.player().poster();\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method. (Re)creates\n   * the inner picture and img elementss when needed.\n   *\n   * @param {string} [url]\n   *        The URL to the source for the `PosterImage`. If not specified or falsy,\n   *        any source and ant inner picture/img are removed.\n   */\n  setSrc(url) {\n    if (!url) {\n      this.el_.textContent = '';\n      return;\n    }\n    if (!this.$('img')) {\n      this.el_.appendChild(createEl('picture', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      }, {}, createEl('img', {\n        loading: 'lazy',\n        crossOrigin: this.crossOrigin()\n      }, {\n        alt: ''\n      })));\n    }\n    this.$('img').src = url;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n}\n\n/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\nComponent$1.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nconst darkGray = '#222';\nconst lightGray = '#ccc';\nconst fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  let hex;\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * Converts the CSS top/right/bottom/left property numeric value to string in pixels.\n *\n * @param {number} position\n *        The CSS top/right/bottom/left property value.\n *\n * @return {string}\n *          The CSS property value that was created, like '10px'.\n *\n * @private\n */\nfunction getCSSPositionValue(position) {\n  return position ? `${position}px` : '';\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\nclass TextTrackDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const updateDisplayTextHandler = e => this.updateDisplay(e);\n    const updateDisplayHandler = e => {\n      this.updateDisplayOverlay();\n      this.updateDisplay(e);\n    };\n    player.on('loadstart', e => this.toggleDisplay(e));\n    player.on('texttrackchange', updateDisplayTextHandler);\n    player.on('loadedmetadata', e => {\n      this.updateDisplayOverlay();\n      this.preselectTrack(e);\n    });\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind_(this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      const screenOrientation = window$1.screen.orientation || window$1;\n      const changeOrientationEvent = window$1.screen.orientation ? 'change' : 'orientationchange';\n      screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n      player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n      const tracks = this.options_.playerOptions.tracks || [];\n      for (let i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n      this.preselectTrack();\n    }));\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n  preselectTrack() {\n    const modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    const trackList = this.player_.textTracks();\n    const userPref = this.player_.cache_.selectedLanguage;\n    let firstDesc;\n    let firstCaptions;\n    let preferredTrack;\n    for (let i = 0; i < trackList.length; i++) {\n      const track = trackList[i];\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  updateDisplay() {\n    const tracks = this.player_.textTracks();\n    const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n    if (allowMultipleShowingTracks) {\n      const showingTracks = [];\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        if (track.mode !== 'showing') {\n          continue;\n        }\n        showingTracks.push(track);\n      }\n      this.updateForTrack(showingTracks);\n      return;\n    }\n\n    //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    let descriptionsTrack = null;\n    let captionsSubtitlesTrack = null;\n    let i = tracks.length;\n    while (i--) {\n      const track = tracks[i];\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n\n  /**\n   * Updates the displayed TextTrack to be sure it overlays the video when a either\n   * a {@link Player#texttrackchange} or a {@link Player#fullscreenchange} is fired.\n   */\n  updateDisplayOverlay() {\n    // inset-inline and inset-block are not supprted on old chrome, but these are\n    // only likely to be used on TV devices\n    if (!this.player_.videoHeight() || !window$1.CSS.supports('inset-inline: 10px')) {\n      return;\n    }\n    const playerWidth = this.player_.currentWidth();\n    const playerHeight = this.player_.currentHeight();\n    const playerAspectRatio = playerWidth / playerHeight;\n    const videoAspectRatio = this.player_.videoWidth() / this.player_.videoHeight();\n    let insetInlineMatch = 0;\n    let insetBlockMatch = 0;\n    if (Math.abs(playerAspectRatio - videoAspectRatio) > 0.1) {\n      if (playerAspectRatio > videoAspectRatio) {\n        insetInlineMatch = Math.round((playerWidth - playerHeight * videoAspectRatio) / 2);\n      } else {\n        insetBlockMatch = Math.round((playerHeight - playerWidth / videoAspectRatio) / 2);\n      }\n    }\n    tryUpdateStyle(this.el_, 'insetInline', getCSSPositionValue(insetInlineMatch));\n    tryUpdateStyle(this.el_, 'insetBlock', getCSSPositionValue(insetBlockMatch));\n  }\n\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  updateDisplayState(track) {\n    const overrides = this.player_.textTrackSettings.getValues();\n    const cues = track.activeCues;\n    let i = cues.length;\n    while (i--) {\n      const cue = cues[i];\n      if (!cue) {\n        continue;\n      }\n      const cueDiv = cue.displayState;\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        const fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(track => {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n    const cues = [];\n\n    // push all active track cues\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    }\n\n    // removes all cues before it processes new ones\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    // add unique class to each language text track & add settings styling if necessary\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        const cueEl = track.activeCues[j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n        if (track.language) {\n          setAttribute(cueEl, 'lang', track.language);\n        }\n      }\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(track);\n      }\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nclass LoadingSpinner extends Component$1 {\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  createEl() {\n    const isAudio = this.player_.isAudio();\n    const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    const controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n    const el = super.createEl('div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n    el.appendChild(controlText);\n    return el;\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-control-text').textContent = this.localize('{1} is loading.', [this.player_.isAudio() ? 'Audio Player' : 'Video Player']);\n  }\n}\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nclass Button extends ClickableComponent {\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag, props = {}, attributes = {}) {\n    tag = 'button';\n    props = Object.assign({\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = Object.assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    const el = createEl(tag, props, attributes);\n    if (!this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n    }\n    this.createControlTextEl(el);\n    return el;\n  }\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  addChild(child, options = {}) {\n    const className = this.constructor.name;\n    log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  enable() {\n    super.enable();\n    this.el_.removeAttribute('disabled');\n  }\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  disable() {\n    super.disable();\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {KeyboardEvent} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    super.handleKeyDown(event);\n  }\n}\nComponent$1.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nclass BigPlayButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.mouseused_ = false;\n    this.setIcon('play');\n    this.on('mousedown', e => this.handleMouseDown(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {KeyboardEvent|MouseEvent|TouchEvent} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && 'clientX' in event && 'clientY' in event) {\n      silencePromise(playPromise);\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      return;\n    }\n    const cb = this.player_.getChild('controlBar');\n    const playToggle = cb && cb.getChild('playToggle');\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n    const playFocus = () => playToggle.focus();\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, () => {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `BigPlayButton` receives a\n   * `keydown` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    this.mouseused_ = false;\n    super.handleKeyDown(event);\n  }\n\n  /**\n   * Handle `mousedown` events on the `BigPlayButton`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    this.mouseused_ = true;\n  }\n}\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nclass CloseButton extends Button {\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  { import('./player').default } player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('cancel');\n    this.controlText(options && options.controlText || this.localize('Close'));\n  }\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-close-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nclass PlayToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // show or hide replay icon\n    options.replay = options.replay === undefined || options.replay;\n    this.setIcon('play');\n    this.on(player, 'play', e => this.handlePlay(e));\n    this.on(player, 'pause', e => this.handlePause(e));\n    if (options.replay) {\n      this.on(player, 'ended', e => this.handleEnded(e));\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-play-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  handleSeeked(event) {\n    this.removeClass('vjs-ended');\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  handlePlay(event) {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.setIcon('pause');\n    this.controlText('Pause');\n  }\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.setIcon('play');\n    this.controlText('Play');\n  }\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.setIcon('replay');\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n  }\n}\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\nclass TimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['timeupdate', 'ended', 'seeking'], e => this.update(e));\n    this.updateTextNode_();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const className = this.buildCSSClass();\n    const el = super.createEl('div', {\n      className: `${className} vjs-time-control vjs-control`\n    });\n    const span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize(this.labelText_)}\\u00a0`\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: `${className}-display`\n    }, {\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      role: 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Updates the displayed time according to the `updateContent` function which is defined in the child class.\n   *\n   * @param {Event} [event]\n   *          The `timeupdate`, `ended` or `seeking` (if enableSmoothSeeking is true) event that caused this function to be called.\n   */\n  update(event) {\n    if (!this.player_.options_.enableSmoothSeeking && event.type === 'seeking') {\n      return;\n    }\n    this.updateContent(event);\n  }\n\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  updateTextNode_(time = 0) {\n    time = formatTime(time);\n    if (this.formattedTime_ === time) {\n      return;\n    }\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n      if (!this.contentEl_) {\n        return;\n      }\n      let oldNode = this.textNode_;\n      if (oldNode && this.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n      this.textNode_ = document.createTextNode(this.formattedTime_);\n      if (!this.textNode_) {\n        return;\n      }\n      if (oldNode) {\n        this.contentEl_.replaceChild(this.textNode_, oldNode);\n      } else {\n        this.contentEl_.appendChild(this.textNode_);\n      }\n    });\n  }\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {}\n}\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nclass CurrentTimeDisplay extends TimeDisplay {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-current-time';\n  }\n\n  /**\n   * Update current time display\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    let time;\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nclass DurationDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    const updateContent = e => this.updateContent(e);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    this.on(player, 'durationchange', updateContent);\n\n    // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n    this.on(player, 'loadstart', updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    this.on(player, 'loadedmetadata', updateContent);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-duration';\n  }\n\n  /**\n   * Update duration time display.\n   *\n   * @param {Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  updateContent(event) {\n    const duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  }\n}\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nclass TimeDivider extends Component$1 {\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n    const div = super.createEl('div');\n    const span = super.createEl('span', {\n      textContent: '/'\n    });\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  }\n}\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nclass RemainingTimeDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'durationchange', e => this.updateContent(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" character prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n    return el;\n  }\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n    let time;\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass LiveDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateShowing();\n    this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-live-control vjs-control'\n    });\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize('Stream Type')}\\u00a0`\n    }));\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file seek-to-live.js\n */\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass SeekToLive extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateLiveEdgeStatus();\n    if (this.player_.liveTracker) {\n      this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n      this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n    this.setIcon('circle', el);\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n\n  /**\n   * Dispose of the element and stop tracking\n   */\n  dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n    this.textEl_ = null;\n    super.dispose();\n  }\n}\n/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * @file num.js\n * @module num\n */\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nfunction clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n}\n\nvar Num = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp\n});\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nclass Slider extends Component$1 {\n  /**\n  * Create an instance of this class\n  *\n  * @param { import('../player').default } player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseDown_ = e => this.handleMouseDown(e);\n    this.handleMouseUp_ = e => this.handleMouseUp(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleMouseMove_ = e => this.handleMouseMove(e);\n    this.update_ = e => this.update(e);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    this.bar = this.getChild(this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    this.vertical(!!this.options_.vertical);\n    this.enable();\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  enable() {\n    if (this.enabled()) {\n      return;\n    }\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_);\n\n    // TODO: deprecated, controlsvisible does not seem to be fired\n    this.on(this.player_, 'controlsvisible', this.update);\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    const doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  }\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props = {}, attributes = {}) {\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = Object.assign({\n      tabIndex: 0\n    }, props);\n    attributes = Object.assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    }, attributes);\n    return super.createEl(type, props, attributes);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  handleMouseDown(event) {\n    const doc = this.bar.el_.ownerDocument;\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintended scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {MouseEvent}\n     */\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseMove(event) {}\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  handleMouseUp(event) {\n    const doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {Event}\n     */\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n    if (progress === this.progress_) {\n      return progress;\n    }\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', () => {\n      // Set the new bar width or height\n      const sizeKey = this.vertical() ? 'height' : 'width';\n\n      // Convert to a percentage for css value\n      this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  calculateDistance(event) {\n    const position = getPointerPosition(this.el_, event);\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  }\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, right, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {KeyboardEvent} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n    this.vertical_ = !!bool;\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  }\n}\nComponent$1.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n// get the percent width of a time compared to the total end\nconst percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nclass LoadProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.partEls_ = [];\n    this.on(player, 'progress', e => this.update(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-load-progress'\n    });\n    const wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    const loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    const separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  }\n  dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Update progress bar\n   *\n   * @param {Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  update(event) {\n    this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n      const liveTracker = this.player_.liveTracker;\n      const buffered = this.player_.buffered();\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      const bufferedEnd = this.player_.bufferedEnd();\n      const children = this.partEls_;\n      const percent = percentify(bufferedEnd, duration);\n      if (this.percent_ !== percent) {\n        // update the width of the progress bar\n        this.el_.style.width = percent;\n        // update the control-text\n        textContent(this.percentageEl_, percent);\n        this.percent_ = percent;\n      }\n\n      // add child elements to represent the individual buffered time ranges\n      for (let i = 0; i < buffered.length; i++) {\n        const start = buffered.start(i);\n        const end = buffered.end(i);\n        let part = children[i];\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        }\n\n        //  only update if changed\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n        part.dataset.start = start;\n        part.dataset.end = end;\n\n        // set the percent based on the width of the progress bar (bufferedEnd)\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      }\n\n      // remove unused buffered range elements\n      for (let i = children.length; i > buffered.length; i--) {\n        this.el_.removeChild(children[i - 1]);\n      }\n      children.length = buffered.length;\n    });\n  }\n}\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\nclass TimeTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint, content) {\n    const tooltipRect = findPosition(this.el_);\n    const playerRect = getBoundingClientRect(this.player_.el());\n    const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    let pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = `-${pullTooltipBy}px`;\n    this.write(content);\n  }\n\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateTime(seekBarRect, seekBarPoint, time, cb) {\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n      let content;\n      const duration = this.player_.duration();\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        const liveWindow = this.player_.liveTracker.liveWindow();\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n      this.update(seekBarRect, seekBarPoint, content);\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass PlayProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('circle');\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const timeTooltip = this.getChild('timeTooltip');\n    if (!timeTooltip) {\n      return;\n    }\n    const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  }\n}\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass MouseTimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n      this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n    });\n  }\n}\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS = 5;\n\n// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER = 12;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\nclass SeekBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setEventHandlers_();\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n  setEventHandlers_() {\n    this.update_ = bind_(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n    this.enableIntervalHandler_ = e => this.enableInterval_(e);\n    this.disableIntervalHandler_ = e => this.disableInterval_(e);\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  }\n  toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      }\n\n      // we just switched back to the page and someone may be looking, so, update ASAP\n      this.update();\n    }\n  }\n  enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  }\n  disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n    if (!this.updateInterval) {\n      return;\n    }\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  update(event) {\n    // ignore updates while the tab is hidden\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n    const percent = super.update();\n    this.requestNamedAnimationFrame('SeekBar#update', () => {\n      const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n      const liveTracker = this.player_.liveTracker;\n      let duration = this.player_.duration();\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      }\n      if (this.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n        this.percent_ = percent;\n      }\n      if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n        this.currentTime_ = currentTime;\n        this.duration_ = duration;\n      }\n\n      // update the progress bar time tooltip with the current time\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n      }\n    });\n    return percent;\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  getPercent() {\n    const currentTime = this.getCurrentTime_();\n    let percent;\n    const liveTracker = this.player_.liveTracker;\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n      // prevent the percent from changing at the live edge\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n    return percent;\n  }\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event, mouseDown = false) {\n    if (!isSingleLeftClick(event) || isNaN(this.player_.duration())) {\n      return;\n    }\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n    let newTime;\n    const distance = this.calculateDistance(event);\n    const liveTracker = this.player_.liveTracker;\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration();\n\n      // Don't let video end while scrubbing.\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n      const seekableStart = liveTracker.seekableStart();\n      const seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow();\n\n      // Don't let video end while scrubbing.\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      }\n\n      // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      }\n\n      // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n      if (newTime === Infinity) {\n        return;\n      }\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.userSeek_(newTime);\n    if (this.player_.options_.enableSmoothSeeking) {\n      this.update();\n    }\n  }\n  enable() {\n    super.enable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.show();\n  }\n  disable() {\n    super.disable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.hide();\n  }\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    super.handleMouseUp(event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {Event}\n     */\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const liveTracker = this.player_.liveTracker;\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n    super.dispose();\n  }\n}\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nclass ProgressControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n    this.enable();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  handleMouseMove(event) {\n    const seekBar = this.getChild('seekBar');\n    if (!seekBar) {\n      return;\n    }\n    const playProgressBar = seekBar.getChild('playProgressBar');\n    const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n    const seekBarEl = seekBar.el();\n    const seekBarRect = findPosition(seekBarEl);\n    let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n    // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseSeek(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  disable() {\n    this.children().forEach(child => child.disable && child.disable());\n    if (!this.enabled()) {\n      return;\n    }\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false;\n\n    // Restore normal playback state if controls are disabled while scrubbing\n    if (this.player_.scrubbing()) {\n      const seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  enable() {\n    this.children().forEach(child => child.enable && child.enable());\n    if (this.enabled()) {\n      return;\n    }\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  removeListenersAddedOnMousedownAndTouchstart() {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  }\n}\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file picture-in-picture-toggle.js\n */\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\nclass PictureInPictureToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('picture-in-picture-enter');\n    this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n    this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n    this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => this.handlePictureInPictureAudioModeChange());\n\n    // TODO: Deactivate button on player emptied event.\n    this.disable();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-picture-in-picture-control vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Displays or hides the button depending on the audio mode detection.\n   * Exits picture-in-picture if it is enabled when switching to audio mode.\n   */\n  handlePictureInPictureAudioModeChange() {\n    // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n    const isSourceAudio = this.player_.currentType().substring(0, 5) === 'audio';\n    const isAudioMode = isSourceAudio || this.player_.audioPosterMode() || this.player_.audioOnlyMode();\n    if (!isAudioMode) {\n      this.show();\n      return;\n    }\n    if (this.player_.isInPictureInPicture()) {\n      this.player_.exitPictureInPicture();\n    }\n    this.hide();\n  }\n\n  /**\n   * Enables or disables button based on availability of a Picture-In-Picture mode.\n   *\n   * Enabled if\n   * - `player.options().enableDocumentPictureInPicture` is true and\n   *   window.documentPictureInPicture is available; or\n   * - `player.disablePictureInPicture()` is false and\n   *   element.requestPictureInPicture is available\n   */\n  handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false || this.player_.options_.enableDocumentPictureInPicture && 'documentPictureInPicture' in window$1) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.setIcon('picture-in-picture-exit');\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.setIcon('picture-in-picture-enter');\n      this.controlText('Picture-in-Picture');\n    }\n    this.handlePictureInPictureEnabledChange();\n  }\n\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it only in browsers that support the Picture-in-Picture API.\n   */\n  show() {\n    // Does not allow to display the pictureInPictureToggle in browsers that do not support the Picture-in-Picture API, e.g. Firefox.\n    if (typeof document.exitPictureInPicture !== 'function') {\n      return;\n    }\n    super.show();\n  }\n}\n\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nclass FullscreenToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('fullscreen-enter');\n    this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      this.disable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Exit Fullscreen');\n      this.setIcon('fullscreen-exit');\n    } else {\n      this.controlText('Fullscreen');\n      this.setIcon('fullscreen-enter');\n    }\n  }\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  }\n}\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param { import('../../component').default } self\n *        The component that should be hidden if volume is unsupported\n *\n * @param { import('../../player').default } player\n *        A reference to the player\n *\n * @private\n */\nconst checkVolumeSupport = function (self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nclass VolumeLevel extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-volume-level'\n    });\n    this.setIcon('circle', el);\n    el.appendChild(super.createEl('span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  }\n}\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-level-tooltip.js\n */\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\nclass VolumeLevelTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      const tooltipRect = getBoundingClientRect(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n      const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      let pullTooltipBy = tooltipRect.width / 2;\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n      this.el_.style.right = `-${pullTooltipBy}px`;\n    }\n    this.write(`${content}%`);\n  }\n\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n      this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * @file mouse-volume-level-display.js\n */\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\nclass MouseVolumeLevelDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical) {\n    const volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n      if (vertical) {\n        this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n      } else {\n        this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n      }\n    });\n  }\n}\n\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nclass VolumeBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on('slideractive', e => this.updateLastVolume_(e));\n    this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n    player.ready(() => this.updateARIAAttributes());\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event) {\n    const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n    if (mouseVolumeLevelDisplay) {\n      const volumeBarEl = this.el();\n      const volumeBarRect = getBoundingClientRect(volumeBarEl);\n      const vertical = this.vertical();\n      let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n      // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n\n  /**\n   * If the player is muted unmute it.\n   */\n  checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  }\n\n  /**\n   * Increase volume level for keyboard users\n   */\n  stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n  stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  updateARIAAttributes(event) {\n    const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  updateLastVolume_() {\n    const volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', () => {\n      if (this.player_.volume() === 0) {\n        this.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  }\n}\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nclass VolumeControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkVolumeSupport(this, player);\n    this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.on('mousedown', e => this.handleMouseDown(e));\n    this.on('touchstart', e => this.handleMouseDown(e));\n    this.on('mousemove', e => this.handleMouseMove(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n      this.volumeBar.addClass('vjs-slider-active');\n      this.addClass('vjs-slider-active');\n      this.trigger('slideractive');\n    });\n    this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n      this.volumeBar.removeClass('vjs-slider-active');\n      this.removeClass('vjs-slider-active');\n      this.trigger('sliderinactive');\n    });\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-horizontal';\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-control vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param { import('../../component').default } self\n *        A reference to the mute toggle button\n *\n * @param { import('../../player').default } player\n *        A reference to the player\n *\n * @private\n */\nconst checkMuteSupport = function (self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nclass MuteToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkMuteSupport(this, player);\n    this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-mute-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const vol = this.player_.volume();\n    const lastVolume = this.player_.lastVolume_();\n    if (vol === 0) {\n      const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  updateIcon_() {\n    const vol = this.player_.volume();\n    let level = 3;\n    this.setIcon('volume-high');\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n    if (vol === 0 || this.player_.muted()) {\n      this.setIcon('volume-mute');\n      level = 0;\n    } else if (vol < 0.33) {\n      this.setIcon('volume-low');\n      level = 1;\n    } else if (vol < 0.67) {\n      this.setIcon('volume-medium');\n      level = 2;\n    }\n    removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n    addClass(this.el_, `vjs-vol-${level}`);\n  }\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  updateControlText_() {\n    const soundOff = this.player_.muted() || this.player_.volume() === 0;\n    const text = soundOff ? 'Unmute' : 'Mute';\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  }\n}\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\nclass VolumePanel extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n    super(player, options);\n\n    // this handler is used by mouse handler methods below\n    this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n    this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n    this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n    this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n    this.on('keydown', e => this.handleKeyPress(e));\n    this.on('mouseover', e => this.handleMouseOver(e));\n    this.on('mouseout', e => this.handleMouseOut(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n    this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n  sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-panel-horizontal';\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-panel vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  dispose() {\n    this.handleMouseOut();\n    super.dispose();\n  }\n\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * Button to skip forward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n * e.g. options: {controlBar: {skipButtons: forward: 5}}\n *\n * @extends Button\n */\nclass SkipForward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipForwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.setIcon(`forward-${this.skipTime}`);\n      this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipForwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.forward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-forward-${this.getSkipForwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips forward in the duration/seekable range by a configurable amount of seconds.\n   * If the time left in the duration/seekable range is less than the configured 'skip forward' time,\n   * skips to end of duration/seekable range.\n   *\n   * Handle a click on a `SkipForward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    if (isNaN(this.player_.duration())) {\n      return;\n    }\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    let newTime;\n    if (currentVideoTime + this.skipTime <= duration) {\n      newTime = currentVideoTime + this.skipTime;\n    } else {\n      newTime = duration;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n  }\n}\nSkipForward.prototype.controlText_ = 'Skip Forward';\nComponent$1.registerComponent('SkipForward', SkipForward);\n\n/**\n * Button to skip backward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n *  * e.g. options: {controlBar: {skipButtons: backward: 5}}\n *\n * @extends Button\n */\nclass SkipBackward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipBackwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.setIcon(`replay-${this.skipTime}`);\n      this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipBackwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.backward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-backward-${this.getSkipBackwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips backward in the video by a configurable amount of seconds.\n   * If the current time in the video is less than the configured 'skip backward' time,\n   * skips to beginning of video or seekable range.\n   *\n   * Handle a click on a `SkipBackward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const seekableStart = liveTracker && liveTracker.isLive() && liveTracker.seekableStart();\n    let newTime;\n    if (seekableStart && currentVideoTime - this.skipTime <= seekableStart) {\n      newTime = seekableStart;\n    } else if (currentVideoTime >= this.skipTime) {\n      newTime = currentVideoTime - this.skipTime;\n    } else {\n      newTime = 0;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n  }\n}\nSkipBackward.prototype.controlText_ = 'Skip Backward';\nComponent$1.registerComponent('SkipBackward', SkipBackward);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nclass Menu extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (options) {\n      this.menuButton_ = options.menuButton;\n    }\n    this.focusedChild_ = -1;\n    this.on('keydown', e => this.handleKeyDown(e));\n\n    // All the menu item instances share the same blur handler provided by the menu container.\n    this.boundHandleBlur_ = e => this.handleBlur(e);\n    this.boundHandleTapClick_ = e => this.handleTapClick(e);\n  }\n\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n  addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    this.removeEventListenerForItem(component);\n    super.removeChild(component);\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  addItem(component) {\n    const childComponent = this.addChild(component);\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  createEl() {\n    const contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n    const el = super.createEl('div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  handleBlur(event) {\n    const relatedTarget = event.relatedTarget || document.activeElement;\n\n    // Close menu popup when a user clicks outside the menu\n    if (!this.children().some(element => {\n      return element.el() === relatedTarget;\n    })) {\n      const btn = this.menuButton_;\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      const childComponents = this.children();\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n      const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n      if (!foundComponent) {\n        return;\n      }\n\n      // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {KeyboardEvent} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  stepForward() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  stepBack() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  focus(item = 0) {\n    const children = this.children().slice();\n    const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n    if (haveTitle) {\n      children.shift();\n    }\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  }\n}\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\nclass MenuButton extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.menuButton_ = new Button(player, options);\n    this.menuButton_.controlText(this.controlText_);\n    this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    const buttonClass = Button.prototype.buildCSSClass();\n    this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n    this.menuButton_.removeClass('vjs-control');\n    this.addChild(this.menuButton_);\n    this.update();\n    this.enabled_ = true;\n    const handleClick = e => this.handleClick(e);\n    this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n    this.on(this.menuButton_, 'tap', handleClick);\n    this.on(this.menuButton_, 'click', handleClick);\n    this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n    this.on(this.menuButton_, 'mouseenter', () => {\n      this.addClass('vjs-hover');\n      this.menu.show();\n      on(document, 'keyup', this.handleMenuKeyUp_);\n    });\n    this.on('mouseleave', e => this.handleMouseLeave(e));\n    this.on('keydown', e => this.handleSubmenuKeyDown(e));\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n  update() {\n    const menu = this.createMenu();\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  createMenu() {\n    const menu = new Menu(this.player_, {\n      menuButton: this\n    });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      const titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      const titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n    this.items = this.createItems();\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n    return menu;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  createItems() {}\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n\n  /**\n   * Overwrites the `setIcon` method from `Component`.\n   * In this case, we want the icon to be appended to the menuButton.\n   *\n   * @param {string} name\n   *         The icon name to be added.\n   */\n  setIcon(name) {\n    super.setIcon(name, this.menuButton_.el_);\n  }\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  buildWrapperCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    const buttonClass = Button.prototype.buildCSSClass();\n    return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n    return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.menuButton_.el()) {\n    return this.menuButton_.controlText(text, el);\n  }\n\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  dispose() {\n    this.handleMouseLeave();\n    super.dispose();\n  }\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  focus() {\n    this.menuButton_.focus();\n  }\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  blur() {\n    this.menuButton_.blur();\n  }\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n      // Up Arrow or Down Arrow also 'press' the button to open the menu\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {Event} event\n   *        The event that caused this function to be called.\n   */\n  handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n      this.menu.focus();\n    }\n  }\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  }\n}\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nclass TrackButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const tracks = options.tracks;\n    super(player, options);\n    if (this.items.length <= 1) {\n      this.hide();\n    }\n    if (!tracks) {\n      return;\n    }\n    const updateHandler = bind_(this, this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n    this.player_.on('ready', updateHandler);\n    this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n  }\n}\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n *\n  * @typedef MenuKeys\n  * @array\n  */\nconst MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nclass MenuItem extends ClickableComponent {\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.selectable = options.selectable;\n    this.isSelected_ = options.selected || false;\n    this.multiSelectable = options.multiSelectable;\n    this.selected(this.isSelected_);\n    if (this.selectable) {\n      if (this.multiSelectable) {\n        this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      this.el_.setAttribute('role', 'menuitem');\n    }\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    const el = super.createEl('li', Object.assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs);\n\n    // swap icon with menu item text.\n    const menuItemEl = createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    });\n\n    // If using SVG icons, the element with vjs-icon-placeholder will be added separately.\n    if (this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(menuItemEl);\n    } else {\n      el.replaceChild(menuItemEl, el.querySelector('.vjs-icon-placeholder'));\n    }\n    return el;\n  }\n\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n      // Pass keydown handling up for unused keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.selected(true);\n  }\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  selected(selected) {\n    if (this.selectable) {\n      if (selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  }\n}\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nclass TextTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    super(player, options);\n    this.track = track;\n    // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n    this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    const selectedLanguageChangeHandler = (...args) => {\n      this.handleSelectedLanguageChange.apply(this, args);\n    };\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      let event;\n      this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    this.handleTracksChange();\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const referenceTrack = this.track;\n    const tracks = this.player_.textTracks();\n    super.handleClick(event);\n    if (!tracks) {\n      return;\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      }\n\n      // If this text track is the component's track and it is not showing,\n      // set it to showing.\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n\n        // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Handle text track list change\n   *\n   * @param {Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  }\n  dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning off a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nclass OffTextTrackMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n    super(player, options);\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let shouldBeSelected = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    const tracks = this.player().textTracks();\n    let allHidden = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.label);\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nclass TextTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.textTracks();\n    super(player, options);\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n  createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    let label;\n    if (this.label_) {\n      label = `${this.label_} off`;\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label\n    }));\n    this.hideThreshold_ += 1;\n    const tracks = this.player_.textTracks();\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        const item = new TrackMenuItem(this.player_, {\n          track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(`vjs-${track.kind}-menu-item`);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nclass ChaptersTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const cue = options.cue;\n    const currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    super(player, options);\n    this.track = track;\n    this.cue = cue;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player_.currentTime(this.cue.startTime);\n  }\n}\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nclass ChaptersButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this function is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('chapters');\n    this.selectCurrentItem_ = () => {\n      this.items.forEach(item => {\n        item.selected(this.track_.activeCues[0] === item.cue);\n      });\n    };\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-chapters-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n    const track = this.findChaptersTrack();\n    if (track !== this.track_) {\n      this.setTrack(track);\n      super.update();\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      super.update();\n    }\n  }\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  findChaptersTrack() {\n    const tracks = this.player_.textTracks() || [];\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      const track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return { import('../../menu/menu').default }\n   *         New menu for the chapter buttons\n   */\n  createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return super.createMenu();\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return  { import('./text-track-menu-item').default[] }\n   *         Array of menu items\n   */\n  createItems() {\n    const items = [];\n    if (!this.track_) {\n      return items;\n    }\n    const cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (let i = 0, l = cues.length; i < l; i++) {\n      const cue = cues[i];\n      const mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue\n      });\n      items.push(mi);\n    }\n    return items;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nclass DescriptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('audio-description');\n    const tracks = player.textTracks();\n    const changeHandler = bind_(this, this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-descriptions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nclass SubtitlesButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('subtitles');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subtitles-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nclass CaptionSettingsMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.track = {\n      player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    super(player, options);\n    this.addClass('vjs-texttrack-settings');\n    this.controlText(', opens ' + options.kind + ' settings dialog');\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.kind + ' settings');\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nclass CaptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('captions');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-captions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    const items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    return super.createItems(items);\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\nclass SubsCapsMenuItem extends TextTrackMenuItem {\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'captions') {\n      if (this.player_.options_.experimentalSvgIcons) {\n        this.setIcon('captions', el);\n      } else {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n      }\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: ` ${this.localize('Captions')}`\n      }));\n    }\n    return el;\n  }\n}\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\nclass SubsCapsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    this.label_ = 'subtitles';\n    this.setIcon('subtitles');\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n      this.label_ = 'captions';\n      this.setIcon('captions');\n    }\n    this.menuButton_.controlText(toTitleCase$1(this.label_));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    let items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    items = super.createItems(items, SubsCapsMenuItem);\n    return items;\n  }\n}\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nclass AudioTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    super(player, options);\n    this.track = track;\n    this.addClass(`vjs-${track.kind}-menu-item`);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', () => {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (['main-desc', 'description'].indexOf(this.options_.track.kind) >= 0) {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n    return el;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick(event);\n\n    // the audio track list will automatically toggle other tracks\n    // off for us.\n    this.track.enabled = true;\n\n    // when native audio tracks are used, we want to make sure that other tracks are turned off\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // skip the current track since we enabled it above\n        if (track === this.track) {\n          continue;\n        }\n        track.enabled = track === this.track;\n      }\n    }\n  }\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  }\n}\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nclass AudioTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.audioTracks();\n    super(player, options);\n    this.setIcon('audio');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-audio-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  createItems(items = []) {\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    const tracks = this.player_.audioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n    return items;\n  }\n}\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nclass PlaybackRateMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const label = options.rate;\n    const rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    super(player, options);\n    this.label = label;\n    this.rate = rate;\n    this.on(player, 'ratechange', e => this.update(e));\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player().playbackRate(this.rate);\n  }\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nclass PlaybackRateMenuButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n    this.updateVisibility();\n    this.updateLabel();\n    this.on(player, 'loadstart', e => this.updateVisibility(e));\n    this.on(player, 'ratechange', e => this.updateLabel(e));\n    this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  }\n  dispose() {\n    this.labelEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-playback-rate ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  createItems() {\n    const rates = this.playbackRates();\n    const items = [];\n    for (let i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  handlePlaybackRateschange(event) {\n    this.update();\n  }\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  playbackRates() {\n    const player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nclass Spacer extends Component$1 {\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n    return super.createEl(tag, props, attributes);\n  }\n}\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nclass CustomControlSpacer extends Spacer {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: '\\u00a0'\n    });\n  }\n}\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nclass ControlBar extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  }\n}\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'skipBackward', 'skipForward', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n};\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nclass ErrorDisplay extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  { import('./player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'error', e => {\n      this.close();\n      this.open(e);\n    });\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n  buildCSSClass() {\n    return `vjs-error-display ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  content() {\n    const error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  }\n}\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\nErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nconst LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nconst COLOR_BLACK = ['#000', 'Black'];\nconst COLOR_BLUE = ['#00F', 'Blue'];\nconst COLOR_CYAN = ['#0FF', 'Cyan'];\nconst COLOR_GREEN = ['#0F0', 'Green'];\nconst COLOR_MAGENTA = ['#F0F', 'Magenta'];\nconst COLOR_RED = ['#F00', 'Red'];\nconst COLOR_WHITE = ['#FFF', 'White'];\nconst COLOR_YELLOW = ['#FF0', 'Yellow'];\nconst OPACITY_OPAQUE = ['1', 'Opaque'];\nconst OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nconst OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-text-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Drop shadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: v => v === '1.00' ? null : Number(v)\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  const value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n  for (let i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\nclass TextTrackSettings extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    this.updateDisplay = this.updateDisplay.bind(this);\n\n    // fill the modal and pretend we have opened it\n    this.fill();\n    this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n    this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: this.localize('End of dialog window.')\n    });\n    this.el().appendChild(this.endDialog);\n    this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n    }\n    this.on(this.$('.vjs-done-button'), 'click', () => {\n      this.saveSettings();\n      this.close();\n    });\n    this.on(this.$('.vjs-default-button'), 'click', () => {\n      this.setDefaults();\n      this.updateDisplay();\n    });\n    each(selectConfigs, config => {\n      this.on(this.$(config.selector), 'change', this.updateDisplay);\n    });\n    if (this.options_.persistTextTrackSettings) {\n      this.restoreSettings();\n    }\n  }\n  dispose() {\n    this.endDialog = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @param {string} [legendId]\n   *        Id of associated <legend>.\n   *\n   * @param {string} [type=label]\n   *        Type of labelling element, `label` or `legend`\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElSelect_(key, legendId = '', type = 'label') {\n    const config = selectConfigs[key];\n    const id = config.id.replace('%s', this.id_);\n    const selectLabelledbyIds = [legendId, id].join(' ').trim();\n    const guid = `vjs_select_${newGUID()}`;\n    return [`<${type} id=\"${id}\"${type === 'label' ? ` for=\"${guid}\" class=\"vjs-label\"` : ''}>`, this.localize(config.label), `</${type}>`, `<select aria-labelledby=\"${selectLabelledbyIds}\" id=\"${guid}\">`].concat(config.options.map(o => {\n      const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [`<option id=\"${optionId}\" value=\"${o[0]}\" `, `aria-labelledby=\"${selectLabelledbyIds} ${optionId}\">`, this.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElFgColor_() {\n    const legendId = `captions-text-legend-${this.id_}`;\n    return ['<fieldset class=\"vjs-fg vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text'), '</legend>', '<span class=\"vjs-text-color\">', this.createElSelect_('color', legendId), '</span>', '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElBgColor_() {\n    const legendId = `captions-background-${this.id_}`;\n    return ['<fieldset class=\"vjs-bg vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text Background'), '</legend>', '<span class=\"vjs-bg-color\">', this.createElSelect_('backgroundColor', legendId), '</span>', '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElWinColor_() {\n    const legendId = `captions-window-${this.id_}`;\n    return ['<fieldset class=\"vjs-window vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Caption Area Background'), '</legend>', '<span class=\"vjs-window-color\">', this.createElSelect_('windowColor', legendId), '</span>', '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElControls_() {\n    const defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [`<button type=\"button\" class=\"vjs-default-button\" title=\"${defaultsDescription}\">`, this.localize('Reset'), `<span class=\"vjs-control-text\"> ${defaultsDescription}</span>`, '</button>', `<button type=\"button\" class=\"vjs-done-button\">${this.localize('Done')}</button>`].join('')\n    });\n  }\n  content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  }\n  label() {\n    return this.localize('Caption Settings Dialog');\n  }\n  description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  }\n  buildCSSClass() {\n    return super.buildCSSClass() + ' vjs-text-track-settings';\n  }\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  getValues() {\n    return reduce(selectConfigs, (accum, config, key) => {\n      const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n      return accum;\n    }, {});\n  }\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  setValues(values) {\n    each(selectConfigs, (config, key) => {\n      setSelectedOption(this.$(config.selector), values[key], config.parser);\n    });\n  }\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  setDefaults() {\n    each(selectConfigs, config => {\n      const index = config.hasOwnProperty('default') ? config.default : 0;\n      this.$(config.selector).selectedIndex = index;\n    });\n  }\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  restoreSettings() {\n    let values;\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  /**\n   * Save text track settings to localStorage\n   */\n  saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n    const values = this.getValues();\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n\n  /**\n   * Update display of text track settings\n   */\n  updateDisplay() {\n    const ttDisplay = this.player_.getChild('textTrackDisplay');\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    const cb = this.player_.controlBar;\n    const subsCapsBtn = cb && cb.subsCapsButton;\n    const ccBtn = cb && cb.captionsButton;\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  }\n\n  /**\n   * Repopulate dialog with new localizations on languagechange\n   */\n  handleLanguagechange() {\n    this.fill();\n  }\n}\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\nclass ResizeManager extends Component$1 {\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  constructor(player, options) {\n    let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    const options_ = merge$1({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    super(player, options_);\n    this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    this.loadListener_ = null;\n    this.resizeObserver_ = null;\n    this.debouncedHandler_ = debounce(() => {\n      this.resizeHandler();\n    }, 100, false, this);\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n      this.resizeObserver_.observe(player.el());\n    } else {\n      this.loadListener_ = () => {\n        if (!this.el_ || !this.el_.contentWindow) {\n          return;\n        }\n        const debouncedHandler_ = this.debouncedHandler_;\n        let unloadListener_ = this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        };\n\n        // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n        on(this.el_.contentWindow, 'unload', unloadListener_);\n        on(this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n      this.one('load', this.loadListener_);\n    }\n  }\n  createEl() {\n    return super.createEl('iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n    this.player_.trigger('playerresize');\n  }\n  dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\nconst defaults = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\nclass LiveTracker extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect whether we are live or not.\n   */\n  constructor(player, options) {\n    // LiveTracker does not need an element\n    const options_ = merge$1(defaults, options, {\n      createEl: false\n    });\n    super(player, options_);\n    this.trackLiveHandler_ = () => this.trackLive_();\n    this.handlePlay_ = e => this.handlePlay(e);\n    this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n    this.handleSeeked_ = e => this.handleSeeked(e);\n    this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n    this.reset_();\n    this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n    // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n    this.on(this.player_, 'canplay', () => this.toggleTracking());\n  }\n\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  trackLive_() {\n    const seekable = this.player_.seekable();\n\n    // skip undefined seekable\n    if (!seekable || !seekable.length) {\n      return;\n    }\n    const newTime = Number(window$1.performance.now().toFixed(4));\n    const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    const liveCurrentTime = this.liveCurrentTime();\n    const currentTime = this.player_.currentTime();\n\n    // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n    let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n    // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  handleDurationchange() {\n    this.toggleTracking();\n  }\n\n  /**\n   * start/stop tracking\n   */\n  toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n\n  /**\n   * start tracking live playback\n   */\n  startTracking() {\n    if (this.isTracking()) {\n      return;\n    }\n\n    // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  handleSeeked() {\n    const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n\n  /**\n   * stop tracking live playback\n   */\n  stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  seekableEnd() {\n    const seekable = this.player_.seekable();\n    const seekableEnds = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    }\n\n    // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  seekableStart() {\n    const seekable = this.player_.seekable();\n    const seekableStarts = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    }\n\n    // grab the first seekable start after sorting, or if there are none\n    // default to 0\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  liveWindow() {\n    const liveCurrentTime = this.liveCurrentTime();\n\n    // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n    return liveCurrentTime - this.seekableStart();\n  }\n\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Whether liveTracker is tracking\n   */\n  isLive() {\n    return this.isTracking();\n  }\n\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Whether playback is at the live edge\n   */\n  atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n\n  /**\n   * The number of seconds that have occurred after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  pastSeekEnd() {\n    const seekableEnd = this.seekableEnd();\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n\n  /**\n   * Whether live tracker is currently tracking or not.\n   */\n  isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n    if (this.atLiveEdge()) {\n      return;\n    }\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n\n  /**\n   * Dispose of liveTracker\n   */\n  dispose() {\n    this.stopTracking();\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */\nclass TitleBar extends Component$1 {\n  constructor(player, options) {\n    super(player, options);\n    this.on('statechanged', e => this.updateDom_());\n    this.updateDom_();\n  }\n\n  /**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    this.els = {\n      title: createEl('div', {\n        className: 'vjs-title-bar-title',\n        id: `vjs-title-bar-title-${newGUID()}`\n      }),\n      description: createEl('div', {\n        className: 'vjs-title-bar-description',\n        id: `vjs-title-bar-description-${newGUID()}`\n      })\n    };\n    return createEl('div', {\n      className: 'vjs-title-bar'\n    }, {}, values(this.els));\n  }\n\n  /**\n   * Updates the DOM based on the component's state object.\n   */\n  updateDom_() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    const techAriaAttrs = {\n      title: 'aria-labelledby',\n      description: 'aria-describedby'\n    };\n    ['title', 'description'].forEach(k => {\n      const value = this.state[k];\n      const el = this.els[k];\n      const techAriaAttr = techAriaAttrs[k];\n      emptyEl(el);\n      if (value) {\n        textContent(el, value);\n      }\n\n      // If there is a tech element available, update its ARIA attributes\n      // according to whether a title and/or description have been provided.\n      if (techEl) {\n        techEl.removeAttribute(techAriaAttr);\n        if (value) {\n          techEl.setAttribute(techAriaAttr, el.id);\n        }\n      }\n    });\n    if (this.state.title || this.state.description) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */\n  update(options) {\n    this.setState(options);\n  }\n\n  /**\n   * Dispose the component.\n   */\n  dispose() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    if (techEl) {\n      techEl.removeAttribute('aria-labelledby');\n      techEl.removeAttribute('aria-describedby');\n    }\n    super.dispose();\n    this.els = null;\n  }\n}\nComponent$1.registerComponent('TitleBar', TitleBar);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param { import('./html5').default } tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nconst sourcesetLoad = tech => {\n  const el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  const sources = tech.$$('source');\n  const srcUrls = [];\n  let src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (let i = 0; i < sources.length; i++) {\n    const url = sources[i].src;\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nconst innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set(v) {\n    // make a dummy node to use innerHTML on\n    const dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    const docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nconst getDescriptor = (priority, prop) => {\n  let descriptor = {};\n  for (let i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\nconst getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nconst firstSourceWatch = function (tech) {\n  const el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n  const old = {};\n  const innerDescriptor = getInnerHTMLDescriptor(tech);\n  const appendWrapper = appendFn => (...args) => {\n    const retval = appendFn.apply(el, args);\n    sourcesetLoad(tech);\n    return retval;\n  };\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', merge$1(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n  el.resetSourceWatch_ = () => {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(k => {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */\nconst srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n    return '';\n  },\n  set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\nconst getSrcDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nconst setupSourceset = function (tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n  const el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n  const srcDescriptor = getSrcDescriptor(tech);\n  const oldSetAttribute = el.setAttribute;\n  const oldLoad = el.load;\n  Object.defineProperty(el, 'src', merge$1(srcDescriptor, {\n    set: v => {\n      const retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n  el.setAttribute = (n, v) => {\n    const retval = oldSetAttribute.call(el, n, v);\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n    return retval;\n  };\n  el.load = () => {\n    const retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n    return retval;\n  };\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n  el.resetSourceset_ = () => {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * @file html5.js\n */\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\nclass Html5 extends Tech {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options, ready) {\n    super(options, ready);\n    const source = options.source;\n    let crossoriginTracks = false;\n    this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      this.setSource(source);\n    } else {\n      this.handleLateInit_(this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      this.setupSourcesetHandling_();\n    }\n    this.isScrubbing_ = false;\n    if (this.el_.hasChildNodes()) {\n      const nodes = this.el_.childNodes;\n      let nodesLength = nodes.length;\n      const removeNodes = [];\n      while (nodesLength--) {\n        const node = nodes[nodesLength];\n        const nodeName = node.nodeName.toLowerCase();\n        if (nodeName === 'track') {\n          if (!this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            this.remoteTextTrackEls().addTrackElement_(node);\n            this.remoteTextTracks().addTrack(node.track);\n            this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n      for (let i = 0; i < removeNodes.length; i++) {\n        this.el_.removeChild(removeNodes[i]);\n      }\n    }\n    this.proxyNativeTracks_();\n    if (this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n      this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    this.proxyWebkitFullscreen_();\n    this.triggerReady();\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n  dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    super.dispose();\n  }\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  restoreMetadataTracksInIOSNativePlayer_() {\n    const textTracks = this.textTracks();\n    let metadataTracksPreFullscreenState;\n\n    // captures a snapshot of every metadata track's current state\n    const takeMetadataTrackSnapshot = () => {\n      metadataTracksPreFullscreenState = [];\n      for (let i = 0; i < textTracks.length; i++) {\n        const track = textTracks[i];\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n    const restoreTrackMode = () => {\n      for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        const storedTrack = metadataTracksPreFullscreenState[i];\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', () => {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', () => {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  overrideNative_(type, override) {\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[`featuresNative${type}Tracks`]) {\n      return;\n    }\n    const lowerCaseType = type.toLowerCase();\n    if (this[`${lowerCaseType}TracksListeners_`]) {\n      Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n        const elTracks = this.el()[`${lowerCaseType}Tracks`];\n        elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n      });\n    }\n    this[`featuresNative${type}Tracks`] = !override;\n    this[`${lowerCaseType}TracksListeners_`] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  proxyNativeTracksForType_(name) {\n    const props = NORMAL[name];\n    const elTracks = this.el()[props.getterName];\n    const techTracks = this[props.getterName]();\n    if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    const listeners = {\n      change: e => {\n        const event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event);\n\n        // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n        if (name === 'text') {\n          this[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    const removeOldTracks = function () {\n      const removeTracks = [];\n      for (let i = 0; i < techTracks.length; i++) {\n        let found = false;\n        for (let j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(eventName => {\n      const listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n      this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', e => this.off('loadstart', removeOldTracks));\n  }\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  proxyNativeTracks_() {\n    NORMAL.names.forEach(name => {\n      this.proxyNativeTracksForType_(name);\n    });\n  }\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    let el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        const clone = el.cloneNode(true);\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        const attributes = merge$1({}, tagAttributes);\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n        setAttributes(el, Object.assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n      el.playerId = this.options_.playerId;\n    }\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n    for (let i = 0; i < settingsAttrs.length; i++) {\n      const attr = settingsAttrs[i];\n      const value = this.options_[attr];\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n    return el;\n  }\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      let loadstartFired = false;\n      const setLoadstartFired = function () {\n        loadstartFired = true;\n      };\n      this.on('loadstart', setLoadstartFired);\n      const triggerLoadstart = function () {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    const eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  scrubbing() {\n    return this.isScrubbing_;\n  }\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  duration() {\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      const checkProgress = () => {\n        if (this.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (this.el_.duration === Infinity) {\n            this.trigger('durationchange');\n          }\n          this.off('timeupdate', checkProgress);\n        }\n      };\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  }\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  width() {\n    return this.el_.offsetWidth;\n  }\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  height() {\n    return this.el_.offsetHeight;\n  }\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  proxyWebkitFullscreen_() {\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n    const endFn = function () {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n      // Safari will sometimes set controls on the videoelement when existing fullscreen.\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n    const beginFn = function () {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', () => {\n      this.off('webkitbeginfullscreen', beginFn);\n      this.off('webkitendfullscreen', endFn);\n    });\n  }\n\n  /**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  supportsFullScreen() {\n    return typeof this.el_.webkitEnterFullScreen === 'function';\n  }\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  enterFullScreen() {\n    const video = this.el_;\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play());\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n    this.el_.webkitExitFullScreen();\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n    return super.requestVideoFrameCallback(cb);\n  }\n\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      super.cancelVideoFrameCallback(id);\n    }\n  }\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  src(src) {\n    if (src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(src);\n  }\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  }\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  setControls(val) {\n    this.el_.controls = !!val;\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return super.addTextTrack(kind, label, language);\n    }\n    return this.el_.addTextTrack(kind, label, language);\n  }\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return super.createRemoteTextTrack(options);\n    }\n    const htmlTrackElement = document.createElement('track');\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  removeRemoteTextTrack(track) {\n    super.removeRemoteTextTrack(track);\n    if (this.featuresNativeTextTracks) {\n      const tracks = this.$$('track');\n      let i = tracks.length;\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n    const videoPlaybackQuality = {};\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n    if (window$1.performance) {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    }\n    return videoPlaybackQuality;\n  }\n}\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n  const video = document.createElement('video');\n  const track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    const canControl = volume !== Html5.TEST_VID.volume;\n\n    // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(() => {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      });\n\n      // default iOS to false, which will be updated in the timeout above.\n      return false;\n    }\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {boolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    const muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    const noop = () => {};\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n  defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  const sources = el.querySelectorAll('source');\n  let i = sources.length;\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    const ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n  }\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n/**\n * @file player.js\n */\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nconst BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nconst BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k => {\n  const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n  BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n});\nconst DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in three ways:\n * 1. By calling `videojs.getPlayer('example_video_1');`\n * 2. By calling `videojs('example_video_1');` (not recommended)\n * 2. By using it directly via `videojs.players.example_video_1;`\n *\n * @extends Component\n * @global\n */\nclass Player extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Function} [ready]\n   *        Ready callback function.\n   */\n  constructor(tag, options, ready) {\n    // Make sure tag ID exists\n    // also here.. probably better\n    tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = Object.assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      const closest = tag.closest('[lang]');\n      if (closest) {\n        options.language = closest.getAttribute('lang');\n      }\n    }\n\n    // Run base component initializing with new options\n    super(null, options, ready);\n\n    // Create bound methods for document listeners.\n    this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n    this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n    this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n    this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n    this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n    this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n    this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n    this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n    this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n    this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n    this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n\n    // default isFullscreen_ to false\n    this.isFullscreen_ = false;\n\n    // create logger\n    this.log = createLogger(this.id_);\n\n    // Hold our own reference to fullscreen api so it can be mocked in tests\n    this.fsApi_ = FullscreenApi;\n\n    // Tracks when a tech changes the poster\n    this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Init state hasStarted_\n    this.hasStarted_ = false;\n\n    // Init state userActive_\n    this.userActive_ = false;\n\n    // Init debugEnabled_\n    this.debugEnabled_ = false;\n\n    // Init state audioOnlyMode_\n    this.audioOnlyMode_ = false;\n\n    // Init state audioPosterMode_\n    this.audioPosterMode_ = false;\n\n    // Init state audioOnlyCache_\n    this.audioOnlyCache_ = {\n      playerHeight: null,\n      hiddenChildren: []\n    };\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    this.language(this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      const languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      this.languages_ = languagesToLower;\n    } else {\n      this.languages_ = Player.prototype.options_.languages;\n    }\n    this.resetCache_();\n\n    // Set poster\n    /** @type string */\n    this.poster_ = options.poster || '';\n\n    // Set controls\n    /** @type {boolean} */\n    this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    this.changingSrc_ = false;\n    this.playCallbacks_ = [];\n    this.playTerminatedQueue_ = [];\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      this.autoplay(this.options_.autoplay);\n    }\n\n    // check plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        if (typeof this[name] !== 'function') {\n          throw new Error(`plugin \"${name}\" does not exist`);\n        }\n      });\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    this.scrubbing_ = false;\n    this.el_ = this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(this, {\n      eventBusKey: 'el_'\n    });\n\n    // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n    if (this.fsApi_.requestFullscreen) {\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n    if (this.fluid_) {\n      this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    const playerOptionsCopy = merge$1(this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        this[name](options.plugins[name]);\n      });\n    }\n\n    // Enable debug mode to fire debugon event for all plugins.\n    if (options.debug) {\n      this.debug(true);\n    }\n    this.options_.playerOptions = playerOptionsCopy;\n    this.middleware_ = [];\n    this.playbackRates(options.playbackRates);\n    if (options.experimentalSvgIcons) {\n      // Add SVG Sprite to the DOM\n      const parser = new window$1.DOMParser();\n      const parsedSVG = parser.parseFromString(icons, 'image/svg+xml');\n      const errorNode = parsedSVG.querySelector('parsererror');\n      if (errorNode) {\n        log$1.warn('Failed to load SVG Icons. Falling back to Font Icons.');\n        this.options_.experimentalSvgIcons = null;\n      } else {\n        const sprite = parsedSVG.documentElement;\n        sprite.style.display = 'none';\n        this.el_.appendChild(sprite);\n        this.addClass('vjs-svg-icons-enabled');\n      }\n    }\n    this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (this.controls()) {\n      this.addClass('vjs-controls-enabled');\n    } else {\n      this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    this.el_.setAttribute('role', 'region');\n    if (this.isAudio()) {\n      this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n    } else {\n      this.el_.setAttribute('aria-label', this.localize('Video Player'));\n    }\n    if (this.isAudio()) {\n      this.addClass('vjs-audio');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n    if (TOUCH_ENABLED) {\n      this.addClass('vjs-touch-enabled');\n    }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[this.id_] = this;\n\n    // Add a major version class to aid css in plugins\n    const majorVersion = version$6.split('.')[0];\n    this.addClass(`vjs-v${majorVersion}`);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    this.userActive(true);\n    this.reportUserActivity();\n    this.one('play', e => this.listenForUserActivity_(e));\n    this.on('keydown', e => this.handleKeyDown(e));\n    this.on('languagechange', e => this.handleLanguagechange(e));\n    this.breakpoints(this.options_.breakpoints);\n    this.responsive(this.options_.responsive);\n\n    // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n    this.on('ready', () => {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      this.audioPosterMode(this.options_.audioPosterMode);\n      this.audioOnlyMode(this.options_.audioOnlyMode);\n    });\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n  dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    // Make sure all player-specific document listeners are unbound. This is\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n    if (this.tag) {\n      this.tag = null;\n    }\n    clearCacheForPlayer(this);\n\n    // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      const list = this[props.getterName]();\n\n      // if it is not a native list\n      // we have to manually remove event listeners\n      if (list && list.off) {\n        list.off();\n      }\n    });\n\n    // the actual .el_ is removed here, or replaced if\n    super.dispose({\n      restoreEl: this.options_.restoreEl\n    });\n  }\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    let tag = this.tag;\n    let el;\n    let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = super.createEl('div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    const attrs = getAttributes(tag);\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(k => {\n        try {\n          tag[k] = el[k];\n        } catch (e) {\n          // we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 on Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    // doesn't change behavior of Chrome if JAWS is not being used\n    if (IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overridable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      const defaultsStyleEl = $('.vjs-styles-defaults');\n      const head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n    // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    const links = tag.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      const linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      return this.techGet_('crossOrigin');\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.techCall_('setCrossOrigin', value);\n    if (this.posterImage) {\n      this.posterImage.crossOrigin(value);\n    }\n    return;\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number|string} [value]\n   *        CSS value to set the `Player`'s width to.\n   *\n   * @return {number|undefined}\n   *         - The current width of the `Player` when getting.\n   *         - Nothing when setting\n   */\n  width(value) {\n    return this.dimension('width', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number|string} [value]\n   *        CSS value to set the `Player`'s height to.\n   *\n   * @return {number|undefined}\n   *         - The current height of the `Player` when getting.\n   *         - Nothing when setting\n   */\n  height(value) {\n    return this.dimension('height', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number|string} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  dimension(dimension, value) {\n    const privDimension = dimension + '_';\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n    const parsedVal = parseFloat(value);\n    if (isNaN(parsedVal)) {\n      log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n      return;\n    }\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n    this.fluid_ = !!bool;\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, () => {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n    this.fill_ = !!bool;\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      const techEl = this.tech_ && this.tech_.el();\n      if (techEl) {\n        if (width >= 0) {\n          techEl.width = width;\n        }\n        if (height >= 0) {\n          techEl.height = height;\n        }\n      }\n      return;\n    }\n    let width;\n    let height;\n    let aspectRatio;\n    let idClass;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    const ratioParts = aspectRatio.split(':');\n    const ratioMultiplier = ratioParts[1] / ratioParts[0];\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calculate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n  }\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  loadTech_(techName, source) {\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n    const titleTechName = toTitleCase$1(techName);\n    const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n    let autoplay = this.autoplay();\n\n    // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    }\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    const techOptions = {\n      source,\n      autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': `${this.id()}_${camelTechName}_api`,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      techOptions[props.getterName] = this[props.privateName];\n    });\n    Object.assign(techOptions, this.options_[titleTechName]);\n    Object.assign(techOptions, this.options_[camelTechName]);\n    Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    const TechClass = Tech.getTech(techName);\n    if (!TechClass) {\n      throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n    }\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind_(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(event => {\n      this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n      this.on(this.tech_, event, eventObj => {\n        if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n          this.queuedCallbacks_.push({\n            callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n            event: eventObj\n          });\n          return;\n        }\n        this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n    this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n    this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n    this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n    this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n    this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n    this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n    this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n    this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n    this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n    this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n    this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n    this.on(this.tech_, 'error', e => this.handleTechError_(e));\n    this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n    this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n    this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      this[props.privateName] = this[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n    this.isPosterFromTech_ = false;\n  }\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n    return this.tech_;\n  }\n\n  /**\n   * An object that contains Video.js version.\n   *\n   * @typedef {Object} PlayerVersion\n   *\n   * @property {string} 'video.js' - Video.js version\n   */\n\n  /**\n   * Returns an object with Video.js version.\n   *\n   * @return {PlayerVersion}\n   *          An object with Video.js version.\n   */\n  version() {\n    return {\n      'video.js': version$6\n    };\n  }\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  }\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */\n  handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended', 'vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // Update the duration\n    this.handleTechDurationChange_();\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {Event}\n       */\n      this.trigger('loadstart');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  manualAutoplay_(type) {\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n    const resolveMuted = () => {\n      const previouslyMuted = this.muted();\n      this.muted(true);\n      const restoreMuted = () => {\n        this.muted(previouslyMuted);\n      };\n\n      // restore muted on play terminatation\n      this.playTerminatedQueue_.push(restoreMuted);\n      const mutedPromise = this.play();\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n      return mutedPromise.catch(err => {\n        restoreMuted();\n        throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n      });\n    };\n    let promise;\n\n    // if muted defaults to true\n    // the only thing we can do is call play\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n      if (isPromise(promise)) {\n        promise = promise.catch(resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n    if (!isPromise(promise)) {\n      return;\n    }\n    return promise.then(() => {\n      this.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(() => {\n      this.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  updateSourceCaches_(srcObj = '') {\n    let src = srcObj;\n    let type = '';\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = merge$1({}, srcObj, {\n      src,\n      type\n    });\n    const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n    const sourceElSources = [];\n    const sourceEls = this.$$('source');\n    const matchingSourceEls = [];\n    for (let i = 0; i < sourceEls.length; i++) {\n      const sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  }\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  handleTechSourceset_(event) {\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      let updateSourceCaches = src => this.updateSourceCaches_(src);\n      const playerSrc = this.currentSource().src;\n      const eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = () => {};\n        }\n      }\n\n      // update the source to the initial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], e => {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n          const techSrc = this.techGet_('currentSrc');\n          this.lastSource_.tech = techSrc;\n          this.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n    if (request === this.hasStarted_) {\n      return;\n    }\n    this.hasStarted_ = request;\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  handleTechPlay_() {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {Event}\n     */\n    this.trigger('play');\n  }\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  }\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  handleTechWaiting_() {\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {Event}\n     */\n    this.trigger('waiting');\n\n    // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n    const timeWhenWaiting = this.currentTime();\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== this.currentTime()) {\n        this.removeClass('vjs-waiting');\n        this.off('timeupdate', timeUpdateListener);\n      }\n    };\n    this.on('timeupdate', timeUpdateListener);\n  }\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {Event}\n     */\n    this.trigger('canplay');\n  }\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {Event}\n     */\n    this.trigger('canplaythrough');\n  }\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {Event}\n     */\n    this.trigger('playing');\n  }\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {Event}\n     */\n    this.trigger('seeking');\n  }\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  handleTechSeeked_() {\n    this.removeClass('vjs-seeking', 'vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {Event}\n     */\n    this.trigger('seeked');\n  }\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {Event}\n     */\n    this.trigger('pause');\n  }\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {Event}\n     */\n    this.trigger('ended');\n  }\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n\n  /**\n   * Handle touch to end\n   *\n   * @param {Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  documentFullscreenChange_(e) {\n    const targetPlayer = e.target.player;\n\n    // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n    const el = this.el();\n    let isFs = document[this.fsApi_.fullscreenElement] === el;\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    }\n    this.isFullscreen(isFs);\n  }\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', () => {\n          this.removeClass('vjs-ios-native-fs');\n        });\n      }\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n\n  /**\n   * @private\n   */\n  togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  handleTechError_() {\n    const error = this.tech_.error();\n    if (error) {\n      this.error(error);\n    }\n  }\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  handleTechTextData_() {\n    let data = null;\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {Event}\n     */\n    this.trigger('textdata', data);\n  }\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  getCache() {\n    return this.cache_;\n  }\n\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} [arg]\n   *        the argument to pass\n   *\n   * @private\n   */\n  techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n\n  /**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */\n  techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Log error when playback tech object is present but method\n    // is undefined or unavailable\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  play() {\n    return new Promise(resolve => {\n      this.play_(resolve);\n    });\n  }\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  play_(callback = silencePromise) {\n    this.playCallbacks_.push(callback);\n    const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n    const isSafariOrIOS = Boolean(IS_ANY_SAFARI || IS_IOS);\n\n    // treat calls to play_ somewhat like the `one` event function\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    }\n\n    // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = e => {\n        this.play_();\n      };\n      this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n      // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n      if (!isSrcReady && isSafariOrIOS) {\n        this.load();\n      }\n      return;\n    }\n\n    // If the player/tech is ready and we have a source, we can attempt playback.\n    const val = this.techGet_('play');\n\n    // For native playback, reset the progress bar if we get a play call from a replay.\n    const isNativeReplay = isSafariOrIOS && this.hasClass('vjs-ended');\n    if (isNativeReplay) {\n      this.resetProgressBar_();\n    }\n    // play was terminated if the returned value is null\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differentiate between a terminated play and an actual call to play.\n   */\n  runPlayTerminatedQueue_() {\n    const queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  runPlayCallbacks_(val) {\n    const callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = [];\n    // clear play terminatedQueue since we finished a real play\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n\n  /**\n   * Pause the video playback\n   */\n  pause() {\n    this.techCall_('pause');\n  }\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  played() {\n    return this.techGet_('played') || createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Sets or returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean|undefined}\n   *         - The value of scrubbing when getting\n   *         - Nothing when setting\n   */\n  scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number|undefined}\n   *         - the current time in seconds when getting\n   *         - Nothing when setting\n   */\n  currentTime(seconds) {\n    if (seconds === undefined) {\n      // cache last currentTime and return. default to 0 seconds\n      //\n      // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n      // currentTime when scrubbing, but may not provide much performance benefit after all.\n      // Should be tested. Also something has to read the actual current time or the cache will\n      // never get updated.\n      this.cache_.currentTime = this.techGet_('currentTime') || 0;\n      return this.cache_.currentTime;\n    }\n    if (seconds < 0) {\n      seconds = 0;\n    }\n    if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n      this.cache_.initTime = seconds;\n      this.off('canplay', this.boundApplyInitTime_);\n      this.one('canplay', this.boundApplyInitTime_);\n      return;\n    }\n    this.techCall_('setCurrentTime', seconds);\n    this.cache_.initTime = 0;\n    if (isFinite(seconds)) {\n      this.cache_.currentTime = Number(seconds);\n    }\n  }\n\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number|undefined}\n   *         - The duration of the video in seconds when getting\n   *         - Nothing when setting\n   */\n  duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing\n      this.cache_.duration = seconds;\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n\n  /**\n   * A remaining time function that is intended to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  buffered() {\n    let buffered = this.techGet_('buffered');\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    return buffered;\n  }\n\n  /**\n   * Get the TimeRanges of the media that are currently available\n   * for seeking to.\n   *\n   * @see [Seekable Spec]{@link https://html.spec.whatwg.org/multipage/media.html#dom-media-seekable}\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  seekable() {\n    let seekable = this.techGet_('seekable');\n    if (!seekable || !seekable.length) {\n      seekable = createTimeRanges$1(0, 0);\n    }\n    return seekable;\n  }\n\n  /**\n   * Returns whether the player is in the \"seeking\" state.\n   *\n   * @return {boolean} True if the player is in the seeking state, false if not.\n   */\n  seeking() {\n    return this.techGet_('seeking');\n  }\n\n  /**\n   * Returns whether the player is in the \"ended\" state.\n   *\n   * @return {boolean} True if the player is in the ended state, false if not.\n   */\n  ended() {\n    return this.techGet_('ended');\n  }\n\n  /**\n   * Returns the current state of network activity for the element, from\n   * the codes in the list below.\n   * - NETWORK_EMPTY (numeric value 0)\n   *   The element has not yet been initialised. All attributes are in\n   *   their initial states.\n   * - NETWORK_IDLE (numeric value 1)\n   *   The element's resource selection algorithm is active and has\n   *   selected a resource, but it is not actually using the network at\n   *   this time.\n   * - NETWORK_LOADING (numeric value 2)\n   *   The user agent is actively trying to download data.\n   * - NETWORK_NO_SOURCE (numeric value 3)\n   *   The element's resource selection algorithm is active, but it has\n   *   not yet found a resource to use.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n   * @return {number} the current network activity state\n   */\n  networkState() {\n    return this.techGet_('networkState');\n  }\n\n  /**\n   * Returns a value that expresses the current state of the element\n   * with respect to rendering the current playback position, from the\n   * codes in the list below.\n   * - HAVE_NOTHING (numeric value 0)\n   *   No information regarding the media resource is available.\n   * - HAVE_METADATA (numeric value 1)\n   *   Enough of the resource has been obtained that the duration of the\n   *   resource is available.\n   * - HAVE_CURRENT_DATA (numeric value 2)\n   *   Data for the immediate current playback position is available.\n   * - HAVE_FUTURE_DATA (numeric value 3)\n   *   Data for the immediate current playback position is available, as\n   *   well as enough data for the user agent to advance the current\n   *   playback position in the direction of playback.\n   * - HAVE_ENOUGH_DATA (numeric value 4)\n   *   The user agent estimates that enough data is available for\n   *   playback to proceed uninterrupted.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n   * @return {number} the current playback rendering state\n   */\n  readyState() {\n    return this.techGet_('readyState');\n  }\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  bufferedEnd() {\n    const buffered = this.buffered();\n    const duration = this.duration();\n    let end = buffered.end(buffered.length - 1);\n    if (end > duration) {\n      end = duration;\n    }\n    return end;\n  }\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number|undefined}\n   *         The current volume as a percent when getting\n   */\n  volume(percentAsDecimal) {\n    let vol;\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, percentAsDecimal));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|undefined}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   *         - nothing if setting\n   */\n  muted(muted) {\n    if (muted !== undefined) {\n      this.techCall_('setMuted', muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  }\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|undefined}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - Nothing when setting\n   */\n  defaultMuted(defaultMuted) {\n    if (defaultMuted !== undefined) {\n      this.techCall_('setDefaultMuted', defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  }\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number|undefined}\n   *         - The current value of lastVolume as a percent when getting\n   *         - Nothing when setting\n   *\n   * @private\n   */\n  lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  }\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean|undefined}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   *         - Nothing when setting\n   */\n  isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      const oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS);\n\n      // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n      this.toggleFullscreenClass_();\n      return;\n    }\n    return this.isFullscreen_;\n  }\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  requestFullscreen(fullscreenOptions) {\n    if (this.isInPictureInPicture()) {\n      this.exitPictureInPicture();\n    }\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.requestFullscreenHelper_(fullscreenOptions);\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  requestFullscreenHelper_(fullscreenOptions) {\n    let fsOptions;\n\n    // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    }\n\n    // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n    if (this.fsApi_.requestFullscreen) {\n      const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  exitFullscreen() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.exitFullscreenHelper_();\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        // map the promise to our resolve/reject methods\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  exitFullscreenHelper_() {\n    if (this.fsApi_.requestFullscreen) {\n      const promise = document[this.fsApi_.exitFullscreen]();\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(() => this.isFullscreen(false)));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {Event}\n     */\n    this.trigger('enterFullWindow');\n  }\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {Event}\n     */\n    this.trigger('exitFullWindow');\n  }\n\n  /**\n   * Get or set disable Picture-in-Picture mode.\n   *\n   * @param {boolean} [value]\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean|undefined}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   *         - nothing if setting\n   */\n  isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n    return !!this.isInPictureInPicture_;\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * This can use document picture-in-picture or element picture in picture\n   *\n   * Set `enableDocumentPictureInPicture` to `true` to use docPiP on a supported browser\n   * Else set `disablePictureInPicture` to `false` to disable elPiP on a supported browser\n   *\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/}\n   * @see [Spec]{@link https://wicg.github.io/document-picture-in-picture/}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    if (this.options_.enableDocumentPictureInPicture && window$1.documentPictureInPicture) {\n      const pipContainer = document.createElement(this.el().tagName);\n      pipContainer.classList = this.el().classList;\n      pipContainer.classList.add('vjs-pip-container');\n      if (this.posterImage) {\n        pipContainer.appendChild(this.posterImage.el().cloneNode(true));\n      }\n      if (this.titleBar) {\n        pipContainer.appendChild(this.titleBar.el().cloneNode(true));\n      }\n      pipContainer.appendChild(createEl('p', {\n        className: 'vjs-pip-text'\n      }, {}, this.localize('Playing in picture-in-picture')));\n      return window$1.documentPictureInPicture.requestWindow({\n        // The aspect ratio won't be correct, Chrome bug https://crbug.com/1407629\n        width: this.videoWidth(),\n        height: this.videoHeight()\n      }).then(pipWindow => {\n        copyStyleSheetsToWindow(pipWindow);\n        this.el_.parentNode.insertBefore(pipContainer, this.el_);\n        pipWindow.document.body.appendChild(this.el_);\n        pipWindow.document.body.classList.add('vjs-pip-window');\n        this.player_.isInPictureInPicture(true);\n        this.player_.trigger('enterpictureinpicture');\n\n        // Listen for the PiP closing event to move the video back.\n        pipWindow.addEventListener('pagehide', event => {\n          const pipVideo = event.target.querySelector('.video-js');\n          pipContainer.parentNode.replaceChild(pipVideo, pipContainer);\n          this.player_.isInPictureInPicture(false);\n          this.player_.trigger('leavepictureinpicture');\n        });\n        return pipWindow;\n      });\n    }\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n    return Promise.reject('No PiP mode is available');\n  }\n\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  exitPictureInPicture() {\n    if (window$1.documentPictureInPicture && window$1.documentPictureInPicture.window) {\n      // With documentPictureInPicture, Player#leavepictureinpicture is fired in the pagehide handler\n      window$1.documentPictureInPicture.window.close();\n      return Promise.resolve();\n    }\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const {\n      userActions\n    } = this.options_;\n\n    // Bail out if hotkeys are not configured.\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    }\n\n    // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n    const excludeElement = el => {\n      const tagName = el.tagName.toLowerCase();\n\n      // The first and easiest test is for `contenteditable` elements.\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n      const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      // The final test is by tag name. These tags will be excluded entirely.\n      const excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    };\n\n    // Bail out if the user is focused on an interactive form element.\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleHotkeys(event) {\n    const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n    // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n    const {\n      fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'),\n      muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'),\n      playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')\n    } = hotkeys;\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const FSToggle = Component$1.getComponent('FullscreenToggle');\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  canPlayType(type) {\n    let can;\n\n    // Loop through each playback technology in the options order\n    for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      const techName = j[i];\n      let tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  selectSource(sources) {\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    const techs = this.options_.techOrder.map(techName => {\n      return [techName, Tech.getTech(techName)];\n    }).filter(([techName, tech]) => {\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n      log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n      let found;\n      outerArray.some(outerChoice => {\n        return innerArray.some(innerChoice => {\n          found = tester(outerChoice, innerChoice);\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n    let foundSourceAndTech;\n    const flip = fn => (a, b) => fn(b, a);\n    const finder = ([techName, tech], source) => {\n      if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n        return {\n          source,\n          tech: techName\n        };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n    return foundSourceAndTech || false;\n  }\n\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} [isRetry]\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  handleSrc_(source, isRetry) {\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n\n    // Reset retry behavior for new source\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    }\n\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    const sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    }\n\n    // initial sources\n    this.changingSrc_ = true;\n\n    // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], (middlewareSource, mws) => {\n      this.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(middlewareSource);\n      const err = this.src_(middlewareSource);\n      if (err) {\n        if (sources.length > 1) {\n          return this.handleSrc_(sources.slice(1));\n        }\n        this.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        this.triggerReady();\n        return;\n      }\n      setTech(mws, this.tech_);\n    });\n\n    // Try another available source if this one fails before playback.\n    if (sources.length > 1) {\n      const retry = () => {\n        // Remove the error modal\n        this.error(null);\n        this.handleSrc_(sources.slice(1), true);\n      };\n      const stopListeningForErrors = () => {\n        this.off('error', retry);\n      };\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n      this.resetRetryOnError_ = () => {\n        this.off('error', retry);\n        this.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  src(source) {\n    return this.handleSrc_(source, false);\n  }\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  src_(source) {\n    const sourceTech = this.selectSource([source]);\n    if (!sourceTech) {\n      return true;\n    }\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(() => {\n        this.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n\n  /**\n   * Begin loading the src data.\n   */\n  load() {\n    // Workaround to use the load method with the VHS.\n    // Does not cover the case when the load method is called directly from the mediaElement.\n    if (this.tech_ && this.tech_.vhs) {\n      this.src(this.currentSource());\n      return;\n    }\n    this.techCall_('load');\n  }\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  reset() {\n    if (this.paused()) {\n      this.doReset_();\n    } else {\n      const playPromise = this.play();\n      silencePromise(playPromise.then(() => this.doReset_()));\n    }\n  }\n  doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n    this.error(null);\n    if (this.titleBar) {\n      this.titleBar.update({\n        title: undefined,\n        description: undefined\n      });\n    }\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  resetProgressBar_() {\n    this.currentTime(0);\n    const {\n      currentTimeDisplay,\n      durationDisplay,\n      progressControl,\n      remainingTimeDisplay\n    } = this.controlBar || {};\n    const {\n      seekBar\n    } = progressControl || {};\n    if (currentTimeDisplay) {\n      currentTimeDisplay.updateContent();\n    }\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n    if (seekBar) {\n      seekBar.update();\n      if (seekBar.loadProgressBar) {\n        seekBar.loadProgressBar.update();\n      }\n    }\n  }\n\n  /**\n   * Reset Playback ratio\n   */\n  resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n\n  /**\n   * Reset Volume bar\n   */\n  resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  currentSources() {\n    const source = this.currentSource();\n    const sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n    return this.cache_.sources || sources;\n  }\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  currentSource() {\n    return this.cache_.source || {};\n  }\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {'none'|'auto'|'metadata'} [value]\n   *        Preload mode to pass to tech\n   *\n   * @return {string|undefined}\n   *         - The preload attribute value when getting\n   *         - Nothing when setting\n   */\n  preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  }\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|'play'|'muted'|'any'} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string|undefined}\n   *         - The current value of autoplay when getting\n   *         - Nothing when setting\n   */\n  autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n    let techAutoplay;\n\n    // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|undefined}\n   *         - the current value of playsinline\n   *         - Nothing when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n    }\n    return this.techGet_('playsinline');\n  }\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean|undefined}\n   *         - The current value of loop when getting\n   *         - Nothing when setting\n   */\n  loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  }\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string|undefined}\n   *         - The current value of poster when getting\n   *         - Nothing when setting\n   */\n  poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {Event}\n     */\n    this.trigger('posterchange');\n  }\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      const newPoster = this.tech_.poster() || '';\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  }\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean|undefined}\n   *         - The current value of controls when getting\n   *         - Nothing when setting\n   */\n  controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n    this.controls_ = bool;\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean|undefined}\n   *         - The current value of native controls when getting\n   *         - Nothing when setting\n   */\n  usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n    this.usingNativeControls_ = bool;\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  }\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null|undefined}\n   *         - The current MediaError when getting (or null)\n   *         - Nothing when setting\n   */\n  error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // allow hooks to modify error object\n    hooks('beforeerror').forEach(hookFunction => {\n      const newErr = hookFunction(this, err);\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        this.log.error('please return a value that MediaError expects in beforeerror hooks');\n        return;\n      }\n      err = newErr;\n    });\n\n    // Suppress the first error message for no compatible source until\n    // user interaction\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      const triggerSuppressedError = function () {\n        this.error(err);\n      };\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = null;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {Event}\n     */\n    this.trigger('error');\n\n    // notify hooks of the per player error\n    hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n    return;\n  }\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean|undefined}\n   *         - The current value of userActive when getting\n   *         - Nothing when setting\n   */\n  userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n    bool = !!bool;\n    if (bool === this.userActive_) {\n      return;\n    }\n    this.userActive_ = bool;\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {Event}\n     */\n    this.trigger('userinactive');\n  }\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  listenForUserActivity_() {\n    let mouseInProgress;\n    let lastMoveX;\n    let lastMoveY;\n    const handleActivity = bind_(this, this.reportUserActivity);\n    const handleMouseMove = function (e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n    const handleMouseDown = function () {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n    const handleMouseUpAndMouseLeave = function (event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    const controlBar = this.getChild('controlBar');\n\n    // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    }\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    let inactivityTimeout;\n\n    /** @this Player */\n    const activityCheck = function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n      const timeout = this.options_.inactivityTimeout;\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    };\n    this.setInterval(activityCheck, 250);\n  }\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number|undefined}\n   *         - The current playback rate when getting or 1.0\n   *         - Nothing when setting\n   */\n  playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|undefined}\n   *         - The default playback rate when getting or 1.0\n   *         - Nothing when setting\n   */\n  defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} [bool]\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean|undefined}\n   *         - The current value of isAudio when getting\n   *         - Nothing when setting\n   */\n  isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n    return !!this.isAudio_;\n  }\n  enableAudioOnlyUI_() {\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    const playerChildren = this.children();\n    const controlBar = this.getChild('ControlBar');\n    const controlBarHeight = controlBar && controlBar.currentHeight();\n\n    // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n    playerChildren.forEach(child => {\n      if (child === controlBar) {\n        return;\n      }\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n        this.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight();\n\n    // Set the player height the same as the control bar\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  }\n  disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode');\n\n    // Show player components that were previously hidden\n    this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n    // Reset player height\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioOnlyMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n    this.audioOnlyMode_ = value;\n\n    // Enable Audio Only Mode\n    if (value) {\n      const exitPromises = [];\n\n      // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n      if (this.isInPictureInPicture()) {\n        exitPromises.push(this.exitPictureInPicture());\n      }\n      if (this.isFullscreen()) {\n        exitPromises.push(this.exitFullscreen());\n      }\n      if (this.audioPosterMode()) {\n        exitPromises.push(this.audioPosterMode(false));\n      }\n      return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n    }\n\n    // Disable Audio Only Mode\n    return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n  }\n  enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioPosterMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n    this.audioPosterMode_ = value;\n    if (value) {\n      if (this.audioOnlyMode()) {\n        const audioOnlyModePromise = this.audioOnlyMode(false);\n        return audioOnlyModePromise.then(() => {\n          // enable audio poster mode after audio only mode is disabled\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // enable audio poster mode\n        this.enablePosterModeUI_();\n      });\n    }\n    return Promise.resolve().then(() => {\n      // disable audio poster mode\n      this.disablePosterModeUI_();\n    });\n  }\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return { import('./tracks/html-track-element').default }\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  removeRemoteTextTrack(obj = {}) {\n    let {\n      track\n    } = obj;\n    if (!track) {\n      track = obj;\n    }\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n\n  /**\n   * Set or get the player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string|undefined}\n   *         - The current language code when getting\n   *         - Nothing when setting\n   */\n  language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase();\n\n      // during first init, it's possible some things won't be evented\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  languages() {\n    return merge$1(Player.prototype.options_.languages, this.languages_);\n  }\n\n  /**\n   * returns a JavaScript object representing the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  toJSON() {\n    const options = merge$1(this.options_);\n    const tracks = options.tracks;\n    options.tracks = [];\n    for (let i = 0; i < tracks.length; i++) {\n      let track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = merge$1(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n    return options;\n  }\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  createModal(content, options) {\n    options = options || {};\n    options.content = content || '';\n    const modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', () => {\n      this.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n    const currentBreakpoint = this.currentBreakpoint();\n    const currentWidth = this.currentWidth();\n    for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      const candidateBreakpoint = BREAKPOINT_ORDER[i];\n      const maxWidth = this.breakpoints_[candidateBreakpoint];\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  removeCurrentBreakpoint_() {\n    const className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  breakpoints(breakpoints) {\n    // Used as a getter.\n    if (breakpoints === undefined) {\n      return Object.assign(this.breakpoints_);\n    }\n    this.breakpoint_ = '';\n    this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return Object.assign(this.breakpoints_);\n  }\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} [value]\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean|undefined}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   *         Nothing if setting\n   */\n  responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n    value = Boolean(value);\n    const current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n    return value;\n  }\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  currentBreakpoint() {\n    return this.breakpoint_;\n  }\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  loadMedia(media, ready) {\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n    const crossOrigin = this.crossOrigin();\n    this.reset();\n\n    // Clone the media object so it cannot be mutated from outside.\n    this.cache_.media = merge$1(media);\n    const {\n      artist,\n      artwork,\n      description,\n      poster,\n      src,\n      textTracks,\n      title\n    } = this.cache_.media;\n\n    // If `artwork` is not given, create it using `poster`.\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n    if (crossOrigin) {\n      this.crossOrigin(crossOrigin);\n    }\n    if (src) {\n      this.src(src);\n    }\n    if (poster) {\n      this.poster(poster);\n    }\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n    }\n    if (this.titleBar) {\n      this.titleBar.update({\n        title,\n        description: description || artist || ''\n      });\n    }\n    this.ready(ready);\n  }\n\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  getMedia() {\n    if (!this.cache_.media) {\n      const poster = this.poster();\n      const src = this.currentSources();\n      const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n        kind: tt.kind,\n        label: tt.label,\n        language: tt.language,\n        src: tt.src\n      }));\n      const media = {\n        src,\n        textTracks\n      };\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n      return media;\n    }\n    return merge$1(this.cache_.media);\n  }\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  static getTagSettings(tag) {\n    const baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    const tagOptions = getAttributes(tag);\n    const dataSetup = tagOptions['data-setup'];\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      const [err, data] = safeParseTuple(dataSetup || '{}');\n      if (err) {\n        log$1.error(err);\n      }\n      Object.assign(tagOptions, data);\n    }\n    Object.assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      const children = tag.childNodes;\n      for (let i = 0, j = children.length; i < j; i++) {\n        const child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        const childName = child.nodeName.toLowerCase();\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n    return baseOptions;\n  }\n\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   * @return {boolean|undefined}\n   */\n  debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    }\n\n    // ignore any value that isn't an array\n    if (!Array.isArray(newRates)) {\n      return;\n    }\n\n    // ignore any arrays that don't only contain numbers\n    if (!newRates.every(rate => typeof rate === 'number')) {\n      return;\n    }\n    this.cache_.playbackRates = newRates;\n\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {Event}\n    */\n    this.trigger('playbackrateschange');\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\nPlayer.players = {};\nconst navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // enable sourceset by default\n  enableSourceset: true,\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false,\n  // Default smooth seeking to false\n  enableSmoothSeeking: false\n};\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nconst BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nconst PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nconst pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\nconst pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */\nconst getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nconst markPluginAsActive = (player, name) => {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nconst triggerSetupEvent = (player, hash, before) => {\n  const eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\nconst createBasicPlugin = function (name, plugin) {\n  const basicPluginWrapper = function () {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance: null\n    }, true);\n    const instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance\n    });\n    return instance;\n  };\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\nconst createPluginFactory = (name, PluginSubClass) => {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function (...args) {\n    triggerSetupEvent(this, {\n      name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n    const instance = new PluginSubClass(...[this, ...args]);\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = () => instance;\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\nclass Plugin {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  constructor(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n    this.player = player;\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    }\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = this.dispose.bind(this);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n  version() {\n    return this.constructor.VERSION;\n  }\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  getEventHash(hash = {}) {\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  trigger(event, hash = {}) {\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  handleStateChanged(e) {}\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  dispose() {\n    const {\n      name,\n      player\n    } = this;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {Event}\n     */\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  static isBasic(plugin) {\n    const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  static registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n    }\n    if (pluginExists(name)) {\n      log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n    }\n    if (typeof plugin !== 'function') {\n      throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n    }\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n    return plugin;\n  }\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  static deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  static getPlugins(names = Object.keys(pluginStorage)) {\n    let result;\n    names.forEach(name => {\n      const plugin = getPlugin(name);\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  static getPluginVersion(name) {\n    const plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  }\n}\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {PluginEventHash}\n */\n\n/**\n * @typedef  {Object} PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file deprecate.js\n * @module deprecate\n */\n\n/**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */\nfunction deprecate(message, fn) {\n  let warned = false;\n  return function (...args) {\n    if (!warned) {\n      log$1.warn(message);\n    }\n    warned = true;\n    return fn.apply(this, args);\n  };\n}\n\n/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */\nfunction deprecateForMajor(major, oldName, newName, fn) {\n  return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n}\n\nvar VjsErrors = {\n  UnsupportedSidxContainer: 'unsupported-sidx-container-error',\n  DashManifestSidxParsingError: 'dash-manifest-sidx-parsing-error',\n  HlsPlaylistRequestError: 'hls-playlist-request-error',\n  SegmentUnsupportedMediaFormat: 'segment-unsupported-media-format-error',\n  UnsupportedMediaInitialization: 'unsupported-media-initialization-error',\n  SegmentSwitchError: 'segment-switch-error',\n  SegmentExceedsSourceBufferQuota: 'segment-exceeds-source-buffer-quota-error',\n  SegmentAppendError: 'segment-append-error',\n  VttLoadError: 'vtt-load-error',\n  VttCueParsingError: 'vtt-cue-parsing-error',\n  EMEKeySessionCreationError: 'eme-key-session-creation-error'\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\nconst normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n/**\n * A callback that is called when a component is ready. Does not have any\n * parameters and any callback value will be ignored. See: {@link Component~ReadyCallback}\n *\n * @callback ReadyCallback\n */\n\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\nfunction videojs(id, options, ready) {\n  let player = videojs.getPlayer(id);\n  if (player) {\n    if (options) {\n      log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n  const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n  // If element is inside Shadow DOM (e.g. is part of a Custom element), ownerDocument.body\n  // always returns false. Instead, use the Shadow DOM root.\n  const inShadowDom = 'getRootNode' in el ? el.getRootNode() instanceof window$1.ShadowRoot : false;\n  const rootNode = inShadowDom ? el.getRootNode() : el.ownerDocument.body;\n  if (!el.ownerDocument.defaultView || !rootNode.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n  options = options || {};\n\n  // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n  hooks('beforesetup').forEach(hookFunction => {\n    const opts = hookFunction(el, merge$1(options));\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n    options = merge$1(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  const PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(hookFunction => hookFunction(player));\n  return player;\n}\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook;\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  let style = $('.vjs-styles-defaults');\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    const head = $('head');\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\nvideojs.VERSION = version$6;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = () => Player.players;\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = id => {\n  const players = Player.players;\n  let tag;\n  if (typeof id === 'string') {\n    const nId = normalizeId(id);\n    const player = players[nId];\n    if (player) {\n      return player;\n    }\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n  if (isEl(tag)) {\n    const {\n      player,\n      playerId\n    } = tag;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n    if (player || players[playerId]) {\n      return player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = () =>\n// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {typeof Component} comp\n *        The component class\n *\n * @return {typeof Component}\n *         The newly registered component\n */\nvideojs.registerComponent = (name, comp) => {\n  if (Tech.isTech(comp)) {\n    log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n  }\n  return Component$1.registerComponent.call(Component$1, name, comp);\n};\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\nvideojs.browser = browser;\n\n/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */\nvideojs.obj = Obj;\n\n/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */\nvideojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$1);\n\n/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */\nvideojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */\nvideojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n*\n * @param {typeof Plugin|Function} plugin\n *         The plugin sub-class or function\n *\n * @return {typeof Plugin|Function}\n */\nvideojs.plugin = (name, plugin) => {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = merge$1(videojs.options.languages, {\n    [code]: data\n  });\n  return videojs.options.languages[code];\n};\n\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\n\n/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */\nvideojs.time = Time;\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */\nvideojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */\nvideojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */\nvideojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */\nvideojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */\nvideojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\nvideojs.EventTarget = EventTarget$2;\nvideojs.any = any;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n  videojs[k] = function () {\n    log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */\nvideojs.dom = Dom;\n\n/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */\nvideojs.fn = Fn;\n\n/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */\nvideojs.num = Num;\n\n/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */\nvideojs.str = Str;\n\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */\nvideojs.url = Url;\n\n// The list of possible error types to occur in video.js\nvideojs.Error = VjsErrors;\n\n/*! @name videojs-contrib-quality-levels @version 4.0.0 @license Apache-2.0 */\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\nclass QualityLevel {\n  /**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */\n  constructor(representation) {\n    let level = this; // eslint-disable-line\n\n    level.id = representation.id;\n    level.label = level.id;\n    level.width = representation.width;\n    level.height = representation.height;\n    level.bitrate = representation.bandwidth;\n    level.frameRate = representation.frameRate;\n    level.enabled_ = representation.enabled;\n    Object.defineProperty(level, 'enabled', {\n      /**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */\n      get() {\n        return level.enabled_();\n      },\n      /**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */\n      set(enable) {\n        level.enabled_(enable);\n      }\n    });\n    return level;\n  }\n}\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\n\nclass QualityLevelList extends videojs.EventTarget {\n  /**\n   * Creates a QualityLevelList.\n   */\n  constructor() {\n    super();\n    let list = this; // eslint-disable-line\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'selectedIndex', {\n      get() {\n        return list.selectedIndex_;\n      }\n    });\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'length', {\n      get() {\n        return list.levels_.length;\n      }\n    });\n    list[Symbol.iterator] = () => list.levels_.values();\n    return list;\n  }\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n\n  addQualityLevel(representation) {\n    let qualityLevel = this.getQualityLevelById(representation.id); // Do not add duplicate quality levels\n\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n    const index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.levels_[index];\n        }\n      });\n    }\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  }\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} qualityLevel The QualityLevel to remove from the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n\n  removeQualityLevel(qualityLevel) {\n    let removed = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n        break;\n      }\n    }\n    if (removed) {\n      this.trigger({\n        qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n    return removed;\n  }\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n\n  getQualityLevelById(id) {\n    for (let i = 0, l = this.length; i < l; i++) {\n      const level = this[i];\n      if (level.id === id) {\n        return level;\n      }\n    }\n    return null;\n  }\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n\n  dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  }\n}\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\n\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (const event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\nvar version$5 = \"4.0.0\";\n\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @return {QualityLevelList} a list of QualityLevels\n */\n\nconst initPlugin$1 = function (player, options) {\n  const originalPluginFn = player.qualityLevels;\n  const qualityLevelList = new QualityLevelList();\n  const disposeHandler = function () {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n  player.on('dispose', disposeHandler);\n  player.qualityLevels = () => qualityLevelList;\n  player.qualityLevels.VERSION = version$5;\n  return qualityLevelList;\n};\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @return {QualityLevelList} a list of QualityLevels\n */\n\nconst qualityLevels = function (options) {\n  return initPlugin$1(this, videojs.obj.merge({}, options));\n}; // Register the plugin with video.js.\n\nvideojs.registerPlugin('qualityLevels', qualityLevels); // Include the version number.\n\nqualityLevels.VERSION = version$5;\n\n/*! @name @videojs/http-streaming @version 3.10.0 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\nconst resolveUrl = _resolveUrl;\n/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nconst resolveManifestRedirect = (url, req) => {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n  return url;\n};\nconst logger = source => {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n  }\n  return function () {};\n};\n\n/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */\n/**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */\n\nfunction merge(...args) {\n  const context = videojs.obj || videojs;\n  const fn = context.merge || context.mergeOptions;\n  return fn.apply(context, args);\n}\n/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */\n\nfunction createTimeRanges(...args) {\n  const context = videojs.time || videojs;\n  const fn = context.createTimeRanges || context.createTimeRanges;\n  return fn.apply(context, args);\n}\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\nconst TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nconst SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nconst filterRanges = function (timeRanges, predicate) {\n  const results = [];\n  let i;\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n  return createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\nconst findRange = function (buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\nconst findNextRange = function (timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\nconst findGaps = function (buffered) {\n  if (buffered.length < 2) {\n    return createTimeRanges();\n  }\n  const ranges = [];\n  for (let i = 1; i < buffered.length; i++) {\n    const start = buffered.end(i - 1);\n    const end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\nconst bufferIntersection = function (bufferA, bufferB) {\n  let start = null;\n  let end = null;\n  let arity = 0;\n  const extents = [];\n  const ranges = [];\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return createTimeRanges();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n  let count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\nconst printableRange = range => {\n  const strArr = [];\n  if (!range || !range.length) {\n    return '';\n  }\n  for (let i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\nconst timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n  const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\nconst timeRangesToArray = timeRanges => {\n  const timeRangesList = [];\n  for (let i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\nconst isRangeDifferent = function (a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n  for (let i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n  return false;\n};\nconst lastBufferedEnd = function (a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\nconst timeAheadOf = function (range, startTime) {\n  let time = 0;\n  if (!range || !range.length) {\n    return time;\n  }\n  for (let i = 0; i < range.length; i++) {\n    const start = range.start(i);\n    const end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n    time += end - start;\n  }\n  return time;\n};\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nconst segmentDurationWithParts = (playlist, segment) => {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n  let result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nconst getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n  if (segment.parts) {\n    segment.parts.forEach(function (part, pi) {\n      acc.push({\n        duration: part.duration,\n        segmentIndex: si,\n        partIndex: pi,\n        part,\n        segment\n      });\n    });\n  } else {\n    acc.push({\n      duration: segment.duration,\n      segmentIndex: si,\n      partIndex: null,\n      segment,\n      part: null\n    });\n  }\n  return acc;\n}, []);\nconst getLastParts = media => {\n  const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\nconst getKnownPartCount = ({\n  preloadSegment\n}) => {\n  if (!preloadSegment) {\n    return;\n  }\n  const {\n    parts,\n    preloadHints\n  } = preloadSegment;\n  let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\nconst liveEdgeDelay = (main, media) => {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n  if (main && main.suggestedPresentationDelay) {\n    return main.suggestedPresentationDelay;\n  }\n  const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nconst backwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n  return {\n    result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\nconst forwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let segment;\n  let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\nconst intervalDuration = function (playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n  const backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n  const forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\nconst duration = function (playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\nconst sumDurations = function ({\n  defaultDuration,\n  durationList,\n  startIndex,\n  endIndex\n}) {\n  let durations = 0;\n  if (startIndex > endIndex) {\n    [startIndex, endIndex] = [endIndex, startIndex];\n  }\n  if (startIndex < 0) {\n    for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n    startIndex = 0;\n  }\n  for (let i = startIndex; i < endIndex; i++) {\n    durations += durationList[i].duration;\n  }\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\nconst playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n  if (expired === null) {\n    return null;\n  }\n  expired = expired || 0;\n  let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\nconst seekable = function (playlist, expired, liveEdgePadding) {\n  const useSafeLiveEnd = true;\n  const seekableStart = expired || 0;\n  let seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n  if (seekableEnd === null) {\n    return createTimeRanges();\n  } // Clamp seekable end since it can not be less than the seekable start\n\n  if (seekableEnd < seekableStart) {\n    seekableEnd = seekableStart;\n  }\n  return createTimeRanges(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\nconst getMediaInfoForTime = function ({\n  playlist,\n  currentTime,\n  startingSegmentIndex,\n  startingPartIndex,\n  startTime,\n  exactManifestTimings\n}) {\n  let time = currentTime - startTime;\n  const partsAndSegments = getPartsAndSegments(playlist);\n  let startIndex = 0;\n  for (let i = 0; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n    startIndex = i;\n    break;\n  }\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (let i = startIndex - 1; i >= 0; i--) {\n        const partAndSegment = partsAndSegments[i];\n        time += partAndSegment.duration;\n        if (exactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n        return {\n          partIndex: partAndSegment.partIndex,\n          segmentIndex: partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex,\n            endIndex: i\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n  if (startIndex < 0) {\n    for (let i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n  for (let i = startIndex; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    time -= partAndSegment.duration;\n    const canUseFudgeFactor = partAndSegment.duration > TIME_FUDGE_FACTOR;\n    const isExactlyAtTheEnd = time === 0;\n    const isExtremelyCloseToTheEnd = canUseFudgeFactor && time + TIME_FUDGE_FACTOR >= 0;\n    if (isExactlyAtTheEnd || isExtremelyCloseToTheEnd) {\n      // 1) We are exactly at the end of the current segment.\n      // 2) We are extremely close to the end of the current segment (The difference is less than  1 / 30).\n      //    We may encounter this situation when\n      //    we don't have exact match between segment duration info in the manifest and the actual duration of the segment\n      //    For example:\n      //    We appended 3 segments 10 seconds each, meaning we should have 30 sec buffered,\n      //    but we the actual buffered is 29.99999\n      //\n      // In both cases:\n      // if we passed current time -> it means that we already played current segment\n      // if we passed buffered.end -> it means that this segment is already loaded and buffered\n      // we should select the next segment if we have one:\n      if (i !== partsAndSegments.length - 1) {\n        continue;\n      }\n    }\n    if (exactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n    return {\n      partIndex: partAndSegment.partIndex,\n      segmentIndex: partAndSegment.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex,\n        endIndex: i\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */\n\nconst isExcluded = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\nconst isIncompatible = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\nconst isEnabled = function (playlist) {\n  const excluded = isExcluded(playlist);\n  return !playlist.disabled && !excluded;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\nconst isDisabled = function (playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\nconst isAes = function (media) {\n  for (let i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\nconst hasAttribute = function (attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\nconst estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n  const size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\nconst isLowestEnabledRendition = (main, media) => {\n  if (main.playlists.length === 1) {\n    return true;\n  }\n  const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return main.playlists.filter(playlist => {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\nconst playlistMatch = (a, b) => {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n  return false;\n};\nconst someAudioVariant = function (main, callback) {\n  const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n  let found = false;\n  for (const groupName in AUDIO) {\n    for (const label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n      if (found) {\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  return !!found;\n};\nconst isAudioOnly = main => {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!main || !main.playlists || !main.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only main.\n    const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n  for (let i = 0; i < main.playlists.length; i++) {\n    const playlist = main.playlists[i];\n    const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n      continue;\n    } // playlist is in an audio group it is audio only\n\n    const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n    if (found) {\n      continue;\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n    return false;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n  return true;\n}; // exports\n\nvar Playlist = {\n  liveEdgeDelay,\n  duration,\n  seekable,\n  getMediaInfoForTime,\n  isEnabled,\n  isDisabled,\n  isExcluded,\n  isIncompatible,\n  playlistEnd,\n  isAes,\n  hasAttribute,\n  estimateSegmentRequestTime,\n  isLowestEnabledRendition,\n  isAudioOnly,\n  playlistMatch,\n  segmentDurationWithParts\n};\nconst {\n  log\n} = videojs;\nconst createPlaylistID = (index, uri) => {\n  return `${index}-${uri}`;\n}; // default function for creating a group id\n\nconst groupID = (type, group, label) => {\n  return `placeholder-uri-${type}-${group}-${label}`;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\nconst parseManifest = ({\n  onwarn,\n  oninfo,\n  manifestString,\n  customTagParsers = [],\n  customTagMappers = [],\n  llhls\n}) => {\n  const parser = new Parser();\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n  customTagParsers.forEach(customParser => parser.addParser(customParser));\n  customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n  parser.push(manifestString);\n  parser.end();\n  const manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!llhls) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n  if (!manifest.targetDuration) {\n    let targetDuration = 10;\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n    }\n    if (onwarn) {\n      onwarn({\n        message: `manifest has no targetDuration defaulting to ${targetDuration}`\n      });\n    }\n    manifest.targetDuration = targetDuration;\n  }\n  const parts = getLastParts(manifest);\n  if (parts.length && !manifest.partTargetDuration) {\n    const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n    if (onwarn) {\n      onwarn({\n        message: `manifest has no partTargetDuration defaulting to ${partTargetDuration}`\n      });\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n    manifest.partTargetDuration = partTargetDuration;\n  }\n  return manifest;\n};\n/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nconst forEachMediaGroup = (main, callback) => {\n  if (!main.mediaGroups) {\n    return;\n  }\n  ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n    if (!main.mediaGroups[mediaType]) {\n      return;\n    }\n    for (const groupKey in main.mediaGroups[mediaType]) {\n      for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n        const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\nconst setupMediaPlaylist = ({\n  playlist,\n  uri,\n  id\n}) => {\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS main playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst setupMediaPlaylists = main => {\n  let i = main.playlists.length;\n  while (i--) {\n    const playlist = main.playlists[i];\n    setupMediaPlaylist({\n      playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n    main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst resolveMediaGroupUris = main => {\n  forEachMediaGroup(main, properties => {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */\n\nconst mainForMedia = (media, uri) => {\n  const id = createPlaylistID(0, uri);\n  const main = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri,\n      id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n  main.playlists[uri] = main.playlists[0];\n  return main;\n};\n/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n * @param {function} createGroupID\n *        A function to determine how to create the groupID for mediaGroups\n */\n\nconst addPropertiesToMain = (main, uri, createGroupID = groupID) => {\n  main.uri = uri;\n  for (let i = 0; i < main.playlists.length; i++) {\n    if (!main.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      const phonyUri = `placeholder-uri-${i}`;\n      main.playlists[i].uri = phonyUri;\n    }\n  }\n  const audioOnlyMain = isAudioOnly(main);\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    // add a playlist array under properties\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n        for (let i = 0; i < main.playlists.length; i++) {\n          const p = main.playlists[i];\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n      properties.playlists = [_extends({}, properties)];\n    }\n    properties.playlists.forEach(function (p, i) {\n      const groupId = createGroupID(mediaType, groupKey, labelKey, p);\n      const id = createPlaylistID(i, groupId);\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      main.playlists[p.id] = p;\n      main.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(main);\n  resolveMediaGroupUris(main);\n};\nclass DateRangesStorage {\n  constructor() {\n    this.offset_ = null;\n    this.pendingDateRanges_ = new Map();\n    this.processedDateRanges_ = new Map();\n  }\n  setOffset(segments = []) {\n    // already set\n    if (this.offset_ !== null) {\n      return;\n    } // no segment to process\n\n    if (!segments.length) {\n      return;\n    }\n    const [firstSegment] = segments; // no program date time\n\n    if (firstSegment.programDateTime === undefined) {\n      return;\n    } // Set offset as ProgramDateTime for the very first segment of the very first playlist load:\n\n    this.offset_ = firstSegment.programDateTime / 1000;\n  }\n  setPendingDateRanges(dateRanges = []) {\n    if (!dateRanges.length) {\n      return;\n    }\n    const [dateRange] = dateRanges;\n    const startTime = dateRange.startDate.getTime();\n    this.trimProcessedDateRanges_(startTime);\n    this.pendingDateRanges_ = dateRanges.reduce((map, pendingDateRange) => {\n      map.set(pendingDateRange.id, pendingDateRange);\n      return map;\n    }, new Map());\n  }\n  processDateRange(dateRange) {\n    this.pendingDateRanges_.delete(dateRange.id);\n    this.processedDateRanges_.set(dateRange.id, dateRange);\n  }\n  getDateRangesToProcess() {\n    if (this.offset_ === null) {\n      return [];\n    }\n    const dateRangeClasses = {};\n    const dateRangesToProcess = [];\n    this.pendingDateRanges_.forEach((dateRange, id) => {\n      if (this.processedDateRanges_.has(id)) {\n        return;\n      }\n      dateRange.startTime = dateRange.startDate.getTime() / 1000 - this.offset_;\n      dateRange.processDateRange = () => this.processDateRange(dateRange);\n      dateRangesToProcess.push(dateRange);\n      if (!dateRange.class) {\n        return;\n      }\n      if (dateRangeClasses[dateRange.class]) {\n        const length = dateRangeClasses[dateRange.class].push(dateRange);\n        dateRange.classListIndex = length - 1;\n      } else {\n        dateRangeClasses[dateRange.class] = [dateRange];\n        dateRange.classListIndex = 0;\n      }\n    });\n    for (const dateRange of dateRangesToProcess) {\n      const classList = dateRangeClasses[dateRange.class] || [];\n      if (dateRange.endDate) {\n        dateRange.endTime = dateRange.endDate.getTime() / 1000 - this.offset_;\n      } else if (dateRange.endOnNext && classList[dateRange.classListIndex + 1]) {\n        dateRange.endTime = classList[dateRange.classListIndex + 1].startTime;\n      } else if (dateRange.duration) {\n        dateRange.endTime = dateRange.startTime + dateRange.duration;\n      } else if (dateRange.plannedDuration) {\n        dateRange.endTime = dateRange.startTime + dateRange.plannedDuration;\n      } else {\n        dateRange.endTime = dateRange.startTime;\n      }\n    }\n    return dateRangesToProcess;\n  }\n  trimProcessedDateRanges_(startTime) {\n    const copy = new Map(this.processedDateRanges_);\n    copy.forEach((dateRange, id) => {\n      if (dateRange.startDate.getTime() < startTime) {\n        this.processedDateRanges_.delete(id);\n      }\n    });\n  }\n}\nconst {\n  EventTarget: EventTarget$1\n} = videojs;\nconst addLLHLSQueryDirectives = (uri, media) => {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n  const parameters = {};\n  if (media.serverControl.canBlockReload) {\n    const {\n      preloadSegment\n    } = media; // next msn is a zero based value, length is not.\n\n    let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n    parameters._HLS_msn = nextMSN;\n  }\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n  if (Object.keys(parameters).length) {\n    const parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\nconst updateSegment = (a, b) => {\n  if (!a) {\n    return b;\n  }\n  const result = merge(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (let i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = merge(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\nconst updateSegments = (original, update, offset) => {\n  const oldSegments = original.slice();\n  const newSegments = update.slice();\n  offset = offset || 0;\n  const result = [];\n  let currentMap;\n  for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    const oldSegment = oldSegments[newIndex + offset];\n    const newSegment = newSegments[newIndex];\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n      result.push(newSegment);\n    }\n  }\n  return result;\n};\nconst resolveSegmentUris = (segment, baseUri) => {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\nconst getAllSegments = function (media) {\n  const segments = media.segments || [];\n  const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\nconst isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\nconst updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n  const result = merge(main, {});\n  const oldMedia = result.playlists[newMedia.id];\n  if (!oldMedia) {\n    return null;\n  }\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n  newMedia.segments = getAllSegments(newMedia);\n  const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n  mergedPlaylist.segments.forEach(segment => {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (let i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === newMedia.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (!properties.playlists) {\n      return;\n    }\n    for (let i = 0; i < properties.playlists.length; i++) {\n      if (newMedia.id === properties.playlists[i].id) {\n        properties.playlists[i] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\nconst refreshDelay = (media, update) => {\n  const segments = media.segments || [];\n  const lastSegment = segments[segments.length - 1];\n  const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\nclass PlaylistLoader extends EventTarget$1 {\n  constructor(src, vhs, options = {}) {\n    super();\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n    this.logger_ = logger('PlaylistLoader');\n    const {\n      withCredentials = false\n    } = options;\n    this.src = src;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    this.addDateRangesToTextTrack_ = options.addDateRangesToTextTrack;\n    const vhsOptions = vhs.options_;\n    this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    this.llhls = vhsOptions && vhsOptions.llhls;\n    this.dateRangesStorage_ = new DateRangesStorage(); // initialize the loader state\n\n    this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n    this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n    this.on('loadedplaylist', this.handleLoadedPlaylist_.bind(this));\n  }\n  handleLoadedPlaylist_() {\n    const mediaPlaylist = this.media();\n    if (!mediaPlaylist) {\n      return;\n    }\n    this.dateRangesStorage_.setOffset(mediaPlaylist.segments);\n    this.dateRangesStorage_.setPendingDateRanges(mediaPlaylist.dateRanges);\n    const availableDateRanges = this.dateRangesStorage_.getDateRangesToProcess();\n    if (!availableDateRanges.length || !this.addDateRangesToTextTrack_) {\n      return;\n    }\n    this.addDateRangesToTextTrack_(availableDateRanges);\n  }\n  handleMediaupdatetimeout_() {\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n    const media = this.media();\n    let uri = resolveUrl(this.main.uri, media.uri);\n    if (this.llhls) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n      }\n      this.haveMetadata({\n        playlistString: this.request.responseText,\n        url: this.media().uri,\n        id: this.media().id\n      });\n    });\n  }\n  playlistRequestError(xhr, playlist, startingState) {\n    const {\n      uri,\n      id\n    } = playlist; // any in-flight request is now finished\n\n    this.request = null;\n    if (startingState) {\n      this.state = startingState;\n    }\n    this.error = {\n      playlist: this.main.playlists[id],\n      status: xhr.status,\n      message: `HLS playlist request error at URL: ${uri}.`,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  }\n  parseManifest_({\n    url,\n    manifestString\n  }) {\n    return parseManifest({\n      onwarn: ({\n        message\n      }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n      oninfo: ({\n        message\n      }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n      manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      llhls: this.llhls\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n\n  haveMetadata({\n    playlistString,\n    playlistObject,\n    url,\n    id\n  }) {\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    const playlist = playlistObject || this.parseManifest_({\n      url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist,\n      uri: url,\n      id\n    }); // merge this playlist into the main manifest\n\n    const update = updateMain$1(this.main, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n    if (update) {\n      this.main = update;\n      this.media_ = this.main.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.dateRangesStorage_ = new DateRangesStorage();\n    this.off();\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n\n  media(playlist, shouldDelay) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.main.playlists[playlist];\n    }\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    if (shouldDelay) {\n      const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n    const startingState = this.state;\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (mainPlaylistRef && mainPlaylistRef.endList ||\n    // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          // The initial playlist was a main manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.pendingMedia_ = playlist;\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n      if (error) {\n        return this.playlistRequestError(this.request, playlist, startingState);\n      }\n      this.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        this.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n\n  pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MAIN_MANIFEST';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  load(shouldDelay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    const media = this.media();\n    if (shouldDelay) {\n      const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.load();\n      }, delay);\n      return;\n    }\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  updateMediaUpdateTimeout_(delay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n    this.mediaUpdateTimeout = window$1.setTimeout(() => {\n      this.mediaUpdateTimeout = null;\n      this.trigger('mediaupdatetimeout');\n      this.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  start() {\n    this.started = true;\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a main playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(() => {\n        this.setupInitialPlaylist(this.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      } // clear the loader's request reference\n\n      this.request = null;\n      if (error) {\n        this.error = {\n          status: req.status,\n          message: `HLS playlist request error at URL: ${this.src}.`,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return this.trigger('error');\n      }\n      this.src = resolveManifestRedirect(this.src, req);\n      const manifest = this.parseManifest_({\n        manifestString: req.responseText,\n        url: this.src\n      });\n      this.setupInitialPlaylist(manifest);\n    });\n  }\n  srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n\n  setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (manifest.playlists) {\n      this.main = manifest;\n      addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(playlist => {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(segment => {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.main.playlists[0]);\n      }\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n    const uri = this.srcUri() || window$1.location.href;\n    this.main = mainForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.main.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  }\n  /**\n   * Updates or deletes a preexisting pathway clone.\n   * Ensures that all playlists related to the old pathway clone are\n   * either updated or deleted.\n   *\n   * @param {Object} clone On update, the pathway clone object for the newly updated pathway clone.\n   *        On delete, the old pathway clone object to be deleted.\n   * @param {boolean} isUpdate True if the pathway is to be updated,\n   *        false if it is meant to be deleted.\n   */\n\n  updateOrDeleteClone(clone, isUpdate) {\n    const main = this.main;\n    const pathway = clone.ID;\n    let i = main.playlists.length; // Iterate backwards through the playlist so we can remove playlists if necessary.\n\n    while (i--) {\n      const p = main.playlists[i];\n      if (p.attributes['PATHWAY-ID'] === pathway) {\n        const oldPlaylistUri = p.resolvedUri;\n        const oldPlaylistId = p.id; // update the indexed playlist and add new playlists by ID and URI\n\n        if (isUpdate) {\n          const newPlaylistUri = this.createCloneURI_(p.resolvedUri, clone);\n          const newPlaylistId = createPlaylistID(pathway, newPlaylistUri);\n          const attributes = this.createCloneAttributes_(pathway, p.attributes);\n          const updatedPlaylist = this.createClonePlaylist_(p, newPlaylistId, clone, attributes);\n          main.playlists[i] = updatedPlaylist;\n          main.playlists[newPlaylistId] = updatedPlaylist;\n          main.playlists[newPlaylistUri] = updatedPlaylist;\n        } else {\n          // Remove the indexed playlist.\n          main.playlists.splice(i, 1);\n        } // Remove playlists by the old ID and URI.\n\n        delete main.playlists[oldPlaylistId];\n        delete main.playlists[oldPlaylistUri];\n      }\n    }\n    this.updateOrDeleteCloneMedia(clone, isUpdate);\n  }\n  /**\n   * Updates or deletes media data based on the pathway clone object.\n   * Due to the complexity of the media groups and playlists, in all cases\n   * we remove all of the old media groups and playlists.\n   * On updates, we then create new media groups and playlists based on the\n   * new pathway clone object.\n   *\n   * @param {Object} clone The pathway clone object for the newly updated pathway clone.\n   * @param {boolean} isUpdate True if the pathway is to be updated,\n   *        false if it is meant to be deleted.\n   */\n\n  updateOrDeleteCloneMedia(clone, isUpdate) {\n    const main = this.main;\n    const id = clone.ID;\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      if (!main.mediaGroups[mediaType] || !main.mediaGroups[mediaType][id]) {\n        return;\n      }\n      for (const groupKey in main.mediaGroups[mediaType]) {\n        // Remove all media playlists for the media group for this pathway clone.\n        if (groupKey === id) {\n          for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n            const oldMedia = main.mediaGroups[mediaType][groupKey][labelKey];\n            oldMedia.playlists.forEach((p, i) => {\n              const oldMediaPlaylist = main.playlists[p.id];\n              const oldPlaylistId = oldMediaPlaylist.id;\n              const oldPlaylistUri = oldMediaPlaylist.resolvedUri;\n              delete main.playlists[oldPlaylistId];\n              delete main.playlists[oldPlaylistUri];\n            });\n          } // Delete the old media group.\n\n          delete main.mediaGroups[mediaType][groupKey];\n        }\n      }\n    }); // Create the new media groups and playlists if there is an update.\n\n    if (isUpdate) {\n      this.createClonedMediaGroups_(clone);\n    }\n  }\n  /**\n   * Given a pathway clone object, clones all necessary playlists.\n   *\n   * @param {Object} clone The pathway clone object.\n   * @param {Object} basePlaylist The original playlist to clone from.\n   */\n\n  addClonePathway(clone, basePlaylist = {}) {\n    const main = this.main;\n    const index = main.playlists.length;\n    const uri = this.createCloneURI_(basePlaylist.resolvedUri, clone);\n    const playlistId = createPlaylistID(clone.ID, uri);\n    const attributes = this.createCloneAttributes_(clone.ID, basePlaylist.attributes);\n    const playlist = this.createClonePlaylist_(basePlaylist, playlistId, clone, attributes);\n    main.playlists[index] = playlist; // add playlist by ID and URI\n\n    main.playlists[playlistId] = playlist;\n    main.playlists[uri] = playlist;\n    this.createClonedMediaGroups_(clone);\n  }\n  /**\n   * Given a pathway clone object we create clones of all media.\n   * In this function, all necessary information and updated playlists\n   * are added to the `mediaGroup` object.\n   * Playlists are also added to the `playlists` array so the media groups\n   * will be properly linked.\n   *\n   * @param {Object} clone The pathway clone object.\n   */\n\n  createClonedMediaGroups_(clone) {\n    const id = clone.ID;\n    const baseID = clone['BASE-ID'];\n    const main = this.main;\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      // If the media type doesn't exist, or there is already a clone, skip\n      // to the next media type.\n      if (!main.mediaGroups[mediaType] || main.mediaGroups[mediaType][id]) {\n        return;\n      }\n      for (const groupKey in main.mediaGroups[mediaType]) {\n        if (groupKey === baseID) {\n          // Create the group.\n          main.mediaGroups[mediaType][id] = {};\n        } else {\n          // There is no need to iterate over label keys in this case.\n          continue;\n        }\n        for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n          const oldMedia = main.mediaGroups[mediaType][groupKey][labelKey];\n          main.mediaGroups[mediaType][id][labelKey] = _extends({}, oldMedia);\n          const newMedia = main.mediaGroups[mediaType][id][labelKey]; // update URIs on the media\n\n          const newUri = this.createCloneURI_(oldMedia.resolvedUri, clone);\n          newMedia.resolvedUri = newUri;\n          newMedia.uri = newUri; // Reset playlists in the new media group.\n\n          newMedia.playlists = []; // Create new playlists in the newly cloned media group.\n\n          oldMedia.playlists.forEach((p, i) => {\n            const oldMediaPlaylist = main.playlists[p.id];\n            const group = groupID(mediaType, id, labelKey);\n            const newPlaylistID = createPlaylistID(id, group); // Check to see if it already exists\n\n            if (oldMediaPlaylist && !main.playlists[newPlaylistID]) {\n              const newMediaPlaylist = this.createClonePlaylist_(oldMediaPlaylist, newPlaylistID, clone);\n              const newPlaylistUri = newMediaPlaylist.resolvedUri;\n              main.playlists[newPlaylistID] = newMediaPlaylist;\n              main.playlists[newPlaylistUri] = newMediaPlaylist;\n            }\n            newMedia.playlists[i] = this.createClonePlaylist_(p, newPlaylistID, clone);\n          });\n        }\n      }\n    });\n  }\n  /**\n   * Using the original playlist to be cloned, and the pathway clone object\n   * information, we create a new playlist.\n   *\n   * @param {Object} basePlaylist  The original playlist to be cloned from.\n   * @param {string} id The desired id of the newly cloned playlist.\n   * @param {Object} clone The pathway clone object.\n   * @param {Object} attributes An optional object to populate the `attributes` property in the playlist.\n   *\n   * @return {Object} The combined cloned playlist.\n   */\n\n  createClonePlaylist_(basePlaylist, id, clone, attributes) {\n    const uri = this.createCloneURI_(basePlaylist.resolvedUri, clone);\n    const newProps = {\n      resolvedUri: uri,\n      uri,\n      id\n    }; // Remove all segments from previous playlist in the clone.\n\n    if (basePlaylist.segments) {\n      newProps.segments = [];\n    }\n    if (attributes) {\n      newProps.attributes = attributes;\n    }\n    return merge(basePlaylist, newProps);\n  }\n  /**\n   * Generates an updated URI for a cloned pathway based on the original\n   * pathway's URI and the paramaters from the pathway clone object in the\n   * content steering server response.\n   *\n   * @param {string} baseUri URI to be updated in the cloned pathway.\n   * @param {Object} clone The pathway clone object.\n   *\n   * @return {string} The updated URI for the cloned pathway.\n   */\n\n  createCloneURI_(baseURI, clone) {\n    const uri = new URL(baseURI);\n    uri.hostname = clone['URI-REPLACEMENT'].HOST;\n    const params = clone['URI-REPLACEMENT'].PARAMS; // Add params to the cloned URL.\n\n    for (const key of Object.keys(params)) {\n      uri.searchParams.set(key, params[key]);\n    }\n    return uri.href;\n  }\n  /**\n   * Helper function to create the attributes needed for the new clone.\n   * This mainly adds the necessary media attributes.\n   *\n   * @param {string} id The pathway clone object ID.\n   * @param {Object} oldAttributes The old attributes to compare to.\n   * @return {Object} The new attributes to add to the playlist.\n   */\n\n  createCloneAttributes_(id, oldAttributes) {\n    const attributes = {\n      ['PATHWAY-ID']: id\n    };\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      if (oldAttributes[mediaType]) {\n        attributes[mediaType] = id;\n      }\n    });\n    return attributes;\n  }\n  /**\n   * Returns the key ID set from a playlist\n   *\n   * @param {playlist} playlist to fetch the key ID set from.\n   * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.\n   */\n\n  getKeyIdSet(playlist) {\n    if (playlist.contentProtection) {\n      const keyIds = new Set();\n      for (const keysystem in playlist.contentProtection) {\n        const keyId = playlist.contentProtection[keysystem].attributes.keyId;\n        if (keyId) {\n          keyIds.add(keyId.toLowerCase());\n        }\n      }\n      return keyIds;\n    }\n  }\n}\n\n/**\n * @file xhr.js\n */\nconst {\n  xhr: videojsXHR\n} = videojs;\nconst callbackWrapper = function (request, error, response, callback) {\n  const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n  callback(error, request);\n};\n/**\n * Iterates over the request hooks Set and calls them in order\n *\n * @param {Set} hooks the hook Set to iterate over\n * @param {Object} options the request options to pass to the xhr wrapper\n * @return the callback hook function return value, the modified or new options Object.\n */\n\nconst callAllRequestHooks = (requestSet, options) => {\n  if (!requestSet || !requestSet.size) {\n    return;\n  }\n  let newOptions = options;\n  requestSet.forEach(requestCallback => {\n    newOptions = requestCallback(newOptions);\n  });\n  return newOptions;\n};\n/**\n * Iterates over the response hooks Set and calls them in order.\n *\n * @param {Set} hooks the hook Set to iterate over\n * @param {Object} request the xhr request object\n * @param {Object} error the xhr error object\n * @param {Object} response the xhr response object\n */\n\nconst callAllResponseHooks = (responseSet, request, error, response) => {\n  if (!responseSet || !responseSet.size) {\n    return;\n  }\n  responseSet.forEach(responseCallback => {\n    responseCallback(request, error, response);\n  });\n};\nconst xhrFactory = function () {\n  const xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = merge({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    // TODO: Remove beforeRequest in the next major release.\n\n    const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest; // onRequest and onResponse hooks as a Set, at either the player or global level.\n    // TODO: new Set added here for beforeRequest alias. Remove this when beforeRequest is removed.\n\n    const _requestCallbackSet = XhrFunction._requestCallbackSet || videojs.Vhs.xhr._requestCallbackSet || new Set();\n    const _responseCallbackSet = XhrFunction._responseCallbackSet || videojs.Vhs.xhr._responseCallbackSet;\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      videojs.log.warn('beforeRequest is deprecated, use onRequest instead.');\n      _requestCallbackSet.add(beforeRequest);\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n    const xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr; // call all registered onRequest hooks, assign new options.\n\n    const beforeRequestOptions = callAllRequestHooks(_requestCallbackSet, options); // Remove the beforeRequest function from the hooks set so stale beforeRequest functions are not called.\n\n    _requestCallbackSet.delete(beforeRequest); // xhrMethod will call XMLHttpRequest.open and XMLHttpRequest.send\n\n    const request = xhrMethod(beforeRequestOptions || options, function (error, response) {\n      // call all registered onResponse hooks\n      callAllResponseHooks(_responseCallbackSet, request, error, response);\n      return callbackWrapper(request, error, response, callback);\n    });\n    const originalAbort = request.abort;\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nconst byterangeStr = function (byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let byterangeEnd;\n  const byterangeStart = byterange.offset;\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\nconst segmentXhrHeaders = function (segment) {\n  const headers = {};\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\nconst textRange = function (range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\nconst formatHexString = function (e, i) {\n  const value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nconst formatAsciiString = function (e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\nconst createTransferableMessage = function (message) {\n  const transferable = {};\n  Object.keys(message).forEach(key => {\n    const value = message[key];\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\nconst initSegmentId = function (initSegment) {\n  const byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\nconst segmentKeyId = function (key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\nconst hexDump = data => {\n  const bytes = Array.prototype.slice.call(data);\n  const step = 16;\n  let result = '';\n  let hex;\n  let ascii;\n  for (let j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n  return result;\n};\nconst tagDump = ({\n  bytes\n}) => hexDump(bytes);\nconst textRanges = ranges => {\n  let result = '';\n  let i;\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nconst SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nconst playerTimeToProgramTime = (playerTime, segment) => {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n  const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  const offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\nconst originalSegmentVideoDuration = videoTimingInfo => {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForProgramTime = (programTime, playlist) => {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  let dateTimeObject;\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segment = playlist.segments[0];\n  if (dateTimeObject < new Date(segment.dateTimeObject)) {\n    // Requested time is before stream start.\n    return null;\n  }\n  for (let i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    const nextSegmentStart = new Date(playlist.segments[i + 1].dateTimeObject);\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  const lastSegmentStart = lastSegment.dateTimeObject;\n  const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n  if (dateTimeObject > new Date(lastSegmentStart)) {\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForPlayerTime = (time, playlist) => {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segmentEnd = 0;\n  let segment;\n  for (let i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\nconst getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n  let segmentDateTime;\n  let programDateTime;\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n  const segmentTimeEpoch = segmentDateTime.getTime();\n  const programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\nconst verifyProgramDateTimeTags = playlist => {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < playlist.segments.length; i++) {\n    const segment = playlist.segments[i];\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\nconst getProgramTime = ({\n  playlist,\n  time = undefined,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n  const matchedSegment = findSegmentForPlayerTime(time, playlist);\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n  const programTimeObject = {\n    mediaSeconds: time\n  };\n  const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\nconst seekToProgramTime = ({\n  programTime,\n  playlist,\n  retryCount = 2,\n  seekTo,\n  pauseAfterSeek = true,\n  tech,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n  const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: `${programTime} was not found in the stream`\n    });\n  }\n  const segment = matchedSegment.segment;\n  const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: `${programTime} is not buffered yet. Try again`\n      });\n    }\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', () => {\n      seekToProgramTime({\n        programTime,\n        playlist,\n        retryCount: retryCount - 1,\n        seekTo,\n        pauseAfterSeek,\n        tech,\n        callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n  const seekToTime = segment.start + mediaOffset;\n  const seekedCallback = () => {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n  seekTo(seekToTime);\n};\n\n// which will only happen if the request is complete.\n\nconst callbackOnCompleted = (request, cb) => {\n  if (request.readyState === 4) {\n    return cb();\n  }\n  return;\n};\nconst containerRequest = (uri, xhr, cb) => {\n  let bytes = [];\n  let id3Offset;\n  let finished = false;\n  const endRequestAndCallback = function (err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n  const progressListener = function (error, request) {\n    if (finished) {\n      return;\n    }\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n    const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n  const options = {\n    uri,\n    beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function ({\n        total,\n        loaded\n      }) {\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  const request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\nconst {\n  EventTarget\n} = videojs;\nconst dashPlaylistUnchanged = function (a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n  for (let i = 0; i < a.segments.length; i++) {\n    const aSegment = a.segments[i];\n    const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n    const aByterange = aSegment.byterange;\n    const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n  return true;\n};\n/**\n * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation\n * ID in the parser. This allows for continuous playout across periods with the same representation IDs\n * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support\n * periods without continuous playback this function may need modification as well as the parser.\n */\n\nconst dashGroupId = (type, group, label, playlist) => {\n  // If the manifest somehow does not have an ID (non-dash compliant), use the label.\n  const playlistId = playlist.attributes.NAME || label;\n  return `placeholder-uri-${type}-${group}-${playlistId}`;\n};\n/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\nconst parseMainXml = ({\n  mainXml,\n  srcUrl,\n  clientOffset,\n  sidxMapping,\n  previousManifest\n}) => {\n  const manifest = parse(mainXml, {\n    manifestUri: srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  });\n  addPropertiesToMain(manifest, srcUrl, dashGroupId);\n  return manifest;\n};\n/**\n * Removes any mediaGroup labels that no longer exist in the newMain\n *\n * @param {Object} update\n *         The previous mpd object being updated\n * @param {Object} newMain\n *         The new mpd object\n */\n\nconst removeOldMediaGroupLabels = (update, newMain) => {\n  forEachMediaGroup(update, (properties, type, group, label) => {\n    if (!(label in newMain.mediaGroups[type][group])) {\n      delete update.mediaGroups[type][group][label];\n    }\n  });\n};\n/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */\n\nconst updateMain = (oldMain, newMain, sidxMapping) => {\n  let noChanges = true;\n  let update = merge(oldMain, {\n    // These are top level properties that can be updated\n    duration: newMain.duration,\n    minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n    timelineStarts: newMain.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (let i = 0; i < newMain.playlists.length; i++) {\n    const playlist = newMain.playlists[i];\n    if (playlist.sidx) {\n      const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n    const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n  forEachMediaGroup(newMain, (properties, type, group, label) => {\n    if (properties.playlists && properties.playlists.length) {\n      const id = properties.playlists[0].id;\n      const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate; // add new mediaGroup label if it doesn't exist and assign the new mediaGroup.\n\n        if (!(label in update.mediaGroups[type][group])) {\n          update.mediaGroups[type][group][label] = properties;\n        } // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  }); // remove mediaGroup labels and references that no longer exist in the newMain\n\n  removeOldMediaGroupLabels(update, newMain);\n  if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n  if (noChanges) {\n    return null;\n  }\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\nconst equivalentSidx = (a, b) => {\n  const neitherMap = Boolean(!a.map && !b.map);\n  const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\nconst compareSidxEntry = (playlists, oldSidxMapping) => {\n  const newSidxMapping = {};\n  for (const id in playlists) {\n    const playlist = playlists[id];\n    const currentSidxInfo = playlist.sidx;\n    if (currentSidxInfo) {\n      const key = generateSidxKey(currentSidxInfo);\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n      const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\nconst filterChangedSidxMappings = (main, oldSidxMapping) => {\n  const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n  let mediaGroupSidx = videoSidx;\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (properties.playlists && properties.playlists.length) {\n      const playlists = properties.playlists;\n      mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\nclass DashPlaylistLoader extends EventTarget {\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n    super();\n    this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n    if (!mainPlaylistLoader) {\n      this.isMain_ = true;\n    }\n    const {\n      withCredentials = false\n    } = options;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    this.addMetadataToTextTrack = options.addMetadataToTextTrack;\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n    this.on('minimumUpdatePeriod', () => {\n      this.refreshXml_();\n    }); // live playlist staleness timeout\n\n    this.on('mediaupdatetimeout', () => {\n      this.refreshMedia_(this.media().id);\n    });\n    this.state = 'HAVE_NOTHING';\n    this.loadedPlaylists_ = {};\n    this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The mainPlaylistLoader will be created with a string\n\n    if (this.isMain_) {\n      this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      this.mainPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n  }\n  requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n    this.request = null;\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n\n  addSidxSegments_(playlist, startingState, cb) {\n    const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(() => cb(false), 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n    const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n    const fin = (err, request) => {\n      if (this.requestErrored_(err, request, startingState)) {\n        return;\n      }\n      const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n      let sidx;\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        this.requestErrored_(e, request, startingState);\n        return;\n      }\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n    this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n      if (err) {\n        return fin(err, request);\n      }\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: `Unsupported ${container || 'unknown'} container type for sidx segment at URL: ${uri}`,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist,\n          internal: true,\n          playlistExclusionDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n      const {\n        offset,\n        length\n      } = playlist.sidx.byterange;\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n      this.request = this.vhs_.xhr({\n        uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.off();\n  }\n  hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n    const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n    }\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    } // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.addSidxSegments_(playlist, startingState, sidxChanged => {\n      // everything is ready just continue to haveMetadata\n      this.haveMetadata({\n        startingState,\n        playlist\n      });\n    });\n  }\n  haveMetadata({\n    startingState,\n    playlist\n  }) {\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MAIN_MANIFEST') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  }\n  pause() {\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    if (this.isMain_) {\n      window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  }\n  load(isFinalRendition) {\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    const media = this.media();\n    if (isFinalRendition) {\n      const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => this.load(), delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      // Check to see if this is the main loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the main manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  start() {\n    this.started = true; // We don't need to request the main manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMain_) {\n      this.mediaRequest_ = window$1.setTimeout(() => this.haveMain_(), 0);\n      return;\n    }\n    this.requestMain_((req, mainChanged) => {\n      this.haveMain_();\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.mainPlaylistLoader_.main.playlists[0]);\n      }\n    });\n  }\n  requestMain_(cb) {\n    this.request = this.vhs_.xhr({\n      uri: this.mainPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      if (this.requestErrored_(error, req)) {\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return;\n      }\n      const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n      this.mainPlaylistLoader_.mainXml_ = req.responseText;\n      if (req.responseHeaders && req.responseHeaders.date) {\n        this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        this.mainLoaded_ = Date.now();\n      }\n      this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n      if (mainChanged) {\n        this.handleMain_();\n        this.syncClientServerClock_(() => {\n          return cb(req, mainChanged);\n        });\n        return;\n      }\n      return cb(req, mainChanged);\n    });\n  }\n  /**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n  syncClientServerClock_(done) {\n    const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n      return done();\n    }\n    if (utcTiming.method === 'DIRECT') {\n      this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      let serverTime;\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = this.mainLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n      this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  }\n  haveMain_() {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (this.isMain_) {\n      // We have the main playlist at this point, so\n      // trigger this to allow PlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  }\n  handleMain_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    const oldMain = this.mainPlaylistLoader_.main;\n    let newMain = parseMainXml({\n      mainXml: this.mainPlaylistLoader_.mainXml_,\n      srcUrl: this.mainPlaylistLoader_.srcUrl,\n      clientOffset: this.mainPlaylistLoader_.clientOffset_,\n      sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n      previousManifest: oldMain\n    }); // if we have an old main to compare the new main against\n\n    if (oldMain) {\n      newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n    } // only update main if we have a new main\n\n    this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n    const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n    if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n      this.mainPlaylistLoader_.srcUrl = location;\n    }\n    if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n    this.addEventStreamToMetadataTrack_(newMain);\n    return Boolean(newMain);\n  }\n  updateMinimumUpdatePeriodTimeout_() {\n    const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n    let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n      }\n      return;\n    }\n    this.createMUPTimeout_(mup);\n  }\n  createMUPTimeout_(mup) {\n    const mpl = this.mainPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(() => {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */\n\n  refreshXml_() {\n    this.requestMain_((req, mainChanged) => {\n      if (!mainChanged) {\n        return;\n      }\n      if (this.media_) {\n        this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n      this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n      this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n        // TODO: do we need to reload the current playlist?\n        this.refreshMedia_(this.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */\n\n  refreshMedia_(mediaID) {\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for main we have to reparse the main xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating the main manifest\n    // if this is the first time this.media_ is being set.\n    // as main was just parsed in that case.\n\n    if (this.media_ && this.isMain_) {\n      this.handleMain_();\n    }\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    if (!this.mediaUpdateTimeout) {\n      const createMediaUpdateTimeout = () => {\n        if (this.media().endList) {\n          return;\n        }\n        this.mediaUpdateTimeout = window$1.setTimeout(() => {\n          this.trigger('mediaupdatetimeout');\n          createMediaUpdateTimeout();\n        }, refreshDelay(this.media(), Boolean(mediaChanged)));\n      };\n      createMediaUpdateTimeout();\n    }\n    this.trigger('loadedplaylist');\n  }\n  /**\n   * Takes eventstream data from a parsed DASH manifest and adds it to the metadata text track.\n   *\n   * @param {manifest} newMain the newly parsed manifest\n   */\n\n  addEventStreamToMetadataTrack_(newMain) {\n    // Only add new event stream metadata if we have a new manifest.\n    if (newMain && this.mainPlaylistLoader_.main.eventStream) {\n      // convert EventStream to ID3-like data.\n      const metadataArray = this.mainPlaylistLoader_.main.eventStream.map(eventStreamNode => {\n        return {\n          cueTime: eventStreamNode.start,\n          frames: [{\n            data: eventStreamNode.messageData\n          }]\n        };\n      });\n      this.addMetadataToTextTrack('EventStream', metadataArray, this.mainPlaylistLoader_.main.duration);\n    }\n  }\n  /**\n   * Returns the key ID set from a playlist\n   *\n   * @param {playlist} playlist to fetch the key ID set from.\n   * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.\n   */\n\n  getKeyIdSet(playlist) {\n    if (playlist.contentProtection) {\n      const keyIds = new Set();\n      for (const keysystem in playlist.contentProtection) {\n        const defaultKID = playlist.contentProtection[keysystem].attributes['cenc:default_KID'];\n        if (defaultKID) {\n          // DASH keyIds are separated by dashes.\n          keyIds.add(defaultKID.replace(/-/g, '').toLowerCase());\n        }\n      }\n      return keyIds;\n    }\n  }\n}\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\nconst stringToArrayBuffer = string => {\n  const view = new Uint8Array(new ArrayBuffer(string.length));\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\nconst browserWorkerPolyFill = function (workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\nconst createObjectURL = function (str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    const blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\nconst factory = function (code) {\n  return function () {\n    const objectUrl = createObjectURL(code);\n    const worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    const terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n    return worker;\n  };\n};\nconst transform = function (code) {\n  return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n};\nconst getWorkerString = function (fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n\n/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\nconst workerCode$1 = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$8 = function () {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n      this.off = function (type, listener) {\n        var index;\n        if (!listeners[type]) {\n          return false;\n        }\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n  Stream$8.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n  Stream$8.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n  Stream$8.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n  Stream$8.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n  Stream$8.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n  Stream$8.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n  var stream = Stream$8;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n  var getUint64$3 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$3,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x76, 0x69, 0x64, 0x65,\n    // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n\n    AUDIO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x73, 0x6f, 0x75, 0x6e,\n    // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // entry_count\n    0x00, 0x00, 0x00, 0x0c,\n    // entry_size\n    0x75, 0x72, 0x6c, 0x20,\n    // 'url' type\n    0x00,\n    // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n\n    SMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00,\n    // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n\n    STCO = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x01,\n    // flags\n    0x00, 0x00,\n    // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function (type) {\n    var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  };\n  dinf = function () {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n  esds = function (track) {\n    return box(types.esds, new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    // ES_Descriptor\n    0x03,\n    // tag, ES_DescrTag\n    0x19,\n    // length\n    0x00, 0x00,\n    // ES_ID\n    0x00,\n    // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04,\n    // tag, DecoderConfigDescrTag\n    0x11,\n    // length\n    0x40,\n    // object type\n    0x15,\n    // streamType\n    0x00, 0x06, 0x00,\n    // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0,\n    // maxBitrate\n    0x00, 0x00, 0xda, 0xc0,\n    // avgBitrate\n    // DecoderSpecificInfo\n    0x05,\n    // tag, DecoderSpecificInfoTag\n    0x02,\n    // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function () {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n  hdlr = function (type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n  mdat = function (data) {\n    return box(types.mdat, data);\n  };\n  mdhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x02,\n    // creation_time\n    0x00, 0x00, 0x00, 0x03,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n    // duration\n    0x55, 0xc4,\n    // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n    return box(types.mdhd, result);\n  };\n  mdia = function (track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n  mfhd = function (sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n    // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function (track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n  moof = function (sequenceNumber, tracks) {\n    var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n  moov = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n  mvex = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n  mvhd = function (duration) {\n    var bytes = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // creation_time\n    0x00, 0x00, 0x00, 0x02,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n    // duration\n    0x00, 0x01, 0x00, 0x00,\n    // 1.0 rate\n    0x01, 0x00,\n    // 1.0 volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n\n    return box(types.mvhd, bytes);\n  };\n  sdtp = function (track) {\n    var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n    return box(types.sdtp, bytes);\n  };\n  stbl = function (track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n  (function () {\n    var videoSample, audioSample;\n    stsd = function (track) {\n      return box(types.stsd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n    videoSample = function (track) {\n      var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i,\n        avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff,\n      // width\n      (track.height & 0xff00) >> 8, track.height & 0xff,\n      // height\n      0x00, 0x48, 0x00, 0x00,\n      // horizresolution\n      0x00, 0x48, 0x00, 0x00,\n      // vertresolution\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // compressorname\n      0x00, 0x18,\n      // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01,\n      // configurationVersion\n      track.profileIdc,\n      // AVCProfileIndication\n      track.profileCompatibility,\n      // profile_compatibility\n      track.levelIdc,\n      // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length],\n      // numOfSequenceParameterSets\n      sequenceParameterSets,\n      // \"SPS\"\n      [pps.length],\n      // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n      // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0,\n      // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n          vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n      return box.apply(null, avc1Box);\n    };\n    audioSample = function (track) {\n      return box(types.mp4a, new Uint8Array([\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n      // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n      // samplesize\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n  tkhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x07,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // creation_time\n    0x00, 0x00, 0x00, 0x00,\n    // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n    // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00,\n    // layer\n    0x00, 0x00,\n    // alternate_group\n    0x01, 0x00,\n    // non-audio track volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n    // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n  traf = function (track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x3a,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n    // version 1\n    0x00, 0x00, 0x00,\n    // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 +\n    // tfhd\n    20 +\n    // tfdt\n    8 +\n    // traf header\n    16 +\n    // mfhd\n    8 +\n    // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n  trak = function (track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n  trex = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n    return box(types.trex, result);\n  };\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function (samples, offset) {\n      var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n      return [0x00,\n      // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n      // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n      // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function (track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n    audioTrun = function (track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n    trun$1 = function (track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n      return videoTrun(track, offset);\n    };\n  })();\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function (tracks) {\n      var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function (nalUnits) {\n    var i,\n      currentNal,\n      currentFrame = [],\n      frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n  var groupFramesIntoGops = function (frames) {\n    var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n  var extendFirstKeyFrame = function (gops) {\n    var currentGop;\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n  var createDefaultSample = function () {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n  var sampleForFrame = function (frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n  var generateSampleTable$1 = function (gops, baseDataOffset) {\n    var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n  var concatenateNalData = function (gops) {\n    var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  }; // generate the track's sample table from a frame\n\n  var generateSampleTableForFrame = function (frame, baseDataOffset) {\n    var sample,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n  var concatenateNalDataForFrame = function (frame) {\n    var i,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = frame.byteLength,\n      numberOfNals = frame.length,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n    return data;\n  };\n  var frameUtils$1 = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n  var zeroFill = function (count) {\n    var a = [];\n    while (count--) {\n      a.push(0);\n    }\n    return a;\n  };\n  var makeTable = function (metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n  var silence;\n  var silence_1 = function () {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock$2 = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var coneOfSilence = silence_1;\n  var clock$1 = clock$2;\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function (array) {\n    var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n  var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i,\n      firstFrame;\n    if (!frames.length) {\n      return;\n    }\n    baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n    silentFrame = coneOfSilence()[track.samplerate];\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n    track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n  var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n  var generateSampleTable = function (frames) {\n    var i,\n      currentFrame,\n      samples = [];\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n  var concatenateFrameData = function (frames) {\n    var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n  var audioFrameUtils$1 = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function (track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n  var clearDtsInfo = function (track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n    return baseMediaDecodeTime;\n  };\n  var trackDecodeInfo$1 = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function (bytes) {\n    var i = 0,\n      result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n  var parseUserData = function (sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n  var parseCaptionPackets = function (pts, userData) {\n    var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n    count = userData[0] & 0x1f;\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n    return results;\n  };\n  var discardEmulationPreventionBytes$1 = function (data) {\n    var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }; // exports\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // Link To Transport\n  // -----------------\n\n  var Stream$7 = stream;\n  var cea708Parser = captionPacketParser;\n  var CaptionStream$2 = function (options) {\n    options = options || {};\n    CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n  CaptionStream$2.prototype = new Stream$7();\n  CaptionStream$2.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n    sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n    userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n      return;\n    } // parse out CC data packets and save them for later\n\n    newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n  CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n  CaptionStream$2.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n  CaptionStream$2.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n  CaptionStream$2.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n  CaptionStream$2.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n  CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n  CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n  CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n  CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n  CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n  };\n\n  var get708CharFromCode = function (code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n    return String.fromCharCode(newCode);\n  };\n  var within708TextBlock = function (b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n  var Cea708Window = function (windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n    return false;\n  };\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n  var Cea708Service = function (serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n  var Cea708Stream = function (options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(serviceName => {\n      serviceProps = captionServices[serviceName];\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n        self.add708Bytes(packet);\n      }\n    };\n  };\n  Cea708Stream.prototype = new Stream$7();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n      this.pushServiceBlock(serviceNum, i, blockSize);\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n    var char;\n    var charCodeArray; // Converts an array of bytes to a unicode hex string.\n\n    function toHexString(byteArray) {\n      return byteArray.map(byte => {\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n      }).join('');\n    }\n    if (isMultiByte) {\n      charCodeArray = [currentByte, nextByte];\n      i++;\n    } else {\n      charCodeArray = [currentByte];\n    } // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      // We assume any multi-byte char without a decoder is unicode.\n      if (isMultiByte) {\n        const unicode = toHexString(charCodeArray); // Takes a unicode hex string and creates a single character.\n\n        char = String.fromCharCode(parseInt(unicode, 16));\n      } else {\n        char = get708CharFromCode(extended | currentByte);\n      }\n    }\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n    win.pendingNewLine = false;\n    win.addText(char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n  };\n\n  var getCharFromCode = function (code) {\n    if (code === null) {\n      return '';\n    }\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n  // We keep track of positioning information as we go by storing the\n  // number of indentations and the tab offset in this buffer.\n\n  var createDisplayBuffer = function () {\n    var result = [],\n      i = BOTTOM_ROW + 1;\n    while (i--) {\n      result.push({\n        text: '',\n        indent: 0,\n        offset: 0\n      });\n    }\n    return result;\n  };\n  var Cea608Stream = function (field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n        } else {\n          this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n        } else {\n          this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        const offset = char1 & 0x03; // For an offest value 1-3, set the offset for that caption\n        // in the non-displayed array.\n\n        this.nonDisplayed_[this.row_].offset = offset;\n        this.column_ += offset; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n          this.setRollUp(packet.pts, row);\n        }\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          const indentations = (data & 0xe) >> 1;\n          this.column_ = indentations * 4; // add to the number of indentations for positioning\n\n          this.nonDisplayed_[this.row_].indent += indentations;\n        }\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n    };\n  };\n\n  Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    const logWarning = index => {\n      this.trigger('log', {\n        level: 'warn',\n        message: 'Skipping a malformed 608 caption at index ' + index + '.'\n      });\n    };\n    const content = [];\n    this.displayed_.forEach((row, i) => {\n      if (row && row.text && row.text.length) {\n        try {\n          // remove spaces from the start and end of the string\n          row.text = row.text.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          logWarning(i);\n        } // See the below link for more details on the following fields:\n        // https://dvcs.w3.org/hg/text-tracks/raw-file/default/608toVTT/608toVTT.html#positioning-in-cea-608\n\n        if (row.text.length) {\n          content.push({\n            // The text to be displayed in the caption from this specific row, with whitespace removed.\n            text: row.text,\n            // Value between 1 and 15 representing the PAC row used to calculate line height.\n            line: i + 1,\n            // A number representing the indent position by percentage (CEA-608 PAC indent code).\n            // The value will be a number between 10 and 80. Offset is used to add an aditional\n            // value to the position if necessary.\n            position: 10 + Math.min(70, row.indent * 10) + row.offset * 2.5\n          });\n        }\n      } else if (row === undefined || row === null) {\n        logWarning(i);\n      }\n    });\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = {\n          text: '',\n          indent: 0,\n          offset: 0\n        };\n      }\n    }\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_].text; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_].text = baseRow;\n  };\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_].text;\n    baseRow += text;\n    this.displayed_[this.row_].text = baseRow;\n  };\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    }\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    } // shift displayed rows up\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n    this.displayed_[this.row_] = {\n      text: '',\n      indent: 0,\n      offset: 0\n    };\n  };\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_].text;\n    baseRow += text;\n    this.displayed_[this.row_].text = baseRow;\n  }; // exports\n\n  var captionStream = {\n    CaptionStream: CaptionStream$2,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */\n\n  var Stream$6 = stream;\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n  var handleRollover$1 = function (value, reference) {\n    var direction = 1;\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n    return value;\n  };\n  var TimestampRolloverStream$1 = function (type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n    this.push = function (data) {\n      /**\n       * Rollover stream expects data from elementary stream.\n       * Elementary stream can push forward 2 types of data\n       * - Parsed Video/Audio/Timed-metadata PES (packetized elementary stream) packets\n       * - Tracks metadata from PMT (Program Map Table)\n       * Rollover stream expects pts/dts info to be available, since it stores lastDTS\n       * We should ignore non-PES packets since they may override lastDTS to undefined.\n       * lastDTS is important to signal the next segments\n       * about rollover from the previous segments.\n       */\n      if (data.type === 'metadata') {\n        this.trigger('data', data);\n        return;\n      } // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n  TimestampRolloverStream$1.prototype = new Stream$6();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  }; // Once IE11 support is dropped, this function should be removed.\n\n  var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n    if (!typedArray) {\n      return -1;\n    }\n    var currentIndex = fromIndex;\n    for (; currentIndex < typedArray.length; currentIndex++) {\n      if (typedArray[currentIndex] === element) {\n        return currentIndex;\n      }\n    }\n    return -1;\n  };\n  var typedArray = {\n    typedArrayIndexOf: typedArrayIndexOf$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Tools for parsing ID3 frame data\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var typedArrayIndexOf = typedArray.typedArrayIndexOf,\n    // Frames that allow different types of text encoding contain a text\n    // encoding description byte [ID3v2.4.0 section 4.]\n    textEncodingDescriptionByte = {\n      Iso88591: 0x00,\n      // ISO-8859-1, terminated with \\0.\n      Utf16: 0x01,\n      // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n      Utf16be: 0x02,\n      // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n      Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n    },\n    // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding \n    percentEncode$1 = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function (bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function (bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n    parseSyncSafeInteger$1 = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n    frameParsers = {\n      'APIC': function (frame) {\n        var i = 1,\n          mimeTypeEndIndex,\n          descriptionEndIndex,\n          LINK_MIME_TYPE = '-->';\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parsing fields [ID3v2.4.0 section 4.14.]\n\n        mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (mimeTypeEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Mime type field (terminated with \\0)\n\n        frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n        i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n        frame.pictureType = frame.data[i];\n        i++;\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (descriptionEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Description field (terminated with \\0)\n\n        frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n        i = descriptionEndIndex + 1;\n        if (frame.mimeType === LINK_MIME_TYPE) {\n          // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n          frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n        } else {\n          // parsing Picture Data field as binary data\n          frame.pictureData = frame.data.subarray(i, frame.data.length);\n        }\n      },\n      'T*': function (frame) {\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parse text field, do not include null terminator in the frame value\n        // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n        frame.values = frame.value.split('\\0');\n      },\n      'TXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the text fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n        // frames that allow different types of encoding contain terminated text\n        // [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n        frame.data = frame.value;\n      },\n      'W*': function (frame) {\n        // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n        frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'WXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the description and URL fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information\n        // should be ignored [ID3v2.4.0 section 4.3]\n\n        frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'PRIV': function (frame) {\n        var i;\n        for (i = 0; i < frame.data.length; i++) {\n          if (frame.data[i] === 0) {\n            // parse the description and URL fields\n            frame.owner = parseIso88591$1(frame.data, 0, i);\n            break;\n          }\n        }\n        frame.privateData = frame.data.subarray(i + 1);\n        frame.data = frame.privateData;\n      }\n    };\n  var parseId3Frames$1 = function (data) {\n    var frameSize,\n      frameHeader,\n      frameStart = 10,\n      tagSize = 0,\n      frames = []; // If we don't have enough data for a header, 10 bytes, \n    // or 'ID3' in the first 3 bytes this is not a valid ID3 tag.\n\n    if (data.length < 10 || data[0] !== 'I'.charCodeAt(0) || data[1] !== 'D'.charCodeAt(0) || data[2] !== '3'.charCodeAt(0)) {\n      return;\n    } // the frame size is transmitted as a 28-bit integer in the\n    // last four bytes of the ID3 header.\n    // The most significant bit of each byte is dropped and the\n    // results concatenated to recover the actual value.\n\n    tagSize = parseSyncSafeInteger$1(data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n    // convenient for our comparisons to include it\n\n    tagSize += 10; // check bit 6 of byte 5 for the extended header flag.\n\n    var hasExtendedHeader = data[5] & 0x40;\n    if (hasExtendedHeader) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger$1(data.subarray(10, 14));\n      tagSize -= parseSyncSafeInteger$1(data.subarray(16, 20)); // clip any padding off the end\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger$1(data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        break;\n      }\n      frameHeader = String.fromCharCode(data[frameStart], data[frameStart + 1], data[frameStart + 2], data[frameStart + 3]);\n      var frame = {\n        id: frameHeader,\n        data: data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id; // parse frame values\n\n      if (frameParsers[frame.id]) {\n        // use frame specific parser\n        frameParsers[frame.id](frame);\n      } else if (frame.id[0] === 'T') {\n        // use text frame generic parser\n        frameParsers['T*'](frame);\n      } else if (frame.id[0] === 'W') {\n        // use URL link frame generic parser\n        frameParsers['W*'](frame);\n      }\n      frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    return frames;\n  };\n  var parseId3 = {\n    parseId3Frames: parseId3Frames$1,\n    parseSyncSafeInteger: parseSyncSafeInteger$1,\n    frameParsers: frameParsers\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var Stream$5 = stream,\n    StreamTypes$3 = streamTypes,\n    id3 = parseId3,\n    MetadataStream;\n  MetadataStream = function (options) {\n    var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n      i;\n    MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n    this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = id3.parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += id3.parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= id3.parseSyncSafeInteger(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = id3.parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n          }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n          // to be sent along.\n\n          break;\n        }\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (id3.frameParsers[frame.id]) {\n          // use frame specific parser\n          id3.frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          id3.frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          id3.frameParsers['W*'](frame);\n        } // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n            size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      this.trigger('data', tag);\n    };\n  };\n  MetadataStream.prototype = new Stream$5();\n  var metadataStream = MetadataStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$4 = stream,\n    CaptionStream$1 = captionStream,\n    StreamTypes$2 = streamTypes,\n    TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n    // bytes\n    SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  TransportPacketStream = function () {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n      bytesInBuffer = 0;\n    TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n  TransportPacketStream.prototype = new Stream$4();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  TransportParseStream = function () {\n    var parsePsi, parsePat, parsePmt, self;\n    TransportParseStream.prototype.init.call(this);\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n    parsePsi = function (payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n    parsePat = function (payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n    parsePmt = function (payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n    this.push = function (packet) {\n      var result = {},\n        offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n  TransportParseStream.prototype = new Stream$4();\n  TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  ElementaryStream = function () {\n    var self = this,\n      segmentHadPmt = false,\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n      audio = {\n        data: [],\n        size: 0\n      },\n      timedMetadata = {\n        data: [],\n        size: 0\n      },\n      programMapTable,\n      parsePes = function (payload, pes) {\n        var ptsDtsFlags;\n        const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function (stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n          event = {\n            type: type\n          },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n    ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n    this.push = function (data) {\n      ({\n        pat: function () {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function () {\n          var stream, streamType;\n          switch (data.streamType) {\n            case StreamTypes$2.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n            case StreamTypes$2.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n            case StreamTypes$2.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function () {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n        self.trigger('data', pmt);\n      }\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n  ElementaryStream.prototype = new Stream$4();\n  var m2ts$1 = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: TransportPacketStream,\n    TransportParseStream: TransportParseStream,\n    ElementaryStream: ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: CaptionStream$1.CaptionStream,\n    Cea608Stream: CaptionStream$1.Cea608Stream,\n    Cea708Stream: CaptionStream$1.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n  for (var type in StreamTypes$2) {\n    if (StreamTypes$2.hasOwnProperty(type)) {\n      m2ts$1[type] = StreamTypes$2[type];\n    }\n  }\n  var m2ts_1 = m2ts$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$3 = stream;\n  var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n  var AdtsStream$1;\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  AdtsStream$1 = function (handlePartialSegments) {\n    var buffer,\n      frameNum = 0;\n    AdtsStream$1.prototype.init.call(this);\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n      });\n    };\n    this.push = function (packet) {\n      var i = 0,\n        frameLength,\n        protectionSkipBytes,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n          i++;\n          continue;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n      buffer = buffer.subarray(i);\n    };\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n  AdtsStream$1.prototype = new Stream$3();\n  var adts = AdtsStream$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb$1;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb$1 = function (workingData) {\n    var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n      workingWord = 0,\n      // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n      return valu;\n    }; // ():uint\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n    this.loadWord();\n  };\n  var expGolomb = ExpGolomb$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$2 = stream;\n  var ExpGolomb = expGolomb;\n  var H264Stream$1, NalByteStream;\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  NalByteStream = function () {\n    var syncPoint = 0,\n      i,\n      buffer;\n    NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n    this.push = function (data) {\n      var swapBuffer;\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n  NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  H264Stream$1 = function () {\n    var nalByteStream = new NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n    H264Stream$1.prototype.init.call(this);\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n    skipScalingList = function (count, expGolombDecoder) {\n      var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n    discardEmulationPreventionBytes = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n    readSequenceParameterSet = function (data) {\n      var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio = [1, 1],\n        aspectRatioIdc,\n        i;\n      expGolombDecoder = new ExpGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n            case 2:\n              sarRatio = [12, 11];\n              break;\n            case 3:\n              sarRatio = [10, 11];\n              break;\n            case 4:\n              sarRatio = [16, 11];\n              break;\n            case 5:\n              sarRatio = [40, 33];\n              break;\n            case 6:\n              sarRatio = [24, 11];\n              break;\n            case 7:\n              sarRatio = [20, 11];\n              break;\n            case 8:\n              sarRatio = [32, 11];\n              break;\n            case 9:\n              sarRatio = [80, 33];\n              break;\n            case 10:\n              sarRatio = [18, 11];\n              break;\n            case 11:\n              sarRatio = [15, 11];\n              break;\n            case 12:\n              sarRatio = [64, 33];\n              break;\n            case 13:\n              sarRatio = [160, 99];\n              break;\n            case 14:\n              sarRatio = [4, 3];\n              break;\n            case 15:\n              sarRatio = [3, 2];\n              break;\n            case 16:\n              sarRatio = [2, 1];\n              break;\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n  H264Stream$1.prototype = new Stream$2();\n  var h264 = {\n    H264Stream: H264Stream$1,\n    NalByteStream: NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  var parseId3TagSize = function (header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function (data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n  var isLikelyAacData$1 = function (data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n    // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n  var parseSyncSafeInteger = function (data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n  var percentEncode = function (bytes, start, end) {\n    var i,\n      result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n  var parseIso88591 = function (bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function (header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n  var parseType$4 = function (header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n    return null;\n  };\n  var parseSampleRate = function (packet) {\n    var i = 0;\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n    return null;\n  };\n  var parseAacTimestamp = function (packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        return null;\n      }\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n            break;\n          }\n        }\n      }\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n    return null;\n  };\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$4,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$1 = stream;\n  var aacUtils = utils; // Constants\n\n  var AacStream$1;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n  AacStream$1 = function () {\n    var everything = new Uint8Array(),\n      timeStamp = 0;\n    AacStream$1.prototype.init.call(this);\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n    this.push = function (bytes) {\n      var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n          frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n          frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n        byteIndex++;\n      }\n      bytesLeft = everything.length - byteIndex;\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n  AacStream$1.prototype = new Stream$1();\n  var aac = AacStream$1;\n  var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES$1;\n  var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream = stream;\n  var mp4 = mp4Generator;\n  var frameUtils = frameUtils$1;\n  var audioFrameUtils = audioFrameUtils$1;\n  var trackDecodeInfo = trackDecodeInfo$1;\n  var m2ts = m2ts_1;\n  var clock = clock$2;\n  var AdtsStream = adts;\n  var H264Stream = h264.H264Stream;\n  var AacStream = aac;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n  var AUDIO_PROPERTIES = audioProperties;\n  var VIDEO_PROPERTIES = videoProperties; // object types\n\n  var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n  var retriggerForStream = function (key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n  var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n  var arrayEquals = function (a, b) {\n    var i;\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  AudioSegmentStream = function (track, options) {\n    var adtsFrames = [],\n      sequenceNumber,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    AudioSegmentStream.prototype.init.call(this);\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n      adtsFrames.push(data);\n    };\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n        // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n        // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n  AudioSegmentStream.prototype = new Stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  VideoSegmentStream = function (track, options) {\n    var sequenceNumber,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    VideoSegmentStream.prototype.init.call(this);\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n    this.flush = function () {\n      var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          break;\n        }\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n        gopIndex--;\n      }\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n      var trimIndex;\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n      if (trimIndex === 0) {\n        return gops;\n      }\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n  VideoSegmentStream.prototype = new Stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  CoalesceStream = function (options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n    CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.content || output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n  CoalesceStream.prototype = new Stream();\n  CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n      event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n        return;\n      }\n    }\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n  Transmuxer = function (options) {\n    var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n    Transmuxer.prototype.init.call(this);\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new AacStream();\n      pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts.TransportPacketStream();\n      pipeline.parseStream = new m2ts.TransportParseStream();\n      pipeline.elementaryStream = new m2ts.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts.CaptionStream(options);\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n        hasFlushed = false;\n      }\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n  Transmuxer.prototype = new Stream();\n  var transmuxer = {\n    Transmuxer: Transmuxer,\n    VideoSegmentStream: VideoSegmentStream,\n    AudioSegmentStream: AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function (value) {\n    return value >>> 0;\n  };\n  var toHexString$1 = function (value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n  var parseType$3 = function (buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  var parseType_1 = parseType$3;\n  var toUnsigned$2 = bin.toUnsigned;\n  var parseType$2 = parseType_1;\n  var findBox$2 = function (data, path) {\n    var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox$2(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    } // we've finished searching all of data\n\n    return results;\n  };\n  var findBox_1 = findBox$2;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$2 = numbers.getUint64;\n  var tfdt = function (data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$2(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n    return result;\n  };\n  var parseTfdt$2 = tfdt;\n  var parseSampleFlags$1 = function (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n  var parseSampleFlags_1 = parseSampleFlags$1;\n  var parseSampleFlags = parseSampleFlags_1;\n  var trun = function (data) {\n    var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n      view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n      // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n      // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n      // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n      // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n      // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n      // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n      offset = 8,\n      sample;\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n      sampleCount--;\n    }\n    while (sampleCount--) {\n      sample = {};\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n    }\n    return result;\n  };\n  var parseTrun$2 = trun;\n  var tfhd = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n      baseDataOffsetPresent = result.flags[2] & 0x01,\n      sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n      defaultSampleDurationPresent = result.flags[2] & 0x08,\n      defaultSampleSizePresent = result.flags[2] & 0x10,\n      defaultSampleFlagsPresent = result.flags[2] & 0x20,\n      durationIsEmpty = result.flags[0] & 0x010000,\n      defaultBaseIsMoof = result.flags[0] & 0x020000,\n      i;\n    i = 8;\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n    return result;\n  };\n  var parseTfhd$2 = tfhd;\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */\n\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  var findBox$1 = findBox_1;\n  var parseTfdt$1 = parseTfdt$2;\n  var parseTrun$1 = parseTrun$2;\n  var parseTfhd$1 = parseTfhd$2;\n  var window$2 = window_1;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function (offset, samples) {\n    var approximateOffset = offset;\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n      approximateOffset -= sample.size;\n    }\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n  var findSeiNals = function (avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = {\n        logs: [],\n        seiNals: []\n      },\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var parseSamples = function (truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun$1(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window$2.BigInt(sample.compositionTimeOffset);\n          currentDts += window$2.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n  var parseCaptionNals = function (segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox$1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox$1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd$1(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox$1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {Object[]} parsedCaptions[].content - A list of individual caption segments\n    * @return {String} parsedCaptions[].content.text - The visible content of the caption segment\n    * @return {Number} parsedCaptions[].content.line - The line height from 1-15 for positioning of the caption segment\n    * @return {Number} parsedCaptions[].content.position - The column indent percentage for cue positioning from 10-80\n   **/\n\n  var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n  var CaptionParser = function () {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n        return null;\n      }\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n      this.resetCaptionStream();\n    };\n    this.reset();\n  };\n  var captionParser = CaptionParser;\n  /**\n   * Returns the first string in the data array ending with a null char '\\0'\n   * @param {UInt8} data \n   * @returns the string with the null char\n   */\n\n  var uint8ToCString$1 = function (data) {\n    var index = 0;\n    var curChar = String.fromCharCode(data[index]);\n    var retString = '';\n    while (curChar !== '\\0') {\n      retString += curChar;\n      index++;\n      curChar = String.fromCharCode(data[index]);\n    } // Add nullChar\n\n    retString += curChar;\n    return retString;\n  };\n  var string = {\n    uint8ToCString: uint8ToCString$1\n  };\n  var uint8ToCString = string.uint8ToCString;\n  var getUint64$1 = numbers.getUint64;\n  /**\n   * Based on: ISO/IEC 23009 Section: 5.10.3.3\n   * References:\n   * https://dashif-documents.azurewebsites.net/Events/master/event.html#emsg-format\n   * https://aomediacodec.github.io/id3-emsg/\n   * \n   * Takes emsg box data as a uint8 array and returns a emsg box object\n   * @param {UInt8Array} boxData data from emsg box\n   * @returns A parsed emsg box object\n   */\n\n  var parseEmsgBox = function (boxData) {\n    // version + flags\n    var offset = 4;\n    var version = boxData[0];\n    var scheme_id_uri, value, timescale, presentation_time, presentation_time_delta, event_duration, id, message_data;\n    if (version === 0) {\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time_delta = dv.getUint32(offset);\n      offset += 4;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n    } else if (version === 1) {\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time = getUint64$1(boxData.subarray(offset));\n      offset += 8;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n    }\n    message_data = new Uint8Array(boxData.subarray(offset, boxData.byteLength));\n    var emsgBox = {\n      scheme_id_uri,\n      value,\n      // if timescale is undefined or 0 set to 1 \n      timescale: timescale ? timescale : 1,\n      presentation_time,\n      presentation_time_delta,\n      event_duration,\n      id,\n      message_data\n    };\n    return isValidEmsgBox(version, emsgBox) ? emsgBox : undefined;\n  };\n  /**\n   * Scales a presentation time or time delta with an offset with a provided timescale\n   * @param {number} presentationTime \n   * @param {number} timescale \n   * @param {number} timeDelta \n   * @param {number} offset \n   * @returns the scaled time as a number\n   */\n\n  var scaleTime = function (presentationTime, timescale, timeDelta, offset) {\n    return presentationTime || presentationTime === 0 ? presentationTime / timescale : offset + timeDelta / timescale;\n  };\n  /**\n   * Checks the emsg box data for validity based on the version\n   * @param {number} version of the emsg box to validate\n   * @param {Object} emsg the emsg data to validate\n   * @returns if the box is valid as a boolean\n   */\n\n  var isValidEmsgBox = function (version, emsg) {\n    var hasScheme = emsg.scheme_id_uri !== '\\0';\n    var isValidV0Box = version === 0 && isDefined(emsg.presentation_time_delta) && hasScheme;\n    var isValidV1Box = version === 1 && isDefined(emsg.presentation_time) && hasScheme; // Only valid versions of emsg are 0 and 1\n\n    return !(version > 1) && isValidV0Box || isValidV1Box;\n  }; // Utility function to check if an object is defined\n\n  var isDefined = function (data) {\n    return data !== undefined || data !== null;\n  };\n  var emsg$1 = {\n    parseEmsgBox: parseEmsgBox,\n    scaleTime: scaleTime\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */\n\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var findBox = findBox_1;\n  var parseType$1 = parseType_1;\n  var emsg = emsg$1;\n  var parseTfhd = parseTfhd$2;\n  var parseTrun = parseTrun$2;\n  var parseTfdt = parseTfdt$2;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader, getEmsgID3;\n  var window$1 = window_1;\n  var parseId3Frames = parseId3.parseId3Frames;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function (init) {\n    var result = {},\n      traks = findBox(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox(trak, ['tkhd'])[0];\n      if (!tkhd) {\n        return null;\n      }\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (!mdhd) {\n        return null;\n      }\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n  startTime = function (timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n      let seconds;\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window$1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n      if (seconds < acc) {\n        acc = seconds;\n      }\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n  compositionStartTime = function (timescales, fragment) {\n    var trafBoxes = findBox(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window$1.BigInt(compositionTimeOffset);\n      timescale = window$1.BigInt(timescale);\n    }\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n  getVideoTrackIds = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType$1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n  getTimescaleFromMediaHeader = function (mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n  getTracks = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n      var hdlr = findBox(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType$1(hdlr.subarray(8, 12));\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n      var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n      var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n      tracks.push(track);\n    });\n    return tracks;\n  };\n  /**\n   * Returns an array of emsg ID3 data from the provided segmentData.\n   * An offset can also be provided as the Latest Arrival Time to calculate \n   * the Event Start Time of v0 EMSG boxes. \n   * See: https://dashif-documents.azurewebsites.net/Events/master/event.html#Inband-event-timing\n   * \n   * @param {Uint8Array} segmentData the segment byte array.\n   * @param {number} offset the segment start time or Latest Arrival Time, \n   * @return {Object[]} an array of ID3 parsed from EMSG boxes\n   */\n\n  getEmsgID3 = function (segmentData, offset = 0) {\n    var emsgBoxes = findBox(segmentData, ['emsg']);\n    return emsgBoxes.map(data => {\n      var parsedBox = emsg.parseEmsgBox(new Uint8Array(data));\n      var parsedId3Frames = parseId3Frames(parsedBox.message_data);\n      return {\n        cueTime: emsg.scaleTime(parsedBox.presentation_time, parsedBox.timescale, parsedBox.presentation_time_delta, offset),\n        duration: emsg.scaleTime(parsedBox.event_duration, parsedBox.timescale),\n        frames: parsedId3Frames\n      };\n    });\n  };\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox,\n    parseType: parseType$1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader,\n    getEmsgID3: getEmsgID3\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */\n\n  var StreamTypes$1 = streamTypes;\n  var parsePid = function (packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n  var parsePayloadUnitStartIndicator = function (packet) {\n    return !!(packet[1] & 0x40);\n  };\n  var parseAdaptionField = function (packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n    return offset;\n  };\n  var parseType = function (packet, pmtPid) {\n    var pid = parsePid(packet);\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n    return null;\n  };\n  var parsePat = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n  var parsePmt = function (packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n    return programMapTable;\n  };\n  var parsePesType = function (packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n    switch (type) {\n      case StreamTypes$1.H264_STREAM_TYPE:\n        return 'video';\n      case StreamTypes$1.ADTS_STREAM_TYPE:\n        return 'audio';\n      case StreamTypes$1.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n      default:\n        return null;\n    }\n  };\n  var parsePesTime = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    if (!pusi) {\n      return null;\n    }\n    var offset = 4 + parseAdaptionField(packet);\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n  var parseNalUnitType = function (type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n      case 0x06:\n        return 'sei_rbsp';\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n      default:\n        return null;\n    }\n  };\n  var videoPacketContainsKeyFrame = function (packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n    return foundKeyFrame;\n  };\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */\n\n  var StreamTypes = streamTypes;\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n    // bytes\n    SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function (bytes, pmt) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n  var parseAudioPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n  var parseVideoPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n                    currentFrame.size = 0;\n                  }\n                }\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n            break;\n        }\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n  var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n  var inspectAac_ = function (bytes) {\n    var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n          byteIndex += frameSize;\n          break;\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n        default:\n          byteIndex++;\n          break;\n      }\n      if (endLoop) {\n        return null;\n      }\n    }\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n  var inspectTs_ = function (bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n        switch (type) {\n          case StreamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n            break;\n          case StreamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n            break;\n        }\n      }\n    }\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n  var inspect = function (bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  const wireTransmuxerEvents = function (self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      const initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      const typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      const videoSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      const audioSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n          end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n          end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n  class MessageHandlers {\n    constructor(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n    init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    }\n    pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    probeMp4StartTime({\n      timescales,\n      data\n    }) {\n      const startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime,\n        data\n      }, [data.buffer]);\n    }\n    probeMp4Tracks({\n      data\n    }) {\n      const tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks,\n        data\n      }, [data.buffer]);\n    }\n    /**\n     * Probes an mp4 segment for EMSG boxes containing ID3 data.\n     * https://aomediacodec.github.io/id3-emsg/\n     *\n     * @param {Uint8Array} data segment data\n     * @param {number} offset segment start time\n     * @return {Object[]} an array of ID3 frames\n     */\n\n    probeEmsgID3({\n      data,\n      offset\n    }) {\n      const id3Frames = probe$2.getEmsgID3(data, offset);\n      this.self.postMessage({\n        action: 'probeEmsgID3',\n        id3Frames,\n        emsgData: data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n\n    probeTs({\n      data,\n      baseStartTime\n    }) {\n      const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n      const timeInfo = tsInspector.inspect(data, tsStartTime);\n      let result = null;\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n      this.self.postMessage({\n        action: 'probeTs',\n        result,\n        data\n      }, [data.buffer]);\n    }\n    clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    }\n    clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n\n    push(data) {\n      // Cast array buffer to correct type for transmuxer\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n\n    reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n\n    setTimestampOffset(data) {\n      const timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n    }\n    setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n    }\n    setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n\n    flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    }\n    endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    }\n    alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\n\nconst handleData_ = (event, transmuxedData, callback) => {\n  const {\n    type,\n    initSegment,\n    captions,\n    captionStreams,\n    metadata,\n    videoFrameDtsTime,\n    videoFramePtsTime\n  } = event.data.segment;\n  transmuxedData.buffer.push({\n    captions,\n    captionStreams,\n    metadata\n  });\n  const boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  const result = {\n    type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n  callback(result);\n};\nconst handleDone_ = ({\n  transmuxedData,\n  callback\n}) => {\n  // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\nconst handleGopInfo_ = (event, transmuxedData) => {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\nconst processTransmux = options => {\n  const {\n    transmuxer,\n    bytes,\n    audioAppendStart,\n    gopsToAlignWith,\n    remux,\n    onData,\n    onTrackInfo,\n    onAudioTimingInfo,\n    onVideoTimingInfo,\n    onVideoSegmentTimingInfo,\n    onAudioSegmentTimingInfo,\n    onId3,\n    onCaptions,\n    onDone,\n    onEndedTimeline,\n    onTransmuxerLog,\n    isEndOfTimeline\n  } = options;\n  const transmuxedData = {\n    buffer: []\n  };\n  let waitForEndedTimelineEvent = isEndOfTimeline;\n  const handleMessage = event => {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith\n    });\n  }\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux\n    });\n  }\n  if (bytes.byteLength) {\n    const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\nconst dequeue = transmuxer => {\n  transmuxer.currentTransmux = null;\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\nconst processAction = (transmuxer, action) => {\n  transmuxer.postMessage({\n    action\n  });\n  dequeue(transmuxer);\n};\nconst enqueueAction = (action, transmuxer) => {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\nconst reset = transmuxer => {\n  enqueueAction('reset', transmuxer);\n};\nconst endTimeline = transmuxer => {\n  enqueueAction('endTimeline', transmuxer);\n};\nconst transmux = options => {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n  options.transmuxer.transmuxQueue.push(options);\n};\nconst createTransmuxer = options => {\n  const transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  const term = transmuxer.terminate;\n  transmuxer.terminate = () => {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n  transmuxer.postMessage({\n    action: 'init',\n    options\n  });\n  return transmuxer;\n};\nvar segmentTransmuxer = {\n  reset,\n  endTimeline,\n  transmux,\n  createTransmuxer\n};\nconst workerCallback = function (options) {\n  const transmuxer = options.transmuxer;\n  const endAction = options.endAction || options.action;\n  const callback = options.callback;\n  const message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n  const listenForEndEvent = event => {\n    if (event.data.action !== endAction) {\n      return;\n    }\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n    callback(event.data);\n  };\n  transmuxer.addEventListener('message', listenForEndEvent);\n  if (options.data) {\n    const isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\nconst REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nconst abortAll = activeXhrs => {\n  activeXhrs.forEach(xhr => {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\nconst getRequestStats = request => {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\nconst getProgressStats = progressEvent => {\n  const request = progressEvent.target;\n  const roundTripTime = Date.now() - request.requestTime;\n  const stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\nconst handleErrors = (error, request) => {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleKeyResponse = (segment, objects, finishProcessingFn) => (error, request) => {\n  const response = request.response;\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  if (response.byteLength !== 16) {\n    return finishProcessingFn({\n      status: request.status,\n      message: 'Invalid HLS key at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    }, segment);\n  }\n  const view = new DataView(response);\n  const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n  for (let i = 0; i < objects.length; i++) {\n    objects[i].bytes = bytes;\n  }\n  return finishProcessingFn(null, segment);\n};\nconst parseInitSegment = (segment, callback) => {\n  const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    const uri = segment.map.resolvedUri || segment.map.uri;\n    return callback({\n      internal: true,\n      message: `Found unsupported ${type || 'unknown'} container for initialization segment at URL: ${uri}`,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: ({\n      tracks,\n      data\n    }) => {\n      // transfer bytes back to us\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n        segment.map.tracks[track.type] = track;\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleInitSegmentResponse = ({\n  segment,\n  finishProcessingFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n  // until the key request is done to decrypt.\n\n  if (segment.map.key) {\n    segment.map.encryptedBytes = bytes;\n    return finishProcessingFn(null, segment);\n  }\n  segment.map.bytes = bytes;\n  parseInitSegment(segment, function (parseError) {\n    if (parseError) {\n      parseError.xhr = request;\n      parseError.status = request.status;\n      return finishProcessingFn(parseError, segment);\n    }\n    finishProcessingFn(null, segment);\n  });\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  responseType\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const newBytes =\n  // although responseText \"should\" exist, this guard serves to prevent an error being\n  // thrown for two primary cases:\n  // 1. the mime type override stops working, or is not implemented for a specific\n  //    browser\n  // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n  responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n  segment.stats = getRequestStats(request);\n  if (segment.key) {\n    segment.encryptedBytes = new Uint8Array(newBytes);\n  } else {\n    segment.bytes = new Uint8Array(newBytes);\n  }\n  return finishProcessingFn(null, segment);\n};\nconst transmuxAndNotify = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const fmp4Tracks = segment.map && segment.map.tracks || {};\n  const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n  const finish = () => transmux({\n    bytes,\n    transmuxer: segment.transmuxer,\n    audioAppendStart: segment.audioAppendStart,\n    gopsToAlignWith: segment.gopsToAlignWith,\n    remux: isMuxed,\n    onData: result => {\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      dataFn(segment, result);\n    },\n    onTrackInfo: trackInfo => {\n      if (trackInfoFn) {\n        if (isMuxed) {\n          trackInfo.isMuxed = true;\n        }\n        trackInfoFn(segment, trackInfo);\n      }\n    },\n    onAudioTimingInfo: audioTimingInfo => {\n      // we only want the first start value we encounter\n      if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n        audioStartFn(audioTimingInfo.start);\n        audioStartFn = null;\n      } // we want to continually update the end time\n\n      if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n        audioEndFn(audioTimingInfo.end);\n      }\n    },\n    onVideoTimingInfo: videoTimingInfo => {\n      // we only want the first start value we encounter\n      if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n        videoStartFn(videoTimingInfo.start);\n        videoStartFn = null;\n      } // we want to continually update the end time\n\n      if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n        videoEndFn(videoTimingInfo.end);\n      }\n    },\n    onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n      videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n    },\n    onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n      audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n    },\n    onId3: (id3Frames, dispatchType) => {\n      id3Fn(segment, id3Frames, dispatchType);\n    },\n    onCaptions: captions => {\n      captionsFn(segment, [captions]);\n    },\n    isEndOfTimeline,\n    onEndedTimeline: () => {\n      endedTimelineFn();\n    },\n    onTransmuxerLog,\n    onDone: result => {\n      if (!doneFn) {\n        return;\n      }\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      doneFn(null, segment, result);\n    }\n  }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: data => {\n      segment.bytes = bytes = data.data;\n      const probeResult = data.result;\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed\n        });\n        trackInfoFn = null;\n      }\n      finish();\n    }\n  });\n};\nconst handleSegmentBytes = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only exclude a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    const {\n      tracks\n    } = segment.map;\n    const trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    const finishLoading = (captions, id3Frames) => {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n      if (id3Frames && id3Frames.length) {\n        id3Fn(segment, id3Frames);\n      }\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n      doneFn(null, segment, {});\n    };\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        startTime\n      }) => {\n        // transfer bytes back to us\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        }\n        workerCallback({\n          action: 'probeEmsgID3',\n          data: bytesAsUint8Array,\n          transmuxer: segment.transmuxer,\n          offset: startTime,\n          callback: ({\n            emsgData,\n            id3Frames\n          }) => {\n            // transfer bytes back to us\n            bytes = emsgData.buffer;\n            segment.bytes = bytesAsUint8Array = emsgData; // Run through the CaptionParser in case there are captions.\n            // Initialize CaptionParser if it hasn't been yet\n\n            if (!tracks.video || !emsgData.byteLength || !segment.transmuxer) {\n              finishLoading(undefined, id3Frames);\n              return;\n            }\n            workerCallback({\n              action: 'pushMp4Captions',\n              endAction: 'mp4Captions',\n              transmuxer: segment.transmuxer,\n              data: bytesAsUint8Array,\n              timescales: segment.map.timescales,\n              trackIds: [tracks.video.id],\n              callback: message => {\n                // transfer bytes back to us\n                bytes = message.data.buffer;\n                segment.bytes = bytesAsUint8Array = message.data;\n                message.logs.forEach(function (log) {\n                  onTransmuxerLog(merge(log, {\n                    stream: 'mp4CaptionParser'\n                  }));\n                });\n                finishLoading(message.captions, id3Frames);\n              }\n            });\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n  transmuxAndNotify({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  });\n};\nconst decrypt = function ({\n  id,\n  key,\n  encryptedBytes,\n  decryptionWorker\n}, callback) {\n  const decryptionHandler = event => {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      const decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  let keyBytes;\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\nconst decryptSegment = ({\n  decryptionWorker,\n  segment,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker\n  }, decryptedBytes => {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment,\n      bytes: segment.bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\nconst waitForCompletion = ({\n  activeXhrs,\n  decryptionWorker,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let count = 0;\n  let didError = false;\n  return (error, segment) => {\n    if (didError) {\n      return;\n    }\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n    count += 1;\n    if (count === activeXhrs.length) {\n      const segmentFinish = function () {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker,\n            segment,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n        handleSegmentBytes({\n          segment,\n          bytes: segment.bytes,\n          trackInfoFn,\n          timingInfoFn,\n          videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn,\n          id3Fn,\n          captionsFn,\n          isEndOfTimeline,\n          endedTimelineFn,\n          dataFn,\n          doneFn,\n          onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n      segment.endOfAllRequests = Date.now();\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, decryptedBytes => {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, parseError => {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n            segmentFinish();\n          });\n        });\n      }\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\nconst handleLoadEnd = ({\n  loadendState,\n  abortFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n    abortFn();\n    loadendState.calledAbortFn = true;\n  }\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\nconst handleProgress = ({\n  segment,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted) {\n    return;\n  }\n  segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n  if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n    segment.stats.firstBytesReceivedAt = Date.now();\n  }\n  return progressFn(event, segment);\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\nconst mediaSegmentRequest = ({\n  xhr,\n  xhrOptions,\n  decryptionWorker,\n  segment,\n  abortFn,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const activeXhrs = [];\n  const finishProcessingFn = waitForCompletion({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    const objects = [segment.key];\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n    const keyRequestOptions = merge(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n  if (segment.map && !segment.map.bytes) {\n    const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n    if (differentMapKey) {\n      const mapKeyRequestOptions = merge(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n    const initSegmentOptions = merge(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    const initSegmentRequestCallback = handleInitSegmentResponse({\n      segment,\n      finishProcessingFn\n    });\n    const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n  const segmentRequestOptions = merge(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  const segmentRequestCallback = handleSegmentResponse({\n    segment,\n    finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  const loadendState = {};\n  activeXhrs.forEach(activeXhr => {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState,\n      abortFn\n    }));\n  });\n  return () => abortAll(activeXhrs);\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\nconst logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nconst getCodecs = function (media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  const mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\nconst isMaat = (main, media) => {\n  const mediaAttributes = media.attributes || {};\n  return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\nconst isMuxed = (main, media) => {\n  if (!isMaat(main, media)) {\n    return true;\n  }\n  const mediaAttributes = media.attributes || {};\n  const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  for (const groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n  return false;\n};\nconst unwrapCodecList = function (codecList) {\n  const codecs = {};\n  codecList.forEach(({\n    mediaType,\n    type,\n    details\n  }) => {\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n      codecs[mediaType] = null;\n      return;\n    }\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\nconst codecCount = function (codecObj) {\n  let count = 0;\n  if (codecObj.audio) {\n    count++;\n  }\n  if (codecObj.video) {\n    count++;\n  }\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\nconst codecsForPlaylist = function (main, media) {\n  const mediaAttributes = media.attributes || {};\n  const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(main, media) && !codecInfo.audio) {\n    if (!isMuxed(main, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n  return codecInfo;\n};\nconst logFn = logger('PlaylistSelector');\nconst representationToString = function (representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n  const playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\nconst safeGetComputedStyle = function (el, property) {\n  if (!el) {\n    return '';\n  }\n  const result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\nconst stableSort = function (array, sortFn) {\n  const newArray = array.slice();\n  array.sort(function (left, right) {\n    const cmp = sortFn(left, right);\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistBandwidth = function (left, right) {\n  let leftBandwidth;\n  let rightBandwidth;\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistResolution = function (left, right) {\n  let leftWidth;\n  let rightWidth;\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nlet simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n  // If we end up getting called before `main` is available, exit early\n  if (!main) {\n    return;\n  }\n  const options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions\n  };\n  let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(main)) {\n    playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n  let sortedPlaylistReps = playlists.map(playlist => {\n    let bandwidth;\n    const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth,\n      width,\n      height,\n      playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n  const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n  let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n  const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n  stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n  const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  let resolutionPlusOneList;\n  let resolutionPlusOneSmallest;\n  let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  }\n  let leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (playlistController.leastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    const leastPixelDiffList = haveResolution.map(rep => {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, (left, right) => {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n  const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  if (chosenRep && chosenRep.playlist) {\n    let type = 'sortedPlaylistReps';\n    if (leastPixelDiffRep) {\n      type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      type = 'enabledPlaylistReps';\n    }\n    logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n    return chosenRep.playlist;\n  }\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nconst lastBandwidthSelector = function () {\n  const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\nconst movingAverageBandwidthSelector = function (decay) {\n  let average = -1;\n  let lastSystemBandwidth = -1;\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n  return function () {\n    const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n    return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\nconst minRebufferMaxBandwidthSelector = function (settings) {\n  const {\n    main,\n    currentTime,\n    bandwidth,\n    duration,\n    segmentDuration,\n    timeUntilRebuffer,\n    currentTimeline,\n    syncController\n  } = settings; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n  }\n  const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n    const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    const numRequests = syncPoint ? 1 : 2;\n    const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist,\n      rebufferingImpact\n    };\n  });\n  const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n  stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\nconst lowestBitrateCompatibleVariantSelector = function () {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\nconst concatSegments = segmentObj => {\n  let offset = 0;\n  let tempBuffer;\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(segment => {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n  return tempBuffer;\n};\n\n/**\n * @file text-tracks.js\n */\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\nconst createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n    const track = tech.textTracks().getTrackById(instreamId);\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      let label = captionStream;\n      let language = captionStream;\n      let def = false;\n      const captionService = captionServices[instreamId];\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService.default;\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        default: def,\n        label,\n        language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\nconst addCaptionData = function ({\n  inbandTextTracks,\n  captionArray,\n  timestampOffset\n}) {\n  if (!captionArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(caption => {\n    const track = caption.stream; // in CEA 608 captions, video.js/mux.js sends a content array\n    // with positioning data\n\n    if (caption.content) {\n      caption.content.forEach(value => {\n        const cue = new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, value.text);\n        cue.line = value.line;\n        cue.align = 'left';\n        cue.position = value.position;\n        cue.positionAlign = 'line-left';\n        inbandTextTracks[track].addCue(cue);\n      });\n    } else {\n      // otherwise, a text value with combined captions is sent\n      inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n    }\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\nconst deprecateOldCue = function (cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\nconst addMetadata = ({\n  inbandTextTracks,\n  metadataArray,\n  timestampOffset,\n  videoDuration\n}) => {\n  if (!metadataArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  metadataArray.forEach(metadata => {\n    const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    } // If we have no frames, we can't create a cue.\n\n    if (!metadata.frames || !metadata.frames.length) {\n      return;\n    }\n    metadata.frames.forEach(frame => {\n      const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n  const cues = metadataTrack.cues;\n  const cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (let i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n  const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n    const timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach((startTime, idx) => {\n    const cueGroup = cuesGroupedByStartTime[startTime];\n    const finiteDuration = isFinite(videoDuration) ? videoDuration : startTime;\n    const nextTime = Number(sortedStartTimes[idx + 1]) || finiteDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(cue => {\n      cue.endTime = nextTime;\n    });\n  });\n}; // object for mapping daterange attributes\n\nconst dateRangeAttr = {\n  id: 'ID',\n  class: 'CLASS',\n  startDate: 'START-DATE',\n  duration: 'DURATION',\n  endDate: 'END-DATE',\n  endOnNext: 'END-ON-NEXT',\n  plannedDuration: 'PLANNED-DURATION',\n  scte35Out: 'SCTE35-OUT',\n  scte35In: 'SCTE35-IN'\n};\nconst dateRangeKeysToOmit = new Set(['id', 'class', 'startDate', 'duration', 'endDate', 'endOnNext', 'startTime', 'endTime', 'processDateRange']);\n/**\n * Add DateRange metadata text track to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} dateRanges parsed media playlist\n * @private\n */\n\nconst addDateRangeMetadata = ({\n  inbandTextTracks,\n  dateRanges\n}) => {\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  dateRanges.forEach(dateRange => {\n    // we generate multiple cues for each date range with different attributes\n    for (const key of Object.keys(dateRange)) {\n      if (dateRangeKeysToOmit.has(key)) {\n        continue;\n      }\n      const cue = new Cue(dateRange.startTime, dateRange.endTime, '');\n      cue.id = dateRange.id;\n      cue.type = 'com.apple.quicktime.HLS';\n      cue.value = {\n        key: dateRangeAttr[key],\n        data: dateRange[key]\n      };\n      if (key === 'scte35Out' || key === 'scte35In') {\n        cue.value.data = new Uint8Array(cue.value.data.match(/[\\da-f]{2}/gi)).buffer;\n      }\n      metadataTrack.addCue(cue);\n    }\n    dateRange.processDateRange();\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\nconst createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  if (!videojs.browser.IS_ANY_SAFARI) {\n    inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n  }\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\nconst removeCuesFromTrack = function (start, end, track) {\n  let i;\n  let cue;\n  if (!track) {\n    return;\n  }\n  if (!track.cues) {\n    return;\n  }\n  i = track.cues.length;\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\nconst removeDuplicateCuesFromTrack = function (track) {\n  const cues = track.cues;\n  if (!cues) {\n    return;\n  }\n  const uniqueCues = {};\n  for (let i = cues.length - 1; i >= 0; i--) {\n    const cue = cues[i];\n    const cueKey = `${cue.startTime}-${cue.endTime}-${cue.text}`;\n    if (uniqueCues[cueKey]) {\n      track.removeCue(cue);\n    } else {\n      uniqueCues[cueKey] = cue;\n    }\n  }\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\nconst gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n  const currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  let i;\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\nconst updateGopBuffer = (buffer, gops, replace) => {\n  if (!gops.length) {\n    return buffer;\n  }\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n  const start = gops[0].pts;\n  let i = 0;\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\nconst removeGopBuffer = (buffer, start, end, mapping) => {\n  const startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  const endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  const updatedBuffer = buffer.slice();\n  let i = buffer.length;\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n  let j = i + 1;\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\nconst shallowEqual = function (a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n  const akeys = Object.keys(a).sort();\n  const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (let i = 0; i < akeys.length; i++) {\n    const key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\nconst QUOTA_EXCEEDED_ERR = 22;\n\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nconst getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  const timelineSegments = [];\n  let time = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\nconst MIN_BACK_BUFFER = 1; // in ms\n\nconst CHECK_BUFFER_DELAY = 500;\nconst finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\nconst illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\nconst safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n  const maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\nconst segmentInfoString = segmentInfo => {\n  const {\n    startOfSegment,\n    duration,\n    segment,\n    part,\n    playlist: {\n      mediaSequence: seq,\n      id,\n      segments = []\n    },\n    mediaIndex: index,\n    partIndex,\n    timeline\n  } = segmentInfo;\n  const segmentLen = segments.length - 1;\n  let selection = 'mediaIndex/partIndex increment';\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n  if (segmentInfo.independent) {\n    selection += ` with independent ${segmentInfo.independent}`;\n  }\n  const hasPartIndex = typeof partIndex === 'number';\n  const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n};\nconst timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\nconst timestampOffsetForSegment = ({\n  segmentTimeline,\n  currentTimeline,\n  startOfSegment,\n  buffered,\n  overrideCheck\n}) => {\n  // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\nconst shouldWaitForTimelineChange = ({\n  timelineChangeController,\n  currentTimeline,\n  segmentTimeline,\n  loaderType,\n  audioDisabled\n}) => {\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n  if (loaderType === 'audio') {\n    const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n  if (loaderType === 'main' && audioDisabled) {\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nconst mediaDuration = timingInfos => {\n  let maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n    if (!typeTimingInfo) {\n      return;\n    }\n    const {\n      start,\n      end\n    } = typeTimingInfo;\n    let duration;\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n  return maxDuration;\n};\nconst segmentTooLong = ({\n  segmentDuration,\n  maxDuration\n}) => {\n  // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\nconst getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n  const segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n  const targetDuration = segmentInfo.playlist.targetDuration;\n  const isSegmentWayTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  const isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration\n  });\n  const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass SegmentLoader extends videojs.EventTarget {\n  constructor(settings, options = {}) {\n    super(); // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n    this.bandwidth = settings.bandwidth;\n    this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n    this.partIndex = null; // private settings\n\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.vhs_ = settings.vhs;\n    this.loaderType_ = settings.loaderType;\n    this.currentMediaInfo_ = void 0;\n    this.startingMediaInfo_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n    this.sourceType_ = settings.sourceType;\n    this.sourceUpdater_ = settings.sourceUpdater;\n    this.inbandTextTracks_ = settings.inbandTextTracks;\n    this.state_ = 'INIT';\n    this.timelineChangeController_ = settings.timelineChangeController;\n    this.shouldSaveSegmentTimingInfo_ = true;\n    this.parse708captions_ = settings.parse708captions;\n    this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    this.captionServices_ = settings.captionServices;\n    this.exactManifestTimings = settings.exactManifestTimings;\n    this.addMetadataToTextTrack = settings.addMetadataToTextTrack; // private instance variables\n\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.shouldForceTimestampOffsetAfterResync_ = false;\n    this.pendingSegment_ = null;\n    this.xhrOptions_ = null;\n    this.pendingSegments_ = [];\n    this.audioDisabled_ = false;\n    this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = false;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    this.loadQueue_ = [];\n    this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    this.waitingOnRemove_ = false;\n    this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {}; // HLSe playback\n\n    this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    this.keyCache_ = {};\n    this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    this.transmuxer_ = this.createTransmuxer_();\n    this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n    this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    this.mediaSource_.addEventListener('sourceopen', () => {\n      if (!this.isEndOfStream_()) {\n        this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n    this.fetchAtBuffer_ = false;\n    this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n    Object.defineProperty(this, 'state', {\n      get() {\n        return this.state_;\n      },\n      set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(`${this.state_} -> ${newState}`);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n    this.sourceUpdater_.on('ready', () => {\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'main') {\n      this.timelineChangeController_.on('pendingtimelinechange', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'audio') {\n      this.timelineChangeController_.on('timelinechange', () => {\n        if (this.hasEnoughInfoToLoad_()) {\n          this.processLoadQueue_();\n        }\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    }\n  }\n  createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n    this.resetStats_();\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n    this.off();\n  }\n  setAudio(enable) {\n    this.audioDisabled_ = !enable;\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n  abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      return;\n    }\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n  abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  }\n  checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n  error(error) {\n    if (typeof error !== 'undefined') {\n      this.logger_('error occurred:', error);\n      this.error_ = error;\n    }\n    this.pendingSegment_ = null;\n    return this.error_;\n  }\n  endOfStream() {\n    this.ended_ = true;\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    const trackInfo = this.getMediaInfo_();\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return createTimeRanges();\n    }\n    if (this.loaderType_ === 'main') {\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n\n  segmentKey(key, set = false) {\n    if (!key) {\n      return null;\n    }\n    const id = segmentKeyId(key);\n    let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n    const result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n  load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n  playlist(newPlaylist, options = {}) {\n    if (!newPlaylist) {\n      return;\n    }\n    const oldPlaylist = this.playlist_;\n    const segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n    let oldId = null;\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n    this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`);\n    this.syncController_.updateMediaSequenceMap(newPlaylist, this.currentTime_(), this.loaderType_); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // We only want to reset the loader here for LLHLS playback, as resetLoader sets fetchAtBuffer_\n        // to false, resulting in fetching segments at currentTime and causing repeated\n        // same-segment requests on playlist change. This erroneously drives up the playback watcher\n        // stalled segment count, as re-requesting segments at the currentTime or browser cached segments\n        // will not change the buffer.\n        // Reference for LLHLS fixes: https://github.com/videojs/http-streaming/pull/1201\n        const isLLHLS = !newPlaylist.endList && typeof newPlaylist.partTargetDuration === 'number';\n        if (isLLHLS) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          const mediaIndex = this.mediaIndex;\n          this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n  pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n  paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n\n  resetEverything(done) {\n    this.ended_ = false;\n    this.activeInitSegmentId_ = null;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n  resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n  resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.shouldForceTimestampOffsetAfterResync_ = true;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n\n  remove(start, end, done = () => {}, force = false) {\n    // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n    let removesRemaining = 1;\n    const removeFinished = () => {\n      removesRemaining--;\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n    for (const track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n  monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n  monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n    const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n\n  chooseNextRequest_() {\n    const buffered = this.buffered_();\n    const bufferedEnd = lastBufferedEnd(buffered) || 0;\n    const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    const segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_(), this.loaderType_);\n    const next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n      this.logger_(`choose next request. Can not find sync point. Fallback to media Index: ${next.mediaIndex}`);\n    } else if (this.mediaIndex !== null) {\n      const segment = segments[this.mediaIndex];\n      const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      const {\n        segmentIndex,\n        startTime,\n        partIndex\n      } = Playlist.getMediaInfoForTime({\n        exactManifestTimings: this.exactManifestTimings,\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      });\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${bufferedEnd}` : `currentTime ${this.currentTime_()}`;\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = partIndex;\n      this.logger_(`choose next request. Playlist switched and we have a sync point. Media Index: ${next.mediaIndex} `);\n    }\n    const nextSegment = segments[next.mediaIndex];\n    let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // independentSegments applies to every segment in a playlist. If independentSegments appears in a main playlist,\n    // it applies to each segment in each media playlist.\n    // https://datatracker.ietf.org/doc/html/draft-pantos-http-live-streaming-23#section-4.3.5.1\n\n    const hasIndependentSegments = this.vhs_.playlists && this.vhs_.playlists.main && this.vhs_.playlists.main.independentSegments || this.playlist_.independentSegments; // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n    if (!bufferedTime && nextPart && !hasIndependentSegments && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        const lastSegment = segments[next.mediaIndex - 1];\n        const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n    const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n    if (this.shouldForceTimestampOffsetAfterResync_) {\n      this.shouldForceTimestampOffsetAfterResync_ = false;\n      next.forceTimestampOffset = true;\n      this.logger_('choose next request. Force timestamp offset after loader resync');\n    }\n    return this.generateSegmentInfo_(next);\n  }\n  generateSegmentInfo_(options) {\n    const {\n      independent,\n      playlist,\n      mediaIndex,\n      startOfSegment,\n      isSyncRequest,\n      partIndex,\n      forceTimestampOffset,\n      getMediaInfoForTime\n    } = options;\n    const segment = playlist.segments[mediaIndex];\n    const part = typeof partIndex === 'number' && segment.parts[partIndex];\n    const segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest,\n      startOfSegment,\n      // the segment's playlist\n      playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment,\n      part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime,\n      independent\n    };\n    const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck\n    });\n    const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n      // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n\n  timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n\n  earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n    const currentTime = this.currentTime_();\n    const measuredBandwidth = stats.bandwidth;\n    const segmentDuration = this.pendingSegment_.duration;\n    const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n    const switchCandidate = minRebufferMaxBandwidthSelector({\n      main: this.vhs_.playlists.main,\n      currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n    if (!switchCandidate) {\n      return;\n    }\n    const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  }\n  handleAbort_(segmentInfo) {\n    this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n  handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    this.trigger('progress');\n  }\n  handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleCaptions_(simpleSegment, captionData) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    const captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(caption => {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      const captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(trackName => {\n      const {\n        startTime,\n        endTime,\n        captions\n      } = captionTracks[trackName];\n      const inbandTextTracks = this.inbandTextTracks_;\n      this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n      createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks,\n        timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n    this.addMetadataToTextTrack(dispatchType, id3Frames, this.duration_());\n  }\n  processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(fn => fn());\n    this.metadataQueue_.caption.forEach(fn => fn());\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  }\n  processCallQueue_() {\n    const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(fun => fun());\n  }\n  processLoadQueue_() {\n    const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(fun => fun());\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n\n  hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n    const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n    if (\n    // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  }\n  getMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  }\n  getPendingSegmentPlaylist() {\n    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;\n  }\n  hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      const trackInfo = this.getCurrentMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      let firstVideoFrameTimeForData;\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo,\n        firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  }\n  updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n    // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  }\n  getInitSegmentAndUpdateState_({\n    type,\n    initSegment,\n    map,\n    playlist\n  }) {\n    // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n    if (map) {\n      const id = initSegmentId(map);\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n    return null;\n  }\n  handleQuotaExceededError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    const audioBuffered = this.sourceUpdater_.audioBuffered();\n    const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n    const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n    const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n    this.remove(0, timeToRemoveUntil, () => {\n      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n      this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      this.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(() => {\n        this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n        this.quotaExceededErrorRetryTimeout_ = null;\n        this.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  }\n  handleAppendError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    // if there's no error, nothing to do\n    if (!error) {\n      return;\n    }\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo,\n        type,\n        bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(`${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  }\n  appendToSourceBuffer_({\n    segmentInfo,\n    type,\n    initSegment,\n    data,\n    bytes\n  }) {\n    // If this is a re-append, bytes were already created and don't need to be recreated\n    if (!bytes) {\n      const segments = [data];\n      let byteLength = data.byteLength;\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments\n      });\n    }\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo,\n      type,\n      bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n  }\n  handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n    const segment = this.pendingSegment_.segment;\n    const timingInfoProperty = `${type}TimingInfo`;\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  }\n  appendData_(segmentInfo, result) {\n    const {\n      type,\n      data\n    } = result;\n    if (!data || !data.byteLength) {\n      return;\n    }\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n    const initSegment = this.getInitSegmentAndUpdateState_({\n      type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n  loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(() => {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        const options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n        _extends(segmentInfo, this.generateSegmentInfo_(options));\n        this.isPendingTimestampOffset_ = false;\n        this.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  }\n  updateTransmuxerAndRequestSegment_(segmentInfo) {\n    // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n    const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    const isWalkingForward = this.mediaIndex !== null;\n    const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n    // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(`Requesting ${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline,\n      endedTimelineFn: () => {\n        this.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: ({\n        message,\n        level,\n        stream\n      }) => {\n        this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n  trimBackBuffer_(segmentInfo) {\n    const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n\n  createSimplifiedSegmentObj_(segmentInfo) {\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n    return simpleSegment;\n  }\n  saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  }\n  saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  }\n  handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to exclude the current playlist\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  }\n  setTimeMapping_(timeline) {\n    const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  }\n  updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  }\n  shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n    return false;\n  }\n  trueSegmentStart_({\n    currentStart,\n    playlist,\n    mediaIndex,\n    firstVideoFrameTimeForData,\n    currentVideoTimestampOffset,\n    useVideoTimingInfo,\n    videoTimingInfo,\n    audioTimingInfo\n  }) {\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n    const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n    return videoTimingInfo.start;\n  }\n  waitForAppendsToComplete_(segmentInfo) {\n    const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  }\n  checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n    segmentInfo.waitingOnAppends--;\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  }\n  checkForIllegalMediaSwitch(trackInfo) {\n    const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n    return false;\n  }\n  updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null ||\n    // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' ||\n    // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset ||\n    // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n    let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  }\n  getSegmentStartTimeForTimestampOffsetCalculation_({\n    videoTimingInfo,\n    audioTimingInfo,\n    timingInfo\n  }) {\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n    return timingInfo.start;\n  }\n  updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    const trackInfo = this.getMediaInfo_();\n    const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n    // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n  handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n    const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n        return;\n      }\n    }\n    this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n      this.resetEverything();\n      return;\n    }\n    const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n    this.trigger('appended');\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n  recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n  addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n    const segment = segmentInfo.segment;\n    const start = segment.start;\n    const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    const value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      programDateTime: segment.programDateTime,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start,\n      end\n    };\n    const data = JSON.stringify(value);\n    const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  }\n}\nfunction noop() {}\nconst toTitleCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * @file source-updater.js\n */\nconst bufferTypes = ['video', 'audio'];\nconst updating = (type, sourceUpdater) => {\n  const sourceBuffer = sourceUpdater[`${type}Buffer`];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\nconst nextQueueIndexOfType = (type, queue) => {\n  for (let i = 0; i < queue.length; i++) {\n    const queueEntry = queue[i];\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n  return null;\n};\nconst shiftQueue = (type, sourceUpdater) => {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n  let queueIndex = 0;\n  let queueEntry = sourceUpdater.queue[queueIndex];\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n    return;\n  }\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n    return;\n  }\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\nconst cleanupBuffer = (type, sourceUpdater) => {\n  const buffer = sourceUpdater[`${type}Buffer`];\n  const titleType = toTitleCase(type);\n  if (!buffer) {\n    return;\n  }\n  buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n  buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[`${type}Buffer`] = null;\n};\nconst inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\nconst actions = {\n  appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n    try {\n      sourceBuffer.appendBuffer(bytes);\n    } catch (e) {\n      sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n      sourceUpdater.queuePending[type] = null;\n      onError(e);\n    }\n  },\n  remove: (start, end) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n    try {\n      sourceBuffer.remove(start, end);\n    } catch (e) {\n      sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n    }\n  },\n  timestampOffset: offset => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n    sourceBuffer.timestampOffset = offset;\n  },\n  callback: callback => (type, sourceUpdater) => {\n    callback();\n  },\n  endOfStream: error => sourceUpdater => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n    try {\n      sourceUpdater.mediaSource.endOfStream(error);\n    } catch (e) {\n      videojs.log.warn('Failed to call media source endOfStream', e);\n    }\n  },\n  duration: duration => sourceUpdater => {\n    sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n    try {\n      sourceUpdater.mediaSource.duration = duration;\n    } catch (e) {\n      videojs.log.warn('Failed to set media source duration', e);\n    }\n  },\n  abort: () => (type, sourceUpdater) => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n    try {\n      sourceBuffer.abort();\n    } catch (e) {\n      videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n    }\n  },\n  addSourceBuffer: (type, codec) => sourceUpdater => {\n    const titleType = toTitleCase(type);\n    const mime = getMimeForCodec(codec);\n    sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n    const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n    sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = codec;\n    sourceUpdater[`${type}Buffer`] = sourceBuffer;\n  },\n  removeSourceBuffer: type => sourceUpdater => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n    try {\n      sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n    } catch (e) {\n      videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n    }\n  },\n  changeType: codec => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    } // do not update codec if we don't need to.\n\n    if (sourceUpdater.codecs[type] === codec) {\n      return;\n    }\n    sourceUpdater.logger_(`changing ${type}Buffer codec from ${sourceUpdater.codecs[type]} to ${codec}`); // check if change to the provided type is supported\n\n    try {\n      sourceBuffer.changeType(mime);\n      sourceUpdater.codecs[type] = codec;\n    } catch (e) {\n      videojs.log.warn(`Failed to changeType on ${type}Buffer`, e);\n    }\n  }\n};\nconst pushQueue = ({\n  type,\n  sourceUpdater,\n  action,\n  doneFn,\n  name\n}) => {\n  sourceUpdater.queue.push({\n    type,\n    action,\n    doneFn,\n    name\n  });\n  shiftQueue(type, sourceUpdater);\n};\nconst onUpdateend = (type, sourceUpdater) => e => {\n  // Although there should, in theory, be a pending action for any updateend receieved,\n  // there are some actions that may trigger updateend events without set definitions in\n  // the w3c spec. For instance, setting the duration on the media source may trigger\n  // updateend events on source buffers. This does not appear to be in the spec. As such,\n  // if we encounter an updateend without a corresponding pending action from our queue\n  // for that source buffer type, process the next action.\n  if (sourceUpdater.queuePending[type]) {\n    const doneFn = sourceUpdater.queuePending[type].doneFn;\n    sourceUpdater.queuePending[type] = null;\n    if (doneFn) {\n      // if there's an error, report it\n      doneFn(sourceUpdater[`${type}Error_`]);\n    }\n  }\n  shiftQueue(type, sourceUpdater);\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\nclass SourceUpdater extends videojs.EventTarget {\n  constructor(mediaSource) {\n    super();\n    this.mediaSource = mediaSource;\n    this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n    this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n    this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    this.audioTimestampOffset_ = 0;\n    this.videoTimestampOffset_ = 0;\n    this.queue = [];\n    this.queuePending = {\n      audio: null,\n      video: null\n    };\n    this.delayedAudioAppendQueue_ = [];\n    this.videoAppendQueued_ = false;\n    this.codecs = {};\n    this.onVideoUpdateEnd_ = onUpdateend('video', this);\n    this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n    this.onVideoError_ = e => {\n      // used for debugging\n      this.videoError_ = e;\n    };\n    this.onAudioError_ = e => {\n      // used for debugging\n      this.audioError_ = e;\n    };\n    this.createdSourceBuffers_ = false;\n    this.initializedEme_ = false;\n    this.triggeredReady_ = false;\n  }\n  initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  }\n  hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  }\n  hasInitializedAnyEme() {\n    return this.initializedEme_;\n  }\n  ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  }\n  createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  }\n  triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n\n  addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n\n  abort(type) {\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n\n  removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n\n  canRemoveSourceBuffer() {\n    // As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this.\n    return !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  static canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n\n  changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n\n  addOrChangeSourceBuffers(codecs) {\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n    Object.keys(codecs).forEach(type => {\n      const codec = codecs[type];\n      if (!this.hasCreatedSourceBuffers()) {\n        return this.addSourceBuffer(type, codec);\n      }\n      if (this.canChangeType()) {\n        this.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n  appendBuffer(options, doneFn) {\n    const {\n      segmentInfo,\n      type,\n      bytes\n    } = options;\n    this.processedAppend_ = true;\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(`delayed audio append of ${bytes.length} until video append`);\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n    const onError = doneFn;\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn,\n      name: 'appendBuffer'\n    });\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n      const queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(que => {\n        this.appendBuffer.apply(this, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n\n  audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return createTimeRanges();\n    }\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n\n  videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return createTimeRanges();\n    }\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n\n  buffered() {\n    const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n\n  setDuration(duration, doneFn = noop) {\n    // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n\n  endOfStream(error = null, doneFn = noop) {\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeAudio(start, end, done = noop) {\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeVideo(start, end, done = noop) {\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n\n  updating() {\n    // the audio/video source buffer is updating\n    if (updating('audio', this) || updating('video', this)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer &&\n    // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer &&\n    // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    bufferTypes.forEach(type => {\n      this.abort(type);\n      if (this.canRemoveSourceBuffer()) {\n        this.removeSourceBuffer(type);\n      } else {\n        this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n    this.off();\n  }\n}\nconst uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\nconst bufferToHexString = buffer => {\n  const uInt8Buffer = new Uint8Array(buffer);\n  return Array.from(uInt8Buffer).map(byte => byte.toString(16).padStart(2, '0')).join('');\n};\n\n/**\n * @file vtt-segment-loader.js\n */\nconst VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\nclass NoVttJsError extends Error {\n  constructor() {\n    super('Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.');\n  }\n}\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass VTTSegmentLoader extends SegmentLoader {\n  constructor(settings, options = {}) {\n    super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    this.mediaSource_ = null;\n    this.subtitlesTrack_ = null;\n    this.loaderType_ = 'subtitle';\n    this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    this.loadVttJs = settings.loadVttJs; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    this.shouldSaveSegmentTimingInfo_ = false;\n  }\n  createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return createTimeRanges();\n    }\n    const cues = this.subtitlesTrack_.cues;\n    const start = cues[0].startTime;\n    const end = cues[cues.length - 1].startTime;\n    return createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      const combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n  track(track) {\n    if (typeof track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n    this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n\n  remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // see if we need to begin loading immediately\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      const checkTimestampOffset = () => {\n        this.state = 'READY';\n        if (!this.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          this.monitorBuffer_();\n        }\n      };\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n\n  timestampOffsetForSegment_() {\n    return null;\n  }\n  chooseNextRequest_() {\n    return this.skipEmptySegments_(super.chooseNextRequest_());\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n  skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n    return segmentInfo;\n  }\n  stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n      this.stopForError(error);\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    const segment = segmentInfo.segment;\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && typeof this.loadVttJs === 'function') {\n      this.state = 'WAITING_ON_VTTJS'; // should be fine to call multiple times\n      // script will be loaded once but multiple listeners will be added to the queue, which is expected.\n\n      this.loadVttJs().then(() => this.segmentRequestFinished_(error, simpleSegment, result), () => this.stopForError({\n        message: 'Error loading vtt.js'\n      }));\n      return;\n    }\n    segment.requested = true;\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(cue => {\n      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  }\n  handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  }\n  updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @throws NoVttJsError\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n  parseVTTCues_(segmentInfo) {\n    let decoder;\n    let decodeBytesToString = false;\n    if (typeof window$1.WebVTT !== 'function') {\n      // caller is responsible for exception handling.\n      throw new NoVttJsError();\n    }\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n    const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = map => {\n      segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = error => {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n    if (segmentInfo.segment.map) {\n      let mapData = segmentInfo.segment.map.bytes;\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n      parser.parse(mapData);\n    }\n    let segmentData = segmentInfo.bytes;\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n  updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    const segment = segmentInfo.segment;\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n    const {\n      MPEGTS,\n      LOCAL\n    } = segmentInfo.timestampmap;\n    /**\n     * From the spec:\n     * The MPEGTS media timestamp MUST use a 90KHz timescale,\n     * even when non-WebVTT Media Segments use a different timescale.\n     */\n\n    const mpegTsInSeconds = MPEGTS / ONE_SECOND_IN_TS;\n    const diff = mpegTsInSeconds - LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(cue => {\n      const duration = cue.endTime - cue.startTime;\n      const startTime = MPEGTS === 0 ? cue.startTime + diff : this.handleRollover_(cue.startTime + diff, mappingObj.time);\n      cue.startTime = Math.max(startTime, 0);\n      cue.endTime = Math.max(startTime + duration, 0);\n    });\n    if (!playlist.syncInfo) {\n      const firstStart = segmentInfo.cues[0].startTime;\n      const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  }\n  /**\n   * MPEG-TS PES timestamps are limited to 2^33.\n   * Once they reach 2^33, they roll over to 0.\n   * mux.js handles PES timestamp rollover for the following scenarios:\n   * [forward rollover(right)] ->\n   *    PES timestamps monotonically increase, and once they reach 2^33, they roll over to 0\n   * [backward rollover(left)] -->\n   *    we seek back to position before rollover.\n   *\n   * According to the HLS SPEC:\n   * When synchronizing WebVTT with PES timestamps, clients SHOULD account\n   * for cases where the 33-bit PES timestamps have wrapped and the WebVTT\n   * cue times have not.  When the PES timestamp wraps, the WebVTT Segment\n   * SHOULD have a X-TIMESTAMP-MAP header that maps the current WebVTT\n   * time to the new (low valued) PES timestamp.\n   *\n   * So we want to handle rollover here and align VTT Cue start/end time to the player's time.\n   */\n\n  handleRollover_(value, reference) {\n    if (reference === null) {\n      return value;\n    }\n    let valueIn90khz = value * ONE_SECOND_IN_TS;\n    const referenceIn90khz = reference * ONE_SECOND_IN_TS;\n    let offset;\n    if (referenceIn90khz < valueIn90khz) {\n      // - 2^33\n      offset = -8589934592;\n    } else {\n      // + 2^33\n      offset = 8589934592;\n    } // distance(value - reference) > 2^32\n\n    while (Math.abs(valueIn90khz - referenceIn90khz) > 4294967296) {\n      valueIn90khz += offset;\n    }\n    return valueIn90khz / ONE_SECOND_IN_TS;\n  }\n}\n\n/**\n * @file ad-cue-tags.js\n */\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\nconst findAdCue = function (track, mediaTime) {\n  const cues = track.cues;\n  for (let i = 0; i < cues.length; i++) {\n    const cue = cues[i];\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\nconst updateAdCues = function (media, track, offset = 0) {\n  if (!media.segments) {\n    return;\n  }\n  let mediaTime = offset;\n  let cue;\n  for (let i = 0; i < media.segments.length; i++) {\n    const segment = media.segments[i];\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n// synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nconst syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (duration !== Infinity) {\n      const syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}, {\n  name: 'MediaSequence',\n  /**\n   * run media sequence strategy\n   *\n   * @param {SyncController} syncController\n   * @param {Object} playlist\n   * @param {number} duration\n   * @param {number} currentTimeline\n   * @param {number} currentTime\n   * @param {string} type\n   */\n  run: (syncController, playlist, duration, currentTimeline, currentTime, type) => {\n    if (!type) {\n      return null;\n    }\n    const mediaSequenceMap = syncController.getMediaSequenceMap(type);\n    if (!mediaSequenceMap || mediaSequenceMap.size === 0) {\n      return null;\n    }\n    if (playlist.mediaSequence === undefined || !Array.isArray(playlist.segments) || !playlist.segments.length) {\n      return null;\n    }\n    let currentMediaSequence = playlist.mediaSequence;\n    let segmentIndex = 0;\n    for (const segment of playlist.segments) {\n      const range = mediaSequenceMap.get(currentMediaSequence);\n      if (!range) {\n        // unexpected case\n        // we expect this playlist to be the same playlist in the map\n        // just break from the loop and move forward to the next strategy\n        break;\n      }\n      if (currentTime >= range.start && currentTime < range.end) {\n        // we found segment\n        if (Array.isArray(segment.parts) && segment.parts.length) {\n          let currentPartStart = range.start;\n          let partIndex = 0;\n          for (const part of segment.parts) {\n            const start = currentPartStart;\n            const end = start + part.duration;\n            if (currentTime >= start && currentTime < end) {\n              return {\n                time: range.start,\n                segmentIndex,\n                partIndex\n              };\n            }\n            partIndex++;\n            currentPartStart = end;\n          }\n        } // no parts found, return sync point for segment\n\n        return {\n          time: range.start,\n          segmentIndex,\n          partIndex: null\n        };\n      }\n      segmentIndex++;\n      currentMediaSequence++;\n    } // we didn't find any segments for provided current time\n\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n    let syncPoint = null;\n    let lastDistance = null;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n      const segmentTime = segment.dateTimeObject.getTime() / 1000;\n      let start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (let z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n      const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    let lastDistance = null;\n    currentTime = currentTime || 0;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    currentTime = currentTime || 0;\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      let lastDistance = null;\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const discontinuitySync = syncController.discontinuities[discontinuity];\n        if (discontinuitySync) {\n          const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (playlist.syncInfo) {\n      const syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}];\nclass SyncController extends videojs.EventTarget {\n  constructor(options = {}) {\n    super(); // ...for synching across variants\n\n    this.timelines = [];\n    this.discontinuities = [];\n    this.timelineToDatetimeMappings = {};\n    /**\n     * @type {Map<string, Map<number, { start: number, end: number }>>}\n     * @private\n     */\n\n    this.mediaSequenceStorage_ = new Map();\n    this.logger_ = logger('SyncController');\n  }\n  /**\n   * Get media sequence map by type\n   *\n   * @param {string} type - segment loader type\n   * @return {Map<number, { start: number, end: number }> | undefined}\n   */\n\n  getMediaSequenceMap(type) {\n    return this.mediaSequenceStorage_.get(type);\n  }\n  /**\n   * Update Media Sequence Map -> <MediaSequence, Range>\n   *\n   * @param {Object} playlist - parsed playlist\n   * @param {number} currentTime - current player's time\n   * @param {string} type - segment loader type\n   * @return {void}\n   */\n\n  updateMediaSequenceMap(playlist, currentTime, type) {\n    // we should not process this playlist if it does not have mediaSequence or segments\n    if (playlist.mediaSequence === undefined || !Array.isArray(playlist.segments) || !playlist.segments.length) {\n      return;\n    }\n    const currentMap = this.getMediaSequenceMap(type);\n    const result = new Map();\n    let currentMediaSequence = playlist.mediaSequence;\n    let currentBaseTime;\n    if (!currentMap) {\n      // first playlist setup:\n      currentBaseTime = 0;\n    } else if (currentMap.has(playlist.mediaSequence)) {\n      // further playlists setup:\n      currentBaseTime = currentMap.get(playlist.mediaSequence).start;\n    } else {\n      // it seems like we have a gap between playlists, use current time as a fallback:\n      this.logger_(`MediaSequence sync for ${type} segment loader - received a gap between playlists.\nFallback base time to: ${currentTime}.\nReceived media sequence: ${currentMediaSequence}.\nCurrent map: `, currentMap);\n      currentBaseTime = currentTime;\n    }\n    this.logger_(`MediaSequence sync for ${type} segment loader.\nReceived media sequence: ${currentMediaSequence}.\nbase time is ${currentBaseTime}\nCurrent map: `, currentMap);\n    playlist.segments.forEach(segment => {\n      const start = currentBaseTime;\n      const end = start + segment.duration;\n      const range = {\n        start,\n        end\n      };\n      result.set(currentMediaSequence, range);\n      currentMediaSequence++;\n      currentBaseTime = end;\n    });\n    this.mediaSequenceStorage_.set(type, result);\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @param {number} currentTime\n   *        Current player's time\n   * @param {string} type\n   *        Segment loader type\n   * @return {Object}\n   *          A sync-point object\n   */\n\n  getSyncPoint(playlist, duration, currentTimeline, currentTime, type) {\n    // Always use VOD sync point for VOD\n    if (duration !== Infinity) {\n      const vodSyncPointStrategy = syncPointStrategies.find(({\n        name\n      }) => name === 'VOD');\n      return vodSyncPointStrategy.run(this, playlist, duration);\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime, type);\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // If we have exact match just return it instead of finding the nearest distance\n\n    for (const syncPointInfo of syncPoints) {\n      const {\n        syncPoint,\n        strategy\n      } = syncPointInfo;\n      const {\n        segmentIndex,\n        time\n      } = syncPoint;\n      if (segmentIndex < 0) {\n        continue;\n      }\n      const selectedSegment = playlist.segments[segmentIndex];\n      const start = time;\n      const end = start + selectedSegment.duration;\n      this.logger_(`Strategy: ${strategy}. Current time: ${currentTime}. selected segment: ${segmentIndex}. Time: [${start} -> ${end}]}`);\n      if (currentTime >= start && currentTime < end) {\n        this.logger_('Found sync point with exact match: ', syncPoint);\n        return syncPoint;\n      }\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n  getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0, 'main'); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n    const syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @param {number} currentTime\n   *        Current player's time\n   * @param {string} type\n   *        Segment loader type\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n\n  runStrategies_(playlist, duration, currentTimeline, currentTime, type) {\n    const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (let i = 0; i < syncPointStrategies.length; i++) {\n      const strategy = syncPointStrategies[i];\n      const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime, type);\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint\n        });\n      }\n    }\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n\n  selectSyncPoint_(syncPoints, target) {\n    let bestSyncPoint = syncPoints[0].syncPoint;\n    let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    let bestStrategy = syncPoints[0].strategy;\n    for (let i = 1; i < syncPoints.length; i++) {\n      const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n    this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n  saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n      const lastRemovedSegment = oldPlaylist.segments[i];\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n  setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      const firstSegment = playlist.segments[0];\n      const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n\n  saveSegmentTimingInfo({\n    segmentInfo,\n    shouldSaveTimelineMapping\n  }) {\n    const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    const segment = segmentInfo.segment;\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n    const dateTime = segment.dateTimeObject;\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  }\n  timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  }\n  mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n  calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    let mappingObj = this.timelines[segmentInfo.timeline];\n    let start;\n    let end;\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n      }\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n  saveDiscontinuitySyncInfo_(segmentInfo) {\n    const playlist = segmentInfo.playlist;\n    const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        const accuracy = Math.abs(mediaIndexDiff);\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          let time;\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n          this.discontinuities[discontinuity] = {\n            time,\n            accuracy\n          };\n        }\n      }\n    }\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.off();\n  }\n}\n\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\nclass TimelineChangeController extends videojs.EventTarget {\n  constructor() {\n    super();\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n  }\n  clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  }\n  pendingTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n    return this.pendingTimelineChanges_[type];\n  }\n  lastTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n    return this.lastTimelineChanges_[type];\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  }\n}\n\n/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\nconst workerCode = transform(getWorkerString(function () {\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n  const precompute = function () {\n    const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    const encTable = tables[0];\n    const decTable = tables[1];\n    const sbox = encTable[4];\n    const sboxInv = decTable[4];\n    let i;\n    let x;\n    let xInv;\n    const d = [];\n    const th = [];\n    let x2;\n    let x4;\n    let x8;\n    let s;\n    let tEnc;\n    let tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n    return tables;\n  };\n  let aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  class AES {\n    constructor(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      let i;\n      let j;\n      let tmp;\n      const sbox = this._tables[0][4];\n      const decTable = this._tables[1];\n      const keyLen = key.length;\n      let rcon = 1;\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n      const encKey = key.slice(0);\n      const decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n    decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      let a = encrypted0 ^ key[0];\n      let b = encrypted3 ^ key[1];\n      let c = encrypted2 ^ key[2];\n      let d = encrypted1 ^ key[3];\n      let a2;\n      let b2;\n      let c2; // key.length === 2 ?\n\n      const nInnerRounds = key.length / 4 - 2;\n      let i;\n      let kIndex = 4;\n      const table = this._tables[1]; // load up the tables\n\n      const table0 = table[0];\n      const table1 = table[1];\n      const table2 = table[2];\n      const table3 = table[3];\n      const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    }\n  }\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n  class AsyncStream extends Stream {\n    constructor() {\n      super(Stream);\n      this.jobs = [];\n      this.delay = 1;\n      this.timeout_ = null;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n    processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n    push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n  const ntoh = function (word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n  const decrypt = function (encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    const decrypted = new Uint8Array(encrypted.byteLength);\n    const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    let init0;\n    let init1;\n    let init2;\n    let init3;\n    let encrypted0;\n    let encrypted1;\n    let encrypted2;\n    let encrypted3; // iteration variable\n\n    let wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n  class Decrypter {\n    constructor(encrypted, key, initVector, done) {\n      const step = Decrypter.STEP;\n      const encrypted32 = new Int32Array(encrypted.buffer);\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      let i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n    static get STEP() {\n      // 4 * 8000;\n      return 32000;\n    }\n    /**\n     * @private\n     */\n\n    decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        const bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n  self.onmessage = function (event) {\n    const data = event.data;\n    const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\n\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nconst audioTrackKind_ = properties => {\n  let kind = properties.default ? 'main' : 'alternative';\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\nconst stopLoaders = (segmentLoader, mediaType) => {\n  segmentLoader.abort();\n  segmentLoader.pause();\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\nconst startLoaders = (playlistLoader, mediaType) => {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\nconst onGroupChanged = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n  if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup || activeGroup.isMainPlaylist) {\n    // there is no group active or active group is a main playlist and won't change\n    return;\n  }\n  if (!activeGroup.playlistLoader) {\n    if (previousActiveLoader) {\n      // The previous group had a playlist loader but the new active group does not\n      // this means we are switching from demuxed to muxed audio. In this case we want to\n      // do a destructive reset of the main segment loader and not restart the audio\n      // loaders.\n      mainSegmentLoader.resetEverything();\n    }\n    return;\n  } // Non-destructive resync\n\n  segmentLoader.resyncLoader();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onGroupChanging = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  mediaType.lastGroup_ = null;\n  segmentLoader.abort();\n  segmentLoader.pause();\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\nconst onTrackChanged = (type, settings) => () => {\n  const {\n    mainPlaylistLoader,\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n  if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup) {\n    // there is no group active so we do not want to restart loaders\n    return;\n  }\n  if (activeGroup.isMainPlaylist) {\n    // track did not change, do nothing\n    if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n      return;\n    }\n    const pc = settings.vhs.playlistController_;\n    const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n    if (pc.media() === newPlaylist) {\n      return;\n    }\n    mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n    mainPlaylistLoader.pause();\n    mainSegmentLoader.resetEverything();\n    pc.fastQualityChange_(newPlaylist);\n    return;\n  }\n  if (type === 'AUDIO') {\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no\n      // playlist loader for the audio group), we want to do a destructive reset of the\n      // main segment loader and not restart the audio loaders\n      mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n      // it should be stopped\n\n      mainSegmentLoader.resetEverything();\n      return;\n    } // although the segment loader is an audio segment loader, call the setAudio\n    // function to ensure it is prepared to re-append the init segment (or handle other\n    // config changes)\n\n    segmentLoader.setAudio(true);\n    mainSegmentLoader.setAudio(false);\n  }\n  if (previousActiveLoader === activeGroup.playlistLoader) {\n    // Nothing has actually changed. This can happen because track change events can fire\n    // multiple times for a \"single\" change. One for enabling the new active track, and\n    // one for disabling the track that was active\n    startLoaders(activeGroup.playlistLoader, mediaType);\n    return;\n  }\n  if (segmentLoader.track) {\n    // For WebVTT, set the new text track in the segmentloader\n    segmentLoader.track(activeTrack);\n  } // destructive reset\n\n  segmentLoader.resetEverything();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: mediaType\n      },\n      excludePlaylist\n    } = settings; // switch back to default audio track\n\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.activeGroup();\n    const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n    const defaultTrack = mediaType.tracks[id];\n    if (activeTrack === defaultTrack) {\n      // Default track encountered an error. All we can do now is exclude the current\n      // rendition and hope another will switch audio groups\n      excludePlaylist({\n        error: {\n          message: 'Problem encountered loading the default audio track.'\n        }\n      });\n      return;\n    }\n    videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n    for (const trackId in mediaType.tracks) {\n      mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n    }\n    mediaType.onTrackChanged();\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n    const track = mediaType.activeTrack();\n    if (track) {\n      track.mode = 'disabled';\n    }\n    mediaType.onTrackChanged();\n  }\n};\nconst setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: (type, playlistLoader, settings) => {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: (type, playlistLoader, settings) => {\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nconst initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': (type, settings) => {\n    const {\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks,\n          logger_\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n      if (audioOnlyMain) {\n        mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n      }\n    }\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (audioOnlyMain) {\n          logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n          properties.isMainPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': (type, settings) => {\n    const {\n      tech,\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        if (!vhs.options_.useForcedSubtitles && mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n          if (!playlists.length) {\n            return;\n          }\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader(\n          // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': (type, settings) => {\n    const {\n      tech,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      }\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          default: properties.default && properties.autoselect\n        };\n        if (captionServices[newProps.instreamId]) {\n          newProps = merge(newProps, captionServices[newProps.instreamId]);\n        }\n        if (newProps.default === undefined) {\n          delete newProps.default;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n        groups[groupId].push(merge({\n          id: variantLabel\n        }, properties));\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            default: newProps.default,\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\nconst groupMatch = (list, media) => {\n  for (let i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nconst activeGroup = (type, settings) => track => {\n  const {\n    mainPlaylistLoader,\n    mediaTypes: {\n      [type]: {\n        groups\n      }\n    }\n  } = settings;\n  const media = mainPlaylistLoader.media();\n  if (!media) {\n    return null;\n  }\n  let variants = null; // set to variants to main media active group\n\n  if (media.attributes[type]) {\n    variants = groups[media.attributes[type]];\n  }\n  const groupKeys = Object.keys(groups);\n  if (!variants) {\n    // find the mainPlaylistLoader media\n    // that is in a media group if we are dealing\n    // with audio only\n    if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n      for (let i = 0; i < groupKeys.length; i++) {\n        const groupPropertyList = groups[groupKeys[i]];\n        if (groupMatch(groupPropertyList, media)) {\n          variants = groupPropertyList;\n          break;\n        }\n      } // use the main group if it exists\n    } else if (groups.main) {\n      variants = groups.main; // only one group, use that one\n    } else if (groupKeys.length === 1) {\n      variants = groups[groupKeys[0]];\n    }\n  }\n  if (typeof track === 'undefined') {\n    return variants;\n  }\n  if (track === null || !variants) {\n    // An active track was specified so a corresponding group is expected. track === null\n    // means no track is currently active so there is no corresponding group\n    return null;\n  }\n  return variants.filter(props => props.id === track.id)[0] || null;\n};\nconst activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].enabled) {\n        return tracks[id];\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n        return tracks[id];\n      }\n    }\n    return null;\n  }\n};\nconst getActiveGroup = (type, {\n  mediaTypes\n}) => () => {\n  const activeTrack_ = mediaTypes[type].activeTrack();\n  if (!activeTrack_) {\n    return null;\n  }\n  return mediaTypes[type].activeGroup(activeTrack_);\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nconst setupMediaGroups = settings => {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    initialize[type](type, settings);\n  });\n  const {\n    mediaTypes,\n    mainPlaylistLoader,\n    tech,\n    vhs,\n    segmentLoaders: {\n      ['AUDIO']: audioSegmentLoader,\n      main: mainSegmentLoader\n    }\n  } = settings; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(type => {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  const audioGroup = mediaTypes.AUDIO.activeGroup();\n  if (audioGroup) {\n    const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n  mainPlaylistLoader.on('mediachange', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n  });\n  mainPlaylistLoader.on('mediachanging', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n  }); // custom audio track change event handler for usage event\n\n  const onAudioTrackChanged = () => {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n  };\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', () => {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n  for (const id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\nconst createMediaTypes = () => {\n  const mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(`MediaGroups[${type}]`)\n    };\n  });\n  return mediaTypes;\n};\n\n/**\n * A utility class for setting properties and maintaining the state of the content steering manifest.\n *\n * Content Steering manifest format:\n * VERSION: number (required) currently only version 1 is supported.\n * TTL: number in seconds (optional) until the next content steering manifest reload.\n * RELOAD-URI: string (optional) uri to fetch the next content steering manifest.\n * SERVICE-LOCATION-PRIORITY or PATHWAY-PRIORITY a non empty array of unique string values.\n * PATHWAY-CLONES: array (optional) (HLS only) pathway clone objects to copy from other playlists.\n */\n\nclass SteeringManifest {\n  constructor() {\n    this.priority_ = [];\n    this.pathwayClones_ = new Map();\n  }\n  set version(number) {\n    // Only version 1 is currently supported for both DASH and HLS.\n    if (number === 1) {\n      this.version_ = number;\n    }\n  }\n  set ttl(seconds) {\n    // TTL = time-to-live, default = 300 seconds.\n    this.ttl_ = seconds || 300;\n  }\n  set reloadUri(uri) {\n    if (uri) {\n      // reload URI can be relative to the previous reloadUri.\n      this.reloadUri_ = resolveUrl(this.reloadUri_, uri);\n    }\n  }\n  set priority(array) {\n    // priority must be non-empty and unique values.\n    if (array && array.length) {\n      this.priority_ = array;\n    }\n  }\n  set pathwayClones(array) {\n    // pathwayClones must be non-empty.\n    if (array && array.length) {\n      this.pathwayClones_ = new Map(array.map(clone => [clone.ID, clone]));\n    }\n  }\n  get version() {\n    return this.version_;\n  }\n  get ttl() {\n    return this.ttl_;\n  }\n  get reloadUri() {\n    return this.reloadUri_;\n  }\n  get priority() {\n    return this.priority_;\n  }\n  get pathwayClones() {\n    return this.pathwayClones_;\n  }\n}\n/**\n * This class represents a content steering manifest and associated state. See both HLS and DASH specifications.\n * HLS: https://developer.apple.com/streaming/HLSContentSteeringSpecification.pdf and\n * https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/ section 4.4.6.6.\n * DASH: https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {function} xhr for making a network request from the browser.\n * @param {function} bandwidth for fetching the current bandwidth from the main segment loader.\n */\n\nclass ContentSteeringController extends videojs.EventTarget {\n  constructor(xhr, bandwidth) {\n    super();\n    this.currentPathway = null;\n    this.defaultPathway = null;\n    this.queryBeforeStart = false;\n    this.availablePathways_ = new Set();\n    this.steeringManifest = new SteeringManifest();\n    this.proxyServerUrl_ = null;\n    this.manifestType_ = null;\n    this.ttlTimeout_ = null;\n    this.request_ = null;\n    this.currentPathwayClones = new Map();\n    this.nextPathwayClones = new Map();\n    this.excludedSteeringManifestURLs = new Set();\n    this.logger_ = logger('Content Steering');\n    this.xhr_ = xhr;\n    this.getBandwidth_ = bandwidth;\n  }\n  /**\n   * Assigns the content steering tag properties to the steering controller\n   *\n   * @param {string} baseUrl the baseURL from the main manifest for resolving the steering manifest url\n   * @param {Object} steeringTag the content steering tag from the main manifest\n   */\n\n  assignTagProperties(baseUrl, steeringTag) {\n    this.manifestType_ = steeringTag.serverUri ? 'HLS' : 'DASH'; // serverUri is HLS serverURL is DASH\n\n    const steeringUri = steeringTag.serverUri || steeringTag.serverURL;\n    if (!steeringUri) {\n      this.logger_(`steering manifest URL is ${steeringUri}, cannot request steering manifest.`);\n      this.trigger('error');\n      return;\n    } // Content steering manifests can be encoded as a data URI. We can decode, parse and return early if that's the case.\n\n    if (steeringUri.startsWith('data:')) {\n      this.decodeDataUriManifest_(steeringUri.substring(steeringUri.indexOf(',') + 1));\n      return;\n    } // reloadUri is the resolution of the main manifest URL and steering URL.\n\n    this.steeringManifest.reloadUri = resolveUrl(baseUrl, steeringUri); // pathwayId is HLS defaultServiceLocation is DASH\n\n    this.defaultPathway = steeringTag.pathwayId || steeringTag.defaultServiceLocation; // currently only DASH supports the following properties on <ContentSteering> tags.\n\n    this.queryBeforeStart = steeringTag.queryBeforeStart;\n    this.proxyServerUrl_ = steeringTag.proxyServerURL; // trigger a steering event if we have a pathway from the content steering tag.\n    // this tells VHS which segment pathway to start with.\n    // If queryBeforeStart is true we need to wait for the steering manifest response.\n\n    if (this.defaultPathway && !this.queryBeforeStart) {\n      this.trigger('content-steering');\n    }\n  }\n  /**\n   * Requests the content steering manifest and parse the response. This should only be called after\n   * assignTagProperties was called with a content steering tag.\n   *\n   * @param {string} initialUri The optional uri to make the request with.\n   *    If set, the request should be made with exactly what is passed in this variable.\n   *    This scenario should only happen once on initalization.\n   */\n\n  requestSteeringManifest(initial) {\n    const reloadUri = this.steeringManifest.reloadUri;\n    if (!reloadUri) {\n      return;\n    } // We currently don't support passing MPD query parameters directly to the content steering URL as this requires\n    // ExtUrlQueryInfo tag support. See the DASH content steering spec section 8.1.\n    // This request URI accounts for manifest URIs that have been excluded.\n\n    const uri = initial ? reloadUri : this.getRequestURI(reloadUri); // If there are no valid manifest URIs, we should stop content steering.\n\n    if (!uri) {\n      this.logger_('No valid content steering manifest URIs. Stopping content steering.');\n      this.trigger('error');\n      this.dispose();\n      return;\n    }\n    this.request_ = this.xhr_({\n      uri\n    }, (error, errorInfo) => {\n      if (error) {\n        // If the client receives HTTP 410 Gone in response to a manifest request,\n        // it MUST NOT issue another request for that URI for the remainder of the\n        // playback session. It MAY continue to use the most-recently obtained set\n        // of Pathways.\n        if (errorInfo.status === 410) {\n          this.logger_(`manifest request 410 ${error}.`);\n          this.logger_(`There will be no more content steering requests to ${uri} this session.`);\n          this.excludedSteeringManifestURLs.add(uri);\n          return;\n        } // If the client receives HTTP 429 Too Many Requests with a Retry-After\n        // header in response to a manifest request, it SHOULD wait until the time\n        // specified by the Retry-After header to reissue the request.\n\n        if (errorInfo.status === 429) {\n          const retrySeconds = errorInfo.responseHeaders['retry-after'];\n          this.logger_(`manifest request 429 ${error}.`);\n          this.logger_(`content steering will retry in ${retrySeconds} seconds.`);\n          this.startTTLTimeout_(parseInt(retrySeconds, 10));\n          return;\n        } // If the Steering Manifest cannot be loaded and parsed correctly, the\n        // client SHOULD continue to use the previous values and attempt to reload\n        // it after waiting for the previously-specified TTL (or 5 minutes if\n        // none).\n\n        this.logger_(`manifest failed to load ${error}.`);\n        this.startTTLTimeout_();\n        return;\n      }\n      const steeringManifestJson = JSON.parse(this.request_.responseText);\n      this.assignSteeringProperties_(steeringManifestJson);\n      this.startTTLTimeout_();\n    });\n  }\n  /**\n   * Set the proxy server URL and add the steering manifest url as a URI encoded parameter.\n   *\n   * @param {string} steeringUrl the steering manifest url\n   * @return the steering manifest url to a proxy server with all parameters set\n   */\n\n  setProxyServerUrl_(steeringUrl) {\n    const steeringUrlObject = new window$1.URL(steeringUrl);\n    const proxyServerUrlObject = new window$1.URL(this.proxyServerUrl_);\n    proxyServerUrlObject.searchParams.set('url', encodeURI(steeringUrlObject.toString()));\n    return this.setSteeringParams_(proxyServerUrlObject.toString());\n  }\n  /**\n   * Decodes and parses the data uri encoded steering manifest\n   *\n   * @param {string} dataUri the data uri to be decoded and parsed.\n   */\n\n  decodeDataUriManifest_(dataUri) {\n    const steeringManifestJson = JSON.parse(window$1.atob(dataUri));\n    this.assignSteeringProperties_(steeringManifestJson);\n  }\n  /**\n   * Set the HLS or DASH content steering manifest request query parameters. For example:\n   * _HLS_pathway=\"<CURRENT-PATHWAY-ID>\" and _HLS_throughput=<THROUGHPUT>\n   * _DASH_pathway and _DASH_throughput\n   *\n   * @param {string} uri to add content steering server parameters to.\n   * @return a new uri as a string with the added steering query parameters.\n   */\n\n  setSteeringParams_(url) {\n    const urlObject = new window$1.URL(url);\n    const path = this.getPathway();\n    const networkThroughput = this.getBandwidth_();\n    if (path) {\n      const pathwayKey = `_${this.manifestType_}_pathway`;\n      urlObject.searchParams.set(pathwayKey, path);\n    }\n    if (networkThroughput) {\n      const throughputKey = `_${this.manifestType_}_throughput`;\n      urlObject.searchParams.set(throughputKey, networkThroughput);\n    }\n    return urlObject.toString();\n  }\n  /**\n   * Assigns the current steering manifest properties and to the SteeringManifest object\n   *\n   * @param {Object} steeringJson the raw JSON steering manifest\n   */\n\n  assignSteeringProperties_(steeringJson) {\n    this.steeringManifest.version = steeringJson.VERSION;\n    if (!this.steeringManifest.version) {\n      this.logger_(`manifest version is ${steeringJson.VERSION}, which is not supported.`);\n      this.trigger('error');\n      return;\n    }\n    this.steeringManifest.ttl = steeringJson.TTL;\n    this.steeringManifest.reloadUri = steeringJson['RELOAD-URI']; // HLS = PATHWAY-PRIORITY required. DASH = SERVICE-LOCATION-PRIORITY optional\n\n    this.steeringManifest.priority = steeringJson['PATHWAY-PRIORITY'] || steeringJson['SERVICE-LOCATION-PRIORITY']; // Pathway clones to be created/updated in HLS.\n    // See section 7.2 https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n\n    this.steeringManifest.pathwayClones = steeringJson['PATHWAY-CLONES'];\n    this.nextPathwayClones = this.steeringManifest.pathwayClones; // 1. apply first pathway from the array.\n    // 2. if first pathway doesn't exist in manifest, try next pathway.\n    //    a. if all pathways are exhausted, ignore the steering manifest priority.\n    // 3. if segments fail from an established pathway, try all variants/renditions, then exclude the failed pathway.\n    //    a. exclude a pathway for a minimum of the last TTL duration. Meaning, from the next steering response,\n    //       the excluded pathway will be ignored.\n    //       See excludePathway usage in excludePlaylist().\n    // If there are no available pathways, we need to stop content steering.\n\n    if (!this.availablePathways_.size) {\n      this.logger_('There are no available pathways for content steering. Ending content steering.');\n      this.trigger('error');\n      this.dispose();\n    }\n    const chooseNextPathway = pathwaysByPriority => {\n      for (const path of pathwaysByPriority) {\n        if (this.availablePathways_.has(path)) {\n          return path;\n        }\n      } // If no pathway matches, ignore the manifest and choose the first available.\n\n      return [...this.availablePathways_][0];\n    };\n    const nextPathway = chooseNextPathway(this.steeringManifest.priority);\n    if (this.currentPathway !== nextPathway) {\n      this.currentPathway = nextPathway;\n      this.trigger('content-steering');\n    }\n  }\n  /**\n   * Returns the pathway to use for steering decisions\n   *\n   * @return {string} returns the current pathway or the default\n   */\n\n  getPathway() {\n    return this.currentPathway || this.defaultPathway;\n  }\n  /**\n   * Chooses the manifest request URI based on proxy URIs and server URLs.\n   * Also accounts for exclusion on certain manifest URIs.\n   *\n   * @param {string} reloadUri the base uri before parameters\n   *\n   * @return {string} the final URI for the request to the manifest server.\n   */\n\n  getRequestURI(reloadUri) {\n    if (!reloadUri) {\n      return null;\n    }\n    const isExcluded = uri => this.excludedSteeringManifestURLs.has(uri);\n    if (this.proxyServerUrl_) {\n      const proxyURI = this.setProxyServerUrl_(reloadUri);\n      if (!isExcluded(proxyURI)) {\n        return proxyURI;\n      }\n    }\n    const steeringURI = this.setSteeringParams_(reloadUri);\n    if (!isExcluded(steeringURI)) {\n      return steeringURI;\n    } // Return nothing if all valid manifest URIs are excluded.\n\n    return null;\n  }\n  /**\n   * Start the timeout for re-requesting the steering manifest at the TTL interval.\n   *\n   * @param {number} ttl time in seconds of the timeout. Defaults to the\n   *        ttl interval in the steering manifest\n   */\n\n  startTTLTimeout_(ttl = this.steeringManifest.ttl) {\n    // 300 (5 minutes) is the default value.\n    const ttlMS = ttl * 1000;\n    this.ttlTimeout_ = window$1.setTimeout(() => {\n      this.requestSteeringManifest();\n    }, ttlMS);\n  }\n  /**\n   * Clear the TTL timeout if necessary.\n   */\n\n  clearTTLTimeout_() {\n    window$1.clearTimeout(this.ttlTimeout_);\n    this.ttlTimeout_ = null;\n  }\n  /**\n   * aborts any current steering xhr and sets the current request object to null\n   */\n\n  abort() {\n    if (this.request_) {\n      this.request_.abort();\n    }\n    this.request_ = null;\n  }\n  /**\n   * aborts steering requests clears the ttl timeout and resets all properties.\n   */\n\n  dispose() {\n    this.off('content-steering');\n    this.off('error');\n    this.abort();\n    this.clearTTLTimeout_();\n    this.currentPathway = null;\n    this.defaultPathway = null;\n    this.queryBeforeStart = null;\n    this.proxyServerUrl_ = null;\n    this.manifestType_ = null;\n    this.ttlTimeout_ = null;\n    this.request_ = null;\n    this.excludedSteeringManifestURLs = new Set();\n    this.availablePathways_ = new Set();\n    this.steeringManifest = new SteeringManifest();\n  }\n  /**\n   * adds a pathway to the available pathways set\n   *\n   * @param {string} pathway the pathway string to add\n   */\n\n  addAvailablePathway(pathway) {\n    if (pathway) {\n      this.availablePathways_.add(pathway);\n    }\n  }\n  /**\n   * Clears all pathways from the available pathways set\n   */\n\n  clearAvailablePathways() {\n    this.availablePathways_.clear();\n  }\n  /**\n   * Removes a pathway from the available pathways set.\n   */\n\n  excludePathway(pathway) {\n    return this.availablePathways_.delete(pathway);\n  }\n  /**\n   * Checks the refreshed DASH manifest content steering tag for changes.\n   *\n   * @param {string} baseURL new steering tag on DASH manifest refresh\n   * @param {Object} newTag the new tag to check for changes\n   * @return a true or false whether the new tag has different values\n   */\n\n  didDASHTagChange(baseURL, newTag) {\n    return !newTag && this.steeringManifest.reloadUri || newTag && (resolveUrl(baseURL, newTag.serverURL) !== this.steeringManifest.reloadUri || newTag.defaultServiceLocation !== this.defaultPathway || newTag.queryBeforeStart !== this.queryBeforeStart || newTag.proxyServerURL !== this.proxyServerUrl_);\n  }\n  getAvailablePathways() {\n    return this.availablePathways_;\n  }\n}\n\n/**\n * @file playlist-controller.js\n */\nconst ABORT_EARLY_EXCLUSION_SECONDS = 10;\nlet Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nconst loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\nconst sumLoaderStat = function (stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\nconst shouldSwitchToMedia = function ({\n  currentPlaylist,\n  buffered,\n  currentTime,\n  nextPlaylist,\n  bufferLowWaterLine,\n  bufferHighWaterLine,\n  duration,\n  bufferBasedABR,\n  log\n}) {\n  // we have no other playlist to switch to\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n  const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n  if (!currentPlaylist) {\n    log(`${sharedLogLine} as current playlist is not set`);\n    return true;\n  } // no need to switch if playlist is the same\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n  const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n      return false;\n    }\n    log(`${sharedLogLine} as current playlist is live`);\n    return true;\n  }\n  const forwardBuffer = timeAheadOf(buffered, currentTime);\n  const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n    return true;\n  }\n  const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n    if (bufferBasedABR) {\n      logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n    }\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n  if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n    if (bufferBasedABR) {\n      logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n    }\n    log(logLine);\n    return true;\n  }\n  log(`not ${sharedLogLine} as no switching criteria met`);\n  return false;\n};\n/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */\n\nclass PlaylistController extends videojs.EventTarget {\n  constructor(options) {\n    super();\n    const {\n      src,\n      withCredentials,\n      tech,\n      bandwidth,\n      externVhs,\n      useCueTags,\n      playlistExclusionDuration,\n      enableLowInitialPlaylist,\n      sourceType,\n      cacheEncryptionKeys,\n      bufferBasedABR,\n      leastPixelDiffSelector,\n      captionServices\n    } = options;\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n    let {\n      maxPlaylistRetries\n    } = options;\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n    Vhs$1 = externVhs;\n    this.bufferBasedABR = Boolean(bufferBasedABR);\n    this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.vhs_ = tech.vhs;\n    this.sourceType_ = sourceType;\n    this.useCueTags_ = useCueTags;\n    this.playlistExclusionDuration = playlistExclusionDuration;\n    this.maxPlaylistRetries = maxPlaylistRetries;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n    this.requestOptions_ = {\n      withCredentials,\n      maxPlaylistRetries,\n      timeout: null\n    };\n    this.on('error', this.pauseLoading);\n    this.mediaTypes_ = createMediaTypes();\n    this.mediaSource = new window$1.MediaSource();\n    this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n    this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n    this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n    this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n    this.seekable_ = createTimeRanges();\n    this.hasPlayed_ = false;\n    this.syncController_ = new SyncController(options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    this.decrypter_ = new Decrypter();\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n    this.inbandTextTracks_ = {};\n    this.timelineChangeController_ = new TimelineChangeController();\n    this.keyStatusMap_ = new Map();\n    const segmentLoaderSettings = {\n      vhs: this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: () => this.seekable(),\n      seeking: () => this.tech_.seeking(),\n      duration: () => this.duration(),\n      hasPlayed: () => this.hasPlayed_,\n      goalBufferLength: () => this.goalBufferLength(),\n      bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_,\n      sourceType: this.sourceType_,\n      inbandTextTracks: this.inbandTextTracks_,\n      cacheEncryptionKeys,\n      sourceUpdater: this.sourceUpdater_,\n      timelineChangeController: this.timelineChangeController_,\n      exactManifestTimings: options.exactManifestTimings,\n      addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n      addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n    })) : new PlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n      addDateRangesToTextTrack: this.addDateRangesToTextTrack_.bind(this)\n    }));\n    this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n    this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: this.tech_.featuresNativeTextTracks,\n      loadVttJs: () => new Promise((resolve, reject) => {\n        function onLoad() {\n          tech.off('vttjserror', onError);\n          resolve();\n        }\n        function onError() {\n          tech.off('vttjsloaded', onLoad);\n          reject();\n        }\n        tech.one('vttjsloaded', onLoad);\n        tech.one('vttjserror', onError); // safe to call multiple times, script will be loaded only once:\n\n        tech.addWebVttScript_();\n      })\n    }), options);\n    const getBandwidth = () => {\n      return this.mainSegmentLoader_.bandwidth;\n    };\n    this.contentSteeringController_ = new ContentSteeringController(this.vhs_.xhr, getBandwidth);\n    this.setupSegmentLoaderListeners_();\n    if (this.bufferBasedABR) {\n      this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n      this.tech_.on('pause', () => this.stopABRTimer_());\n      this.tech_.on('play', () => this.startABRTimer_());\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n    loaderStats.forEach(stat => {\n      this[stat + '_'] = sumLoaderStat.bind(this, stat);\n    });\n    this.logger_ = logger('pc');\n    this.triggeredFmp4Usage = false;\n    if (this.tech_.preload() === 'none') {\n      this.loadOnPlay_ = () => {\n        this.loadOnPlay_ = null;\n        this.mainPlaylistLoader_.load();\n      };\n      this.tech_.one('play', this.loadOnPlay_);\n    } else {\n      this.mainPlaylistLoader_.load();\n    }\n    this.timeToLoadedData__ = -1;\n    this.mainAppendsToLoadedData__ = -1;\n    this.audioAppendsToLoadedData__ = -1;\n    const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    this.tech_.one(event, () => {\n      const timeToLoadedDataStart = Date.now();\n      this.tech_.one('loadeddata', () => {\n        this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n        this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n  }\n  mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  }\n  audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  }\n  appendsToLoadedData_() {\n    const main = this.mainAppendsToLoadedData_();\n    const audio = this.audioAppendsToLoadedData_();\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n    return main + audio;\n  }\n  timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n\n  checkABR_(reason = 'abr') {\n    const nextPlaylist = this.selectPlaylist();\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  }\n  switchMedia_(playlist, cause, delay) {\n    const oldMedia = this.media();\n    const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    const newId = playlist && (playlist.id || playlist.uri);\n    if (oldId && oldId !== newId) {\n      this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-rendition-change-${cause}`\n      });\n    }\n    this.mainPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * A function that ensures we switch our playlists inside of `mediaTypes`\n   * to match the current `serviceLocation` provided by the contentSteering controller.\n   * We want to check media types of `AUDIO`, `SUBTITLES`, and `CLOSED-CAPTIONS`.\n   *\n   * This should only be called on a DASH playback scenario while using content steering.\n   * This is necessary due to differences in how media in HLS manifests are generally tied to\n   * a video playlist, where in DASH that is not always the case.\n   */\n\n  switchMediaForDASHContentSteering_() {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n      const mediaType = this.mediaTypes_[type];\n      const activeGroup = mediaType ? mediaType.activeGroup() : null;\n      const pathway = this.contentSteeringController_.getPathway();\n      if (activeGroup && pathway) {\n        // activeGroup can be an array or a single group\n        const mediaPlaylists = activeGroup.length ? activeGroup[0].playlists : activeGroup.playlists;\n        const dashMediaPlaylists = mediaPlaylists.filter(p => p.attributes.serviceLocation === pathway); // Switch the current active playlist to the correct CDN\n\n        if (dashMediaPlaylists.length) {\n          this.mediaTypes_[type].activePlaylistLoader.media(dashMediaPlaylists[0]);\n        }\n      }\n    });\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  startABRTimer_() {\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(() => this.checkABR_(), 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n\n  getAudioTrackPlaylists_() {\n    const main = this.main();\n    const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in main\n    // playlist array, use that or an empty array.\n\n    if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n    const AUDIO = main.mediaGroups.AUDIO;\n    const groupKeys = Object.keys(AUDIO);\n    let track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n      for (const label in defaultGroup) {\n        if (defaultGroup[label].default) {\n          track = {\n            label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n    const playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (const group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        const properties = AUDIO[group][track.label];\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (main.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (let i = 0; i < main.playlists.length; i++) {\n            const playlist = main.playlists[i];\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n    return playlists;\n  }\n  /**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  setupMainPlaylistLoaderListeners_() {\n    this.mainPlaylistLoader_.on('loadedmetadata', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n      if (media.endList && this.tech_.preload() !== 'none') {\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n      }\n      setupMediaGroups({\n        sourceType: this.sourceType_,\n        segmentLoaders: {\n          AUDIO: this.audioSegmentLoader_,\n          SUBTITLES: this.subtitleSegmentLoader_,\n          main: this.mainSegmentLoader_\n        },\n        tech: this.tech_,\n        requestOptions: this.requestOptions_,\n        mainPlaylistLoader: this.mainPlaylistLoader_,\n        vhs: this.vhs_,\n        main: this.main(),\n        mediaTypes: this.mediaTypes_,\n        excludePlaylist: this.excludePlaylist.bind(this)\n      });\n      this.triggerPresenceUsage_(this.main(), media);\n      this.setupFirstPlay();\n      if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        this.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n          this.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.mainPlaylistLoader_.on('loadedplaylist', () => {\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      let updatedPlaylist = this.mainPlaylistLoader_.media();\n      if (!updatedPlaylist) {\n        // Add content steering listeners on first load and init.\n        this.attachContentSteeringListeners_();\n        this.initContentSteeringController_(); // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n\n        this.excludeUnsupportedVariants_();\n        let selectedMedia;\n        if (this.enableLowInitialPlaylist) {\n          selectedMedia = this.selectInitialPlaylist();\n        }\n        if (!selectedMedia) {\n          selectedMedia = this.selectPlaylist();\n        }\n        if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n        this.initialMedia_ = selectedMedia;\n        this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n        const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n        if (!haveJsonSource) {\n          return;\n        }\n        updatedPlaylist = this.initialMedia_;\n      }\n      this.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.mainPlaylistLoader_.on('error', () => {\n      const error = this.mainPlaylistLoader_.error;\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainPlaylistLoader_.on('mediachanging', () => {\n      this.mainSegmentLoader_.abort();\n      this.mainSegmentLoader_.pause();\n    });\n    this.mainPlaylistLoader_.on('mediachange', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      }\n      if (this.sourceType_ === 'dash') {\n        // we don't want to re-request the same hls playlist right after it was changed\n        this.mainPlaylistLoader_.load();\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n      this.mainSegmentLoader_.pause();\n      this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n      if (this.waitingForFastQualityPlaylistReceived_) {\n        this.runFastQualitySwitch_();\n      } else {\n        this.mainSegmentLoader_.load();\n      }\n      this.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.mainPlaylistLoader_.on('playlistunchanged', () => {\n      const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n      const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // exclude it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        this.excludePlaylist({\n          error: {\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }\n        }); // useful for monitoring QoS\n\n        this.tech_.trigger('playliststuck');\n      }\n    });\n    this.mainPlaylistLoader_.on('renditiondisabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n    });\n    this.mainPlaylistLoader_.on('renditionenabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n\n  handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    if (this.waitingForFastQualityPlaylistReceived_) {\n      this.runFastQualitySwitch_();\n    }\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n  triggerPresenceUsage_(main, media) {\n    const mediaGroups = main.mediaGroups || {};\n    let defaultDemuxed = true;\n    const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n    for (const mediaGroup in mediaGroups.AUDIO) {\n      for (const label in mediaGroups.AUDIO[mediaGroup]) {\n        const properties = mediaGroups.AUDIO[mediaGroup][label];\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n    }\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n    }\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n    }\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n    }\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n    }\n  }\n  shouldSwitchToMedia_(nextPlaylist) {\n    const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n    const currentTime = this.tech_.currentTime();\n    const bufferLowWaterLine = this.bufferLowWaterLine();\n    const bufferHighWaterLine = this.bufferHighWaterLine();\n    const buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered,\n      currentTime,\n      currentPlaylist,\n      nextPlaylist,\n      bufferLowWaterLine,\n      bufferHighWaterLine,\n      duration: this.duration(),\n      bufferBasedABR: this.bufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n  setupSegmentLoaderListeners_() {\n    this.mainSegmentLoader_.on('bandwidthupdate', () => {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      this.checkABR_('bandwidthupdate');\n      this.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', () => {\n      if (this.bufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        this.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.bufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', () => {\n        this.trigger('progress');\n      });\n    }\n    this.mainSegmentLoader_.on('error', () => {\n      const error = this.mainSegmentLoader_.error();\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainSegmentLoader_.on('appenderror', () => {\n      this.error = this.mainSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', () => {\n      this.error = this.audioSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', () => {\n      this.logger_('main segment loader ended');\n      this.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', event => {\n      // never try to early abort with the new ABR algorithm\n      if (this.bufferBasedABR) {\n        return;\n      }\n      this.delegateLoaders_('all', ['abort']);\n      this.excludePlaylist({\n        error: {\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n        },\n        playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n      });\n    });\n    const updateCodecs = () => {\n      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return this.tryToCreateSourceBuffers_();\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', () => {\n      this.logger_('audioSegmentLoader ended');\n      this.onEndOfStream();\n    });\n  }\n  mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n  load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n\n  fastQualityChange_(media = this.selectPlaylist()) {\n    if (media && media === this.mainPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n    this.switchMedia_(media, 'fast-quality'); // we would like to avoid race condition when we call fastQuality,\n    // reset everything and start loading segments from prev segments instead of new because new playlist is not received yet\n\n    this.waitingForFastQualityPlaylistReceived_ = true;\n  }\n  runFastQualitySwitch_() {\n    this.waitingForFastQualityPlaylistReceived_ = false; // Delete all buffered data to allow an immediate quality switch, then seek to give\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n    // ahead was roughly the minimum that will accomplish this across a variety of content\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.resetEverything(() => {\n      this.tech_.setCurrentTime(this.tech_.currentTime());\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n\n  play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n    if (this.hasPlayed_) {\n      this.load();\n    }\n    const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n  setupFirstPlay() {\n    const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream and/or has a start time\n\n    if (!media.endList || media.start) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the\n        // live or start point\n        return false;\n      }\n      const seekableEnd = seekable.end(0);\n      let startPoint = seekableEnd;\n      if (media.start) {\n        const offset = media.start.timeOffset;\n        if (offset < 0) {\n          startPoint = Math.max(seekableEnd + offset, seekable.start(0));\n        } else {\n          startPoint = Math.min(seekableEnd, offset);\n        }\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(startPoint);\n    }\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, e => {});\n      }\n    }\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n    const cues = this.inbandTextTracks_.metadataTrack_.cues;\n    if (!cues || !cues.length) {\n      return;\n    }\n    const duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n\n  handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n  onEndOfStream() {\n    let isEndOfStream = this.mainSegmentLoader_.ended_;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n    if (!isEndOfStream) {\n      return;\n    }\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n  stuckAtPlaylistEnd_(playlist) {\n    const seekable = this.seekable();\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n    const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n    const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */\n\n  excludePlaylist({\n    playlistToExclude = this.mainPlaylistLoader_.media(),\n    error = {},\n    playlistExclusionDuration\n  }) {\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // excluded instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n    playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the main OR while we were disposing of the tech\n\n    if (!playlistToExclude) {\n      this.error = error;\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n      return;\n    }\n    playlistToExclude.playlistErrors_++;\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const enabledPlaylists = playlists.filter(isEnabled);\n    const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n    // forever\n\n    if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n      videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.mainPlaylistLoader_.load(isFinalRendition);\n    }\n    if (isFinalRendition) {\n      // If we're content steering, try other pathways.\n      if (this.main().contentSteering) {\n        const pathway = this.pathwayAttribute_(playlistToExclude); // Ignore at least 1 steering manifest refresh.\n\n        const reIncludeDelay = this.contentSteeringController_.steeringManifest.ttl * 1000;\n        this.contentSteeringController_.excludePathway(pathway);\n        this.excludeThenChangePathway_();\n        setTimeout(() => {\n          this.contentSteeringController_.addAvailablePathway(pathway);\n        }, reIncludeDelay);\n        return;\n      } // Since we're on the final non-excluded playlist, and we're about to exclude\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // exclusion list. This allows other playlists to be attempted in case any have been\n      // fixed.\n\n      let reincluded = false;\n      playlists.forEach(playlist => {\n        // skip current playlist which is about to be excluded\n        if (playlist === playlistToExclude) {\n          return;\n        }\n        const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Exclude this playlist\n\n    let excludeUntil;\n    if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n    }\n    playlistToExclude.excludeUntil = excludeUntil;\n    if (error.reason) {\n      playlistToExclude.lastExcludeReason_ = error.reason;\n    }\n    this.tech_.trigger('excludeplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-excluded'\n    }); // TODO: only load a new playlist if we're excluding the current playlist\n    // If this function was called with a playlist that's not the current active playlist\n    // (e.g., media().id !== playlistToExclude.id),\n    // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n    const nextPlaylist = this.selectPlaylist();\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n    const logFn = error.internal ? this.logger_ : videojs.log.warn;\n    const errorMessage = error.message ? ' ' + error.message : '';\n    logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n    if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n\n  pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n\n  delegateLoaders_(filter, fnNames) {\n    const loaders = [];\n    const dontFilterPlaylist = filter === 'all';\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.mainPlaylistLoader_);\n    }\n    const mediaTypes = [];\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n    mediaTypes.forEach(mediaType => {\n      const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(name => {\n      const loader = this[`${name}SegmentLoader_`];\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(loader => fnNames.forEach(fnName => {\n      if (typeof loader[fnName] === 'function') {\n        loader[fnName]();\n      }\n    }));\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n  setCurrentTime(currentTime) {\n    const buffered = findRange(this.tech_.buffered(), currentTime);\n    if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n    if (!this.mainPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.resetEverything();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.pause();\n      this.audioSegmentLoader_.resetEverything();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.pause();\n      this.subtitleSegmentLoader_.resetEverything();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n  duration() {\n    if (!this.mainPlaylistLoader_) {\n      return 0;\n    }\n    const media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n  seekable() {\n    return this.seekable_;\n  }\n  onSyncInfoUpdate_() {\n    let audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.mainPlaylistLoader_) {\n      return;\n    }\n    let media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      return;\n    }\n    let expired = this.syncController_.getExpiredTime(media, this.duration());\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n    const main = this.mainPlaylistLoader_.main;\n    const mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n    if (mainSeekable.length === 0) {\n      return;\n    }\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n      if (expired === null) {\n        return;\n      }\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n    let oldEnd;\n    let oldStart;\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n    this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n\n  updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n    if (isLive) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n      return;\n    }\n    const buffered = this.tech_.buffered();\n    let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.mainPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    this.contentSteeringController_.dispose();\n    this.keyStatusMap_.clear();\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      const groups = this.mediaTypes_[type].groups;\n      for (const id in groups) {\n        groups[id].forEach(group => {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */\n\n  main() {\n    return this.mainPlaylistLoader_.main;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n  media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.mainPlaylistLoader_.media() || this.initialMedia_;\n  }\n  areMediaTypesKnown_() {\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n    return true;\n  }\n  getCodecsOrExclude_() {\n    const media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    };\n    const playlist = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media(); // set \"main\" media equal to video\n\n    media.video = media.main;\n    const playlistCodecs = codecsForPlaylist(this.main(), playlist);\n    const codecs = {};\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n    if (media.main.isMuxed) {\n      codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n    }\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n    if (!codecs.audio && !codecs.video) {\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          message: 'Could not determine codecs for playlist.'\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n    const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    const unsupportedCodecs = {};\n    let unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n    if (usingAudioLoader && unsupportedAudio && playlist.attributes.AUDIO) {\n      const audioGroup = playlist.attributes.AUDIO;\n      this.main().playlists.forEach(variant => {\n        const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n        if (variantAudioGroup === audioGroup && variant !== playlist) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n    } // if we have any unsupported codecs exclude this playlist.\n\n    if (Object.keys(unsupportedCodecs).length) {\n      const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n        if (acc) {\n          acc += ', ';\n        }\n        acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n        return acc;\n      }, '') + '.';\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          internal: true,\n          message\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      const switchMessages = [];\n      ['video', 'audio'].forEach(type => {\n        const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n        }\n      });\n      if (switchMessages.length) {\n        this.excludePlaylist({\n          playlistToExclude: playlist,\n          error: {\n            message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n            internal: true\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n\n  tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n    const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n\n  excludeUnsupportedVariants_() {\n    const playlists = this.main().playlists;\n    const ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n      ids.push(variant.id);\n      const codecs = codecsForPlaylist(this.main, variant);\n      const unsupported = [];\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(`audio codec ${codecs.audio}`);\n      }\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(`video codec ${codecs.video}`);\n      }\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(`text codec ${codecs.text}`);\n      }\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n      }\n    });\n  }\n  /**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n  excludeIncompatibleVariants_(codecString) {\n    const ids = [];\n    const playlists = this.main().playlists;\n    const codecs = unwrapCodecList(parseCodecs(codecString));\n    const codecCount_ = codecCount(codecs);\n    const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n      ids.push(variant.id);\n      const exclusionReasons = []; // get codecs from the playlist for this variant\n\n      const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n      const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n      if (variantCodecCount !== codecCount_) {\n        exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n      if (!this.sourceUpdater_.canChangeType()) {\n        const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n        } // the audio codec cannot change\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n        }\n      }\n      if (exclusionReasons.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n      }\n    });\n  }\n  updateAdCues_(media) {\n    let offset = 0;\n    const seekable = this.seekable();\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n\n  goalBufferLength() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.GOAL_BUFFER_LENGTH;\n    const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n\n  bufferLowWaterLine() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.BUFFER_LOW_WATER_LINE;\n    const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n  }\n  bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  }\n  addDateRangesToTextTrack_(dateRanges) {\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, 'com.apple.streaming', this.tech_);\n    addDateRangeMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      dateRanges\n    });\n  }\n  addMetadataToTextTrack(dispatchType, metadataArray, videoDuration) {\n    const timestampOffset = this.sourceUpdater_.videoBuffer ? this.sourceUpdater_.videoTimestampOffset() : this.sourceUpdater_.audioTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray,\n      timestampOffset,\n      videoDuration\n    });\n  }\n  /**\n   * Utility for getting the pathway or service location from an HLS or DASH playlist.\n   *\n   * @param {Object} playlist for getting pathway from.\n   * @return the pathway attribute of a playlist\n   */\n\n  pathwayAttribute_(playlist) {\n    return playlist.attributes['PATHWAY-ID'] || playlist.attributes.serviceLocation;\n  }\n  /**\n   * Initialize available pathways and apply the tag properties.\n   */\n\n  initContentSteeringController_() {\n    const main = this.main();\n    if (!main.contentSteering) {\n      return;\n    }\n    for (const playlist of main.playlists) {\n      this.contentSteeringController_.addAvailablePathway(this.pathwayAttribute_(playlist));\n    }\n    this.contentSteeringController_.assignTagProperties(main.uri, main.contentSteering); // request the steering manifest immediately if queryBeforeStart is set.\n\n    if (this.contentSteeringController_.queryBeforeStart) {\n      // When queryBeforeStart is true, initial request should omit steering parameters.\n      this.contentSteeringController_.requestSteeringManifest(true);\n      return;\n    } // otherwise start content steering after playback starts\n\n    this.tech_.one('canplay', () => {\n      this.contentSteeringController_.requestSteeringManifest();\n    });\n  }\n  /**\n   * Reset the content steering controller and re-init.\n   */\n\n  resetContentSteeringController_() {\n    this.contentSteeringController_.clearAvailablePathways();\n    this.contentSteeringController_.dispose();\n    this.initContentSteeringController_();\n  }\n  /**\n   * Attaches the listeners for content steering.\n   */\n\n  attachContentSteeringListeners_() {\n    this.contentSteeringController_.on('content-steering', this.excludeThenChangePathway_.bind(this));\n    if (this.sourceType_ === 'dash') {\n      this.mainPlaylistLoader_.on('loadedplaylist', () => {\n        const main = this.main(); // check if steering tag or pathways changed.\n\n        const didDashTagChange = this.contentSteeringController_.didDASHTagChange(main.uri, main.contentSteering);\n        const didPathwaysChange = () => {\n          const availablePathways = this.contentSteeringController_.getAvailablePathways();\n          const newPathways = [];\n          for (const playlist of main.playlists) {\n            const serviceLocation = playlist.attributes.serviceLocation;\n            if (serviceLocation) {\n              newPathways.push(serviceLocation);\n              if (!availablePathways.has(serviceLocation)) {\n                return true;\n              }\n            }\n          } // If we have no new serviceLocations and previously had availablePathways\n\n          if (!newPathways.length && availablePathways.size) {\n            return true;\n          }\n          return false;\n        };\n        if (didDashTagChange || didPathwaysChange()) {\n          this.resetContentSteeringController_();\n        }\n      });\n    }\n  }\n  /**\n   * Simple exclude and change playlist logic for content steering.\n   */\n\n  excludeThenChangePathway_() {\n    const currentPathway = this.contentSteeringController_.getPathway();\n    if (!currentPathway) {\n      return;\n    }\n    this.handlePathwayClones_();\n    const main = this.main();\n    const playlists = main.playlists;\n    const ids = new Set();\n    let didEnablePlaylists = false;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key];\n      const pathwayId = this.pathwayAttribute_(variant);\n      const differentPathwayId = pathwayId && currentPathway !== pathwayId;\n      const steeringExclusion = variant.excludeUntil === Infinity && variant.lastExcludeReason_ === 'content-steering';\n      if (steeringExclusion && !differentPathwayId) {\n        delete variant.excludeUntil;\n        delete variant.lastExcludeReason_;\n        didEnablePlaylists = true;\n      }\n      const noExcludeUntil = !variant.excludeUntil && variant.excludeUntil !== Infinity;\n      const shouldExclude = !ids.has(variant.id) && differentPathwayId && noExcludeUntil;\n      if (!shouldExclude) {\n        return;\n      }\n      ids.add(variant.id);\n      variant.excludeUntil = Infinity;\n      variant.lastExcludeReason_ = 'content-steering'; // TODO: kind of spammy, maybe move this.\n\n      this.logger_(`excluding ${variant.id} for ${variant.lastExcludeReason_}`);\n    });\n    if (this.contentSteeringController_.manifestType_ === 'DASH') {\n      Object.keys(this.mediaTypes_).forEach(key => {\n        const type = this.mediaTypes_[key];\n        if (type.activePlaylistLoader) {\n          const currentPlaylist = type.activePlaylistLoader.media_; // Check if the current media playlist matches the current CDN\n\n          if (currentPlaylist && currentPlaylist.attributes.serviceLocation !== currentPathway) {\n            didEnablePlaylists = true;\n          }\n        }\n      });\n    }\n    if (didEnablePlaylists) {\n      this.changeSegmentPathway_();\n    }\n  }\n  /**\n   * Add, update, or delete playlists and media groups for\n   * the pathway clones for HLS Content Steering.\n   *\n   * See https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n   *\n   * NOTE: Pathway cloning does not currently support the `PER_VARIANT_URIS` and\n   * `PER_RENDITION_URIS` as we do not handle `STABLE-VARIANT-ID` or\n   * `STABLE-RENDITION-ID` values.\n   */\n\n  handlePathwayClones_() {\n    const main = this.main();\n    const playlists = main.playlists;\n    const currentPathwayClones = this.contentSteeringController_.currentPathwayClones;\n    const nextPathwayClones = this.contentSteeringController_.nextPathwayClones;\n    const hasClones = currentPathwayClones && currentPathwayClones.size || nextPathwayClones && nextPathwayClones.size;\n    if (!hasClones) {\n      return;\n    }\n    for (const [id, clone] of currentPathwayClones.entries()) {\n      const newClone = nextPathwayClones.get(id); // Delete the old pathway clone.\n\n      if (!newClone) {\n        this.mainPlaylistLoader_.updateOrDeleteClone(clone);\n        this.contentSteeringController_.excludePathway(id);\n      }\n    }\n    for (const [id, clone] of nextPathwayClones.entries()) {\n      const oldClone = currentPathwayClones.get(id); // Create a new pathway if it is a new pathway clone object.\n\n      if (!oldClone) {\n        const playlistsToClone = playlists.filter(p => {\n          return p.attributes['PATHWAY-ID'] === clone['BASE-ID'];\n        });\n        playlistsToClone.forEach(p => {\n          this.mainPlaylistLoader_.addClonePathway(clone, p);\n        });\n        this.contentSteeringController_.addAvailablePathway(id);\n        continue;\n      } // There have not been changes to the pathway clone object, so skip.\n\n      if (this.equalPathwayClones_(oldClone, clone)) {\n        continue;\n      } // Update a preexisting cloned pathway.\n      // True is set for the update flag.\n\n      this.mainPlaylistLoader_.updateOrDeleteClone(clone, true);\n      this.contentSteeringController_.addAvailablePathway(id);\n    } // Deep copy contents of next to current pathways.\n\n    this.contentSteeringController_.currentPathwayClones = new Map(JSON.parse(JSON.stringify([...nextPathwayClones])));\n  }\n  /**\n   * Determines whether two pathway clone objects are equivalent.\n   *\n   * @param {Object} a The first pathway clone object.\n   * @param {Object} b The second pathway clone object.\n   * @return {boolean} True if the pathway clone objects are equal, false otherwise.\n   */\n\n  equalPathwayClones_(a, b) {\n    if (a['BASE-ID'] !== b['BASE-ID'] || a.ID !== b.ID || a['URI-REPLACEMENT'].HOST !== b['URI-REPLACEMENT'].HOST) {\n      return false;\n    }\n    const aParams = a['URI-REPLACEMENT'].PARAMS;\n    const bParams = b['URI-REPLACEMENT'].PARAMS; // We need to iterate through both lists of params because one could be\n    // missing a parameter that the other has.\n\n    for (const p in aParams) {\n      if (aParams[p] !== bParams[p]) {\n        return false;\n      }\n    }\n    for (const p in bParams) {\n      if (aParams[p] !== bParams[p]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Changes the current playlists for audio, video and subtitles after a new pathway\n   * is chosen from content steering.\n   */\n\n  changeSegmentPathway_() {\n    const nextPlaylist = this.selectPlaylist();\n    this.pauseLoading(); // Switch audio and text track playlists if necessary in DASH\n\n    if (this.contentSteeringController_.manifestType_ === 'DASH') {\n      this.switchMediaForDASHContentSteering_();\n    }\n    this.switchMedia_(nextPlaylist, 'content-steering');\n  }\n  /**\n   * Iterates through playlists and check their keyId set and compare with the\n   * keyStatusMap, only enable playlists that have a usable key. If the playlist\n   * has no keyId leave it enabled by default.\n   */\n\n  excludeNonUsablePlaylistsByKeyId_() {\n    if (!this.mainPlaylistLoader_ || !this.mainPlaylistLoader_.main) {\n      return;\n    }\n    let nonUsableKeyStatusCount = 0;\n    const NON_USABLE = 'non-usable';\n    this.mainPlaylistLoader_.main.playlists.forEach(playlist => {\n      const keyIdSet = this.mainPlaylistLoader_.getKeyIdSet(playlist); // If the playlist doesn't have keyIDs lets not exclude it.\n\n      if (!keyIdSet || !keyIdSet.size) {\n        return;\n      }\n      keyIdSet.forEach(key => {\n        const USABLE = 'usable';\n        const hasUsableKeyStatus = this.keyStatusMap_.has(key) && this.keyStatusMap_.get(key) === USABLE;\n        const nonUsableExclusion = playlist.lastExcludeReason_ === NON_USABLE && playlist.excludeUntil === Infinity;\n        if (!hasUsableKeyStatus) {\n          // Only exclude playlists that haven't already been excluded as non-usable.\n          if (playlist.excludeUntil !== Infinity && playlist.lastExcludeReason_ !== NON_USABLE) {\n            playlist.excludeUntil = Infinity;\n            playlist.lastExcludeReason_ = NON_USABLE;\n            this.logger_(`excluding playlist ${playlist.id} because the key ID ${key} doesn't exist in the keyStatusMap or is not ${USABLE}`);\n          } // count all nonUsableKeyStatus\n\n          nonUsableKeyStatusCount++;\n        } else if (hasUsableKeyStatus && nonUsableExclusion) {\n          delete playlist.excludeUntil;\n          delete playlist.lastExcludeReason_;\n          this.logger_(`enabling playlist ${playlist.id} because key ID ${key} is ${USABLE}`);\n        }\n      });\n    }); // If for whatever reason every playlist has a non usable key status. Lets try re-including the SD renditions as a failsafe.\n\n    if (nonUsableKeyStatusCount >= this.mainPlaylistLoader_.main.playlists.length) {\n      this.mainPlaylistLoader_.main.playlists.forEach(playlist => {\n        const isNonHD = playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height < 720;\n        const excludedForNonUsableKey = playlist.excludeUntil === Infinity && playlist.lastExcludeReason_ === NON_USABLE;\n        if (isNonHD && excludedForNonUsableKey) {\n          // Only delete the excludeUntil so we don't try and re-exclude these playlists.\n          delete playlist.excludeUntil;\n          videojs.log.warn(`enabling non-HD playlist ${playlist.id} because all playlists were excluded due to ${NON_USABLE} key IDs`);\n        }\n      });\n    }\n  }\n  /**\n   * Adds a keystatus to the keystatus map, tries to convert to string if necessary.\n   *\n   * @param {any} keyId the keyId to add a status for\n   * @param {string} status the status of the keyId\n   */\n\n  addKeyStatus_(keyId, status) {\n    const isString = typeof keyId === 'string';\n    const keyIdHexString = isString ? keyId : bufferToHexString(keyId);\n    const formattedKeyIdString = keyIdHexString.slice(0, 32).toLowerCase();\n    this.logger_(`KeyStatus '${status}' with key ID ${formattedKeyIdString} added to the keyStatusMap`);\n    this.keyStatusMap_.set(formattedKeyIdString, status);\n  }\n  /**\n   * Utility function for adding key status to the keyStatusMap and filtering usable encrypted playlists.\n   *\n   * @param {any} keyId the keyId from the keystatuschange event\n   * @param {string} status the key status string\n   */\n\n  updatePlaylistByKeyStatus(keyId, status) {\n    this.addKeyStatus_(keyId, status);\n    if (!this.waitingForFastQualityPlaylistReceived_) {\n      this.excludeNonUsableThenChangePlaylist_();\n    } // Listen to loadedplaylist with a single listener and check for new contentProtection elements when a playlist is updated.\n\n    this.mainPlaylistLoader_.off('loadedplaylist', this.excludeNonUsableThenChangePlaylist_.bind(this));\n    this.mainPlaylistLoader_.on('loadedplaylist', this.excludeNonUsableThenChangePlaylist_.bind(this));\n  }\n  excludeNonUsableThenChangePlaylist_() {\n    this.excludeNonUsablePlaylistsByKeyId_();\n    this.fastQualityChange_();\n  }\n}\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\nconst enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n  const playlist = loader.main.playlists[playlistID];\n  const incompatible = isIncompatible(playlist);\n  const currentlyEnabled = isEnabled(playlist);\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n  if (enable) {\n    delete playlist.disabled;\n  } else {\n    playlist.disabled = true;\n  }\n  if (enable !== currentlyEnabled && !incompatible) {\n    // Ensure the outside world knows about our changes\n    changePlaylistFn();\n    if (enable) {\n      loader.trigger('renditionenabled');\n    } else {\n      loader.trigger('renditiondisabled');\n    }\n  }\n  return enable;\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nclass Representation {\n  constructor(vhsHandler, playlist, id) {\n    const {\n      playlistController_: pc\n    } = vhsHandler;\n    const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      const resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n      this.frameRate = playlist.attributes['FRAME-RATE'];\n    }\n    this.codecs = codecsForPlaylist(pc.main(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the main playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  }\n}\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\nconst renditionSelectionMixin = function (vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = () => {\n    const main = vhsHandler.playlistController_.main();\n    const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n    if (!playlists) {\n      return [];\n    }\n    return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\nconst timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nclass PlaybackWatcher {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  constructor(options) {\n    this.playlistController_ = options.playlistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n    const playHandler = () => this.monitorCurrentTime_();\n    const canPlayHandler = () => this.monitorCurrentTime_();\n    const waitingHandler = () => this.techWaiting_();\n    const cancelTimerHandler = () => this.resetTimeUpdate_();\n    const pc = this.playlistController_;\n    const loaderTypes = ['main', 'subtitle', 'audio'];\n    const loaderChecks = {};\n    loaderTypes.forEach(type => {\n      loaderChecks[type] = {\n        reset: () => this.resetSegmentDownloads_(type),\n        updateend: () => this.checkSegmentDownloads_(type)\n      };\n      pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    const setSeekingHandlers = fn => {\n      ['main', 'audio'].forEach(type => {\n        pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n      });\n    };\n    this.seekingAppendCheck_ = () => {\n      if (this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n    this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n    this.watchForBadSeeking_ = () => {\n      this.clearSeekingAppendCheck_();\n      setSeekingHandlers('on');\n    };\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = () => {\n      this.clearSeekingAppendCheck_();\n      this.logger_('dispose');\n      this.tech_.off('waiting', waitingHandler);\n      this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      this.tech_.off('canplay', canPlayHandler);\n      this.tech_.off('play', playHandler);\n      this.tech_.off('seeking', this.watchForBadSeeking_);\n      this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n      loaderTypes.forEach(type => {\n        pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n        pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n        this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n      this.resetTimeUpdate_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  monitorCurrentTime_() {\n    this.checkCurrentTime_();\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n\n  resetSegmentDownloads_(type) {\n    const loader = this.playlistController_[`${type}SegmentLoader_`];\n    if (this[`${type}StalledDownloads_`] > 0) {\n      this.logger_(`resetting possible stalled download count for ${type} loader`);\n    }\n    this[`${type}StalledDownloads_`] = 0;\n    this[`${type}Buffered_`] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n\n  checkSegmentDownloads_(type) {\n    const pc = this.playlistController_;\n    const loader = pc[`${type}SegmentLoader_`];\n    const buffered = loader.buffered_();\n    const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n    this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n    this[`${type}StalledDownloads_`]++;\n    this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[`${type}StalledDownloads_`] < 10) {\n      return;\n    }\n    this.logger_(`${type} loader stalled download exclusion`);\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: `vhs-${type}-download-exclusion`\n    });\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n    pc.excludePlaylist({\n      error: {\n        message: `Excessive ${type} segment downloading detected.`\n      },\n      playlistExclusionDuration: Infinity\n    });\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n  checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */\n\n  resetTimeUpdate_() {\n    this.consecutiveUpdates = 0;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n  fixesBadSeeks_() {\n    const seeking = this.tech_.seeking();\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    let seekTo;\n    if (isAfterSeekableRange) {\n      const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + (\n      // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    const sourceUpdater = this.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    const media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    const bufferedToCheck = [audioBuffered, videoBuffered];\n    for (let i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n      const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n    const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n  waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n  techWaiting_() {\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    if (this.tech_.seeking()) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const livePoint = seekable.end(seekable.length - 1);\n      this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      return true;\n    }\n    const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime\n    });\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      return true;\n    }\n    const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n      this.resetTimeUpdate_();\n      this.skipTheGap_(currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n    return false;\n  }\n  afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n    let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    const isLive = !playlist.endList;\n    const isLLHLS = typeof playlist.partTargetDuration === 'number';\n    if (isLive && (isLLHLS || allowSeeksWithinUnsafeLiveWindow)) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n    return false;\n  }\n  beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n    return false;\n  }\n  videoUnderflow_({\n    videoBuffered,\n    audioBuffered,\n    currentTime\n  }) {\n    // audio only content will not have video underflow :)\n    if (!videoBuffered) {\n      return;\n    }\n    let gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      const videoRange = findRange(videoBuffered, currentTime);\n      const audioRange = findRange(audioBuffered, currentTime);\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n    } else {\n      const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n    if (gap) {\n      this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n  skipTheGap_(scheduledCurrentTime) {\n    const buffered = this.tech_.buffered();\n    const currentTime = this.tech_.currentTime();\n    const nextRange = findNextRange(buffered, currentTime);\n    this.resetTimeUpdate_();\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n  }\n  gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    const gaps = findGaps(buffered);\n    for (let i = 0; i < gaps.length; i++) {\n      const start = gaps.start(i);\n      const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start,\n          end\n        };\n      }\n    }\n    return null;\n  }\n}\nconst defaultOptions = {\n  errorInterval: 30,\n  getSource(next) {\n    const tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    const sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nconst initPlugin = function (player, options) {\n  let lastCalled = 0;\n  let seekTo = 0;\n  const localOptions = merge(defaultOptions, options);\n  player.ready(() => {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  const loadedMetadataHandler = function () {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n  const setSource = function (sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n  const errorHandler = function () {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      return;\n    }\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n  const cleanupEvents = function () {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n  const reinitPlugin = function (newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\nconst reloadSourceOnError = function (options) {\n  initPlugin(this, options);\n};\nvar version$4 = \"3.10.0\";\nvar version$3 = \"7.0.2\";\nvar version$2 = \"1.3.0\";\nvar version$1 = \"7.1.0\";\nvar version = \"4.0.1\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the VHS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/main/LICENSE\n */\nconst Vhs = {\n  PlaylistLoader,\n  Playlist,\n  utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector,\n  movingAverageBandwidthSelector,\n  comparePlaylistBandwidth,\n  comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(prop => {\n  Object.defineProperty(Vhs, prop, {\n    get() {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      return Config[prop];\n    },\n    set(value) {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n        return;\n      }\n      Config[prop] = value;\n    }\n  });\n});\nconst LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nconst handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n  const newPlaylist = playlistLoader.media();\n  let selectedIndex = -1;\n  for (let i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\nconst handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n  vhs.representations().forEach(rep => {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n  let codecs = {};\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n  const videoContentType = getMimeForCodec(codecs.video);\n  const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  const keySystemContentTypes = {};\n  for (const keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n  return merge(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\nconst getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n  return playlists.reduce((keySystemsArr, playlist) => {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n    const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n      const keySystemOptions = playlist.contentProtection[keySystem];\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n      return keySystemsObj;\n    }, {});\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\nconst waitForKeySessionCreation = ({\n  player,\n  sourceKeySystems,\n  audioMedia,\n  mainPlaylists\n}) => {\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n  const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  const initializationFinishedPromises = [];\n  const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but\n  // the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(keySystemsOptions => {\n    keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise((resolve, reject) => {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, err => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([\n  // If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises),\n  // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\nconst setupEmeOptions = ({\n  player,\n  sourceKeySystems,\n  media,\n  audioMedia\n}) => {\n  const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n  if (!sourceOptions) {\n    return false;\n  }\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n  return true;\n};\nconst getVhsLocalStorage = () => {\n  if (!window$1.localStorage) {\n    return null;\n  }\n  const storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (!storedObject) {\n    return null;\n  }\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\nconst updateVhsLocalStorage = options => {\n  if (!window$1.localStorage) {\n    return false;\n  }\n  let objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? merge(objectToStore, options) : options;\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\nconst expandDataUri = dataUri => {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n  return dataUri;\n};\n/**\n * Adds a request hook to an xhr object\n *\n * @param {Object} xhr object to add the onRequest hook to\n * @param {function} callback hook function for an xhr request\n */\n\nconst addOnRequestHook = (xhr, callback) => {\n  if (!xhr._requestCallbackSet) {\n    xhr._requestCallbackSet = new Set();\n  }\n  xhr._requestCallbackSet.add(callback);\n};\n/**\n * Adds a response hook to an xhr object\n *\n * @param {Object} xhr object to add the onResponse hook to\n * @param {function} callback hook function for an xhr response\n */\n\nconst addOnResponseHook = (xhr, callback) => {\n  if (!xhr._responseCallbackSet) {\n    xhr._responseCallbackSet = new Set();\n  }\n  xhr._responseCallbackSet.add(callback);\n};\n/**\n * Removes a request hook on an xhr object, deletes the onRequest set if empty.\n *\n * @param {Object} xhr object to remove the onRequest hook from\n * @param {function} callback hook function to remove\n */\n\nconst removeOnRequestHook = (xhr, callback) => {\n  if (!xhr._requestCallbackSet) {\n    return;\n  }\n  xhr._requestCallbackSet.delete(callback);\n  if (!xhr._requestCallbackSet.size) {\n    delete xhr._requestCallbackSet;\n  }\n};\n/**\n * Removes a response hook on an xhr object, deletes the onResponse set if empty.\n *\n * @param {Object} xhr object to remove the onResponse hook from\n * @param {function} callback hook function to remove\n */\n\nconst removeOnResponseHook = (xhr, callback) => {\n  if (!xhr._responseCallbackSet) {\n    return;\n  }\n  xhr._responseCallbackSet.delete(callback);\n  if (!xhr._responseCallbackSet.size) {\n    delete xhr._responseCallbackSet;\n  }\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n  const video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n  const canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\nVhs.supportsTypeNatively = type => {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n  return false;\n};\n/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\nVhs.isSupported = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n/**\n * A global function for setting an onRequest hook\n *\n * @param {function} callback for request modifiction\n */\n\nVhs.xhr.onRequest = function (callback) {\n  addOnRequestHook(Vhs.xhr, callback);\n};\n/**\n * A global function for setting an onResponse hook\n *\n * @param {callback} callback for response data retrieval\n */\n\nVhs.xhr.onResponse = function (callback) {\n  addOnResponseHook(Vhs.xhr, callback);\n};\n/**\n * Deletes a global onRequest callback if it exists\n *\n * @param {function} callback to delete from the global set\n */\n\nVhs.xhr.offRequest = function (callback) {\n  removeOnRequestHook(Vhs.xhr, callback);\n};\n/**\n * Deletes a global onResponse callback if it exists\n *\n * @param {function} callback to delete from the global set\n */\n\nVhs.xhr.offResponse = function (callback) {\n  removeOnResponseHook(Vhs.xhr, callback);\n};\nconst Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nclass VhsHandler extends Component {\n  constructor(source, tech, options) {\n    super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n    if (typeof options.initialBandwidth === 'number') {\n      this.options_.bandwidth = options.initialBandwidth;\n    }\n    this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n    // so, get it from Video.js via the `playerId`\n\n    if (tech.options_ && tech.options_.playerId) {\n      const _player = videojs.getPlayer(tech.options_.playerId);\n      this.player_ = _player;\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n    if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native VHS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n    this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n      const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n        this.playlistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        this.playlistController_.checkABR_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have pc loaded.\n      if (this.tech_.error() && this.playlistController_) {\n        this.playlistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n  /**\n   * Set VHS options based on options from configuration, as well as partial\n   * options to be passed at a later time.\n   *\n   * @param {Object} options A partial chunk of config options\n   */\n\n  setOptions_(options = {}) {\n    this.options_ = merge(this.options_, options); // defaults\n\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useForcedSubtitles = this.options_.useForcedSubtitles || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n    this.options_.llhls = this.options_.llhls === false ? false : true;\n    this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n    if (typeof this.options_.playlistExclusionDuration !== 'number') {\n      this.options_.playlistExclusionDuration = 60;\n    }\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        const storedObject = getVhsLocalStorage();\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n        }\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useForcedSubtitles', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n      if (typeof this.source_[option] !== 'undefined') {\n        this.options_[option] = this.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  } // alias for public method to set options\n\n  setOptions(options = {}) {\n    this.setOptions_(options);\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n  src(src, type) {\n    // do nothing if the src is falsey\n    if (!src) {\n      return;\n    }\n    this.setOptions_(); // add main playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = time => {\n      this.tech_.setCurrentTime(time);\n    };\n    this.playlistController_ = new PlaylistController(this.options_);\n    const playbackWatcherOptions = merge({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: () => this.seekable(),\n      media: () => this.playlistController_.media(),\n      playlistController: this.playlistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.playlistController_.on('error', () => {\n      const player = videojs.players[this.tech_.options_.playerId];\n      let error = this.playlistController_.error;\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n      player.error(error);\n    });\n    const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.playlistController_.mainPlaylistLoader_;\n    this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get() {\n          return this.playlistController_.selectPlaylist;\n        },\n        set(selectPlaylist) {\n          this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get() {\n          return this.playlistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set(throughput) {\n          this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get() {\n          let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n          const networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          const tenMbpsAsBitsPerSecond = 10e6;\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n          return playerBandwidthEst;\n        },\n        set(bandwidth) {\n          this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get() {\n          const invBandwidth = 1 / (this.bandwidth || 1);\n          let invThroughput;\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n          const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: () => this.bandwidth || 0,\n        enumerable: true\n      },\n      mediaRequests: {\n        get: () => this.playlistController_.mediaRequests_() || 0,\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: () => this.playlistController_.mediaTransferDuration_() || 0,\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n        enumerable: true\n      },\n      mediaAppends: {\n        get: () => this.playlistController_.mediaAppends_() || 0,\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: () => this.playlistController_.appendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: () => this.playlistController_.timeToLoadedData_() || 0,\n        enumerable: true\n      },\n      buffered: {\n        get: () => timeRangesToArray(this.tech_.buffered()),\n        enumerable: true\n      },\n      currentTime: {\n        get: () => this.tech_.currentTime(),\n        enumerable: true\n      },\n      currentSource: {\n        get: () => this.tech_.currentSource_,\n        enumerable: true\n      },\n      currentTech: {\n        get: () => this.tech_.name_,\n        enumerable: true\n      },\n      duration: {\n        get: () => this.tech_.duration(),\n        enumerable: true\n      },\n      main: {\n        get: () => this.playlists.main,\n        enumerable: true\n      },\n      playerDimensions: {\n        get: () => this.tech_.currentDimensions(),\n        enumerable: true\n      },\n      seekable: {\n        get: () => timeRangesToArray(this.tech_.seekable()),\n        enumerable: true\n      },\n      timestamp: {\n        get: () => Date.now(),\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: () => this.tech_.getVideoPlaybackQuality(),\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n    this.tech_.on('bandwidthupdate', () => {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: this.bandwidth,\n          throughput: Math.round(this.throughput)\n        });\n      }\n    });\n    this.playlistController_.on('selectedinitialmedia', () => {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(this);\n    });\n    this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n      this.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.playlistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.playlistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.playlistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  }\n  createKeySessions_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.main.playlists\n    }).then(() => {\n      this.logger_('created EME key session');\n      this.playlistController_.sourceUpdater_.initializedEme();\n    }).catch(err => {\n      this.logger_('error while creating EME key session', err);\n      this.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n\n  setupEme_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    const didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', e => {\n      this.playlistController_.updatePlaylistByKeyStatus(e.keyId, e.status);\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_);\n    if (!didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.playlistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n  setupQualityLevels_() {\n    const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n    this.qualityLevels_ = player.qualityLevels();\n    this.playlistController_.on('selectedinitialmedia', () => {\n      handleVhsLoadedMetadata(this.qualityLevels_, this);\n    });\n    this.playlists.on('mediachange', () => {\n      handleVhsMediaChange(this.qualityLevels_, this.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n\n  static version() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n\n  version() {\n    return this.constructor.version();\n  }\n  canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n\n  play() {\n    this.playlistController_.play();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  setCurrentTime(currentTime) {\n    this.playlistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  duration() {\n    return this.playlistController_.duration();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  seekable() {\n    return this.playlistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n  dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.playlistController_) {\n      this.playlistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    }\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n    super.dispose();\n  }\n  convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.playlistController_.media(),\n      time,\n      callback\n    });\n  } // the player must be playing before calling this\n\n  seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n    return seekToProgramTime({\n      programTime,\n      playlist: this.playlistController_.media(),\n      retryCount,\n      pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback\n    });\n  }\n  /**\n   * Adds the onRequest, onResponse, offRequest and offResponse functions\n   * to the VhsHandler xhr Object.\n   */\n\n  setupXhrHooks_() {\n    /**\n     * A player function for setting an onRequest hook\n     *\n     * @param {function} callback for request modifiction\n     */\n    this.xhr.onRequest = callback => {\n      addOnRequestHook(this.xhr, callback);\n    };\n    /**\n     * A player function for setting an onResponse hook\n     *\n     * @param {callback} callback for response data retrieval\n     */\n\n    this.xhr.onResponse = callback => {\n      addOnResponseHook(this.xhr, callback);\n    };\n    /**\n     * Deletes a player onRequest callback if it exists\n     *\n     * @param {function} callback to delete from the player set\n     */\n\n    this.xhr.offRequest = callback => {\n      removeOnRequestHook(this.xhr, callback);\n    };\n    /**\n     * Deletes a player onResponse callback if it exists\n     *\n     * @param {function} callback to delete from the player set\n     */\n\n    this.xhr.offResponse = callback => {\n      removeOnResponseHook(this.xhr, callback);\n    }; // Trigger an event on the player to notify the user that vhs is ready to set xhr hooks.\n    // This allows hooks to be set before the source is set to vhs when handleSource is called.\n\n    this.player_.trigger('xhr-hooks-ready');\n  }\n}\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nconst VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource(srcObj, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource(source, tech, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.setupXhrHooks_();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType(type, options) {\n    const simpleType = simpleTypeFromSourceType(type);\n    if (!simpleType) {\n      return '';\n    }\n    const overrideNative = VhsSourceHandler.getOverrideNative(options);\n    const supportsTypeNatively = Vhs.supportsTypeNatively(simpleType);\n    const canUseMsePlayback = !supportsTypeNatively || overrideNative;\n    return canUseMsePlayback ? 'maybe' : '';\n  },\n  getOverrideNative(options = {}) {\n    const {\n      vhs = {}\n    } = options;\n    const defaultOverrideNative = !(videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS);\n    const {\n      overrideNative = defaultOverrideNative\n    } = vhs;\n    return overrideNative;\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nconst supportsNativeMediaSources = () => {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\nvideojs.VhsHandler = VhsHandler;\nvideojs.VhsSourceHandler = VhsSourceHandler;\nvideojs.Vhs = Vhs;\nif (!videojs.use) {\n  videojs.registerComponent('Vhs', Vhs);\n}\nvideojs.options.vhs = videojs.options.vhs || {};\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport { videojs as default };\n","/*! @name videojs-contrib-eme @version 3.11.2 @license Apache-2.0 */\nimport document from 'global/document';\nimport videojs from 'video.js';\nimport window from 'global/window';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar stringToUint16Array = function stringToUint16Array(string) {\n  // 2 bytes for each char\n  var buffer = new ArrayBuffer(string.length * 2);\n  var array = new Uint16Array(buffer);\n\n  for (var i = 0; i < string.length; i++) {\n    array[i] = string.charCodeAt(i);\n  }\n\n  return array;\n};\nvar uint8ArrayToString = function uint8ArrayToString(array) {\n  return String.fromCharCode.apply(null, new Uint16Array(array.buffer));\n};\nvar getHostnameFromUri = function getHostnameFromUri(uri) {\n  var link = document.createElement('a');\n  link.href = uri;\n  return link.hostname;\n};\nvar arrayBuffersEqual = function arrayBuffersEqual(arrayBuffer1, arrayBuffer2) {\n  if (arrayBuffer1 === arrayBuffer2) {\n    return true;\n  }\n\n  if (arrayBuffer1.byteLength !== arrayBuffer2.byteLength) {\n    return false;\n  }\n\n  var dataView1 = new DataView(arrayBuffer1);\n  var dataView2 = new DataView(arrayBuffer2);\n\n  for (var i = 0; i < dataView1.byteLength; i++) {\n    if (dataView1.getUint8(i) !== dataView2.getUint8(i)) {\n      return false;\n    }\n  }\n\n  return true;\n};\nvar arrayBufferFrom = function arrayBufferFrom(bufferOrTypedArray) {\n  if (bufferOrTypedArray instanceof Uint8Array || bufferOrTypedArray instanceof Uint16Array) {\n    return bufferOrTypedArray.buffer;\n  }\n\n  return bufferOrTypedArray;\n}; // Normalize between Video.js 6/7 (videojs.mergeOptions) and 8 (videojs.obj.merge).\n\nvar merge = function merge() {\n  var context = videojs.obj || videojs;\n  var fn = context.merge || context.mergeOptions;\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return fn.apply(context, args);\n};\nvar mergeAndRemoveNull = function mergeAndRemoveNull() {\n  var result = merge.apply(void 0, arguments); // Any header whose value is `null` will be removed.\n\n  Object.keys(result).forEach(function (k) {\n    if (result[k] === null) {\n      delete result[k];\n    }\n  });\n  return result;\n};\n\nvar httpResponseHandler = videojs.xhr.httpHandler; // to make sure this doesn't break with older versions of Video.js,\n// do a super simple wrapper instead\n\nif (!httpResponseHandler) {\n  httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n    return function (err, response, responseBody) {\n      if (err) {\n        callback(err);\n        return;\n      } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n      if (response.statusCode >= 400 && response.statusCode <= 599) {\n        var cause = responseBody;\n\n        if (decodeResponseBody) {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n\n        callback({\n          cause: cause\n        });\n        return;\n      } // otherwise, request succeeded\n\n\n      callback(null, responseBody);\n    };\n  };\n}\n\n/**\n * Parses the EME key message XML to extract HTTP headers and the Challenge element to use\n * in the PlayReady license request.\n *\n * @param {ArrayBuffer} message key message from EME\n * @return {Object} an object containing headers and the message body to use in the\n * license request\n */\n\nvar getMessageContents = function getMessageContents(message) {\n  // TODO do we want to support UTF-8?\n  var xmlString = String.fromCharCode.apply(null, new Uint16Array(message));\n  var xml = new window.DOMParser().parseFromString(xmlString, 'application/xml');\n  var headersElement = xml.getElementsByTagName('HttpHeaders')[0];\n  var headers = {};\n\n  if (headersElement) {\n    var headerNames = headersElement.getElementsByTagName('name');\n    var headerValues = headersElement.getElementsByTagName('value');\n\n    for (var i = 0; i < headerNames.length; i++) {\n      headers[headerNames[i].childNodes[0].nodeValue] = headerValues[i].childNodes[0].nodeValue;\n    }\n  }\n\n  var challengeElement = xml.getElementsByTagName('Challenge')[0];\n  var challenge;\n\n  if (challengeElement) {\n    challenge = window.atob(challengeElement.childNodes[0].nodeValue);\n  } // If we failed to parse the xml the soap message might be encoded already.\n  // set the message data as the challenge and add generic SOAP headers.\n\n\n  if (xml.querySelector('parsererror')) {\n    headers = {\n      'Content-Type': 'text/xml; charset=utf-8',\n      'SOAPAction': '\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\"'\n    };\n    challenge = message;\n  }\n\n  return {\n    headers: headers,\n    message: challenge\n  };\n};\nvar requestPlayreadyLicense = function requestPlayreadyLicense(keySystemOptions, messageBuffer, emeOptions, callback) {\n  var messageContents = getMessageContents(messageBuffer);\n  var message = messageContents.message;\n  var headers = mergeAndRemoveNull(messageContents.headers, emeOptions.emeHeaders, keySystemOptions.licenseHeaders);\n  videojs.xhr({\n    uri: keySystemOptions.url,\n    method: 'post',\n    headers: headers,\n    body: message,\n    responseType: 'arraybuffer'\n  }, httpResponseHandler(callback, true));\n};\n\n/**\n * Returns an array of MediaKeySystemConfigurationObjects provided in the keySystem\n * options.\n *\n * @see {@link https://www.w3.org/TR/encrypted-media/#dom-mediakeysystemconfiguration|MediaKeySystemConfigurationObject}\n *\n * @param {Object} keySystemOptions\n *        Options passed into videojs-contrib-eme for a specific keySystem\n * @return {Object[]}\n *         Array of MediaKeySystemConfigurationObjects\n */\n\nvar getSupportedConfigurations = function getSupportedConfigurations(keySystemOptions) {\n  if (keySystemOptions.supportedConfigurations) {\n    return keySystemOptions.supportedConfigurations;\n  } // TODO use initDataTypes when appropriate\n\n\n  var supportedConfiguration = {};\n  var audioContentType = keySystemOptions.audioContentType;\n  var audioRobustness = keySystemOptions.audioRobustness;\n  var videoContentType = keySystemOptions.videoContentType;\n  var videoRobustness = keySystemOptions.videoRobustness;\n  var persistentState = keySystemOptions.persistentState;\n\n  if (audioContentType || audioRobustness) {\n    supportedConfiguration.audioCapabilities = [_extends({}, audioContentType ? {\n      contentType: audioContentType\n    } : {}, audioRobustness ? {\n      robustness: audioRobustness\n    } : {})];\n  }\n\n  if (videoContentType || videoRobustness) {\n    supportedConfiguration.videoCapabilities = [_extends({}, videoContentType ? {\n      contentType: videoContentType\n    } : {}, videoRobustness ? {\n      robustness: videoRobustness\n    } : {})];\n  }\n\n  if (persistentState) {\n    supportedConfiguration.persistentState = persistentState;\n  }\n\n  return [supportedConfiguration];\n};\nvar getSupportedKeySystem = function getSupportedKeySystem(keySystems) {\n  // As this happens after the src is set on the video, we rely only on the set src (we\n  // do not change src based on capabilities of the browser in this plugin).\n  var promise;\n  Object.keys(keySystems).forEach(function (keySystem) {\n    var supportedConfigurations = getSupportedConfigurations(keySystems[keySystem]);\n\n    if (!promise) {\n      promise = window.navigator.requestMediaKeySystemAccess(keySystem, supportedConfigurations);\n    } else {\n      promise = promise.catch(function (e) {\n        return window.navigator.requestMediaKeySystemAccess(keySystem, supportedConfigurations);\n      });\n    }\n  });\n  return promise;\n};\nvar makeNewRequest = function makeNewRequest(player, requestOptions) {\n  var mediaKeys = requestOptions.mediaKeys,\n      initDataType = requestOptions.initDataType,\n      initData = requestOptions.initData,\n      options = requestOptions.options,\n      getLicense = requestOptions.getLicense,\n      removeSession = requestOptions.removeSession,\n      eventBus = requestOptions.eventBus;\n  var keySession = mediaKeys.createSession();\n  eventBus.trigger('keysessioncreated');\n  player.on('dispose', function () {\n    keySession.close();\n  });\n  return new Promise(function (resolve, reject) {\n    keySession.addEventListener('message', function (event) {\n      // all other types will be handled by keystatuseschange\n      if (event.messageType !== 'license-request' && event.messageType !== 'license-renewal') {\n        return;\n      }\n\n      getLicense(options, event.message).then(function (license) {\n        resolve(keySession.update(license));\n      }).catch(function (err) {\n        reject(err);\n      });\n    }, false);\n    keySession.addEventListener('keystatuseschange', function (event) {\n      var expired = false; // based on https://www.w3.org/TR/encrypted-media/#example-using-all-events\n\n      keySession.keyStatuses.forEach(function (status, keyId) {\n        // Trigger an event so that outside listeners can take action if appropriate.\n        // For instance, the `output-restricted` status should result in an\n        // error being thrown.\n        eventBus.trigger({\n          keyId: keyId,\n          status: status,\n          target: keySession,\n          type: 'keystatuschange'\n        });\n\n        switch (status) {\n          case 'expired':\n            // If one key is expired in a session, all keys are expired. From\n            // https://www.w3.org/TR/encrypted-media/#dom-mediakeystatus-expired, \"All other\n            // keys in the session must have this status.\"\n            expired = true;\n            break;\n\n          case 'internal-error':\n            var message = 'Key status reported as \"internal-error.\" Leaving the session open since we ' + 'don\\'t have enough details to know if this error is fatal.'; // \"This value is not actionable by the application.\"\n            // https://www.w3.org/TR/encrypted-media/#dom-mediakeystatus-internal-error\n\n            videojs.log.warn(message, event);\n            break;\n        }\n      });\n\n      if (expired) {\n        // Close session and remove it from the session list to ensure that a new\n        // session can be created.\n        //\n        // TODO convert to videojs.log.debug and add back in\n        // https://github.com/videojs/video.js/pull/4780\n        // videojs.log.debug('Session expired, closing the session.');\n        keySession.close().then(function () {\n          removeSession(initData);\n          makeNewRequest(player, requestOptions);\n        });\n      }\n    }, false);\n    keySession.generateRequest(initDataType, initData).catch(function () {\n      reject('Unable to create or initialize key session');\n    });\n  });\n};\n/*\n * Creates a new media key session if media keys are available, otherwise queues the\n * session creation for when the media keys are available.\n *\n * @see {@link https://www.w3.org/TR/encrypted-media/#dom-mediakeysession|MediaKeySession}\n * @see {@link https://www.w3.org/TR/encrypted-media/#dom-mediakeys|MediaKeys}\n *\n * @function addSession\n * @param {Object} video\n *        Target video element\n * @param {string} initDataType\n *        The type of init data provided\n * @param {Uint8Array} initData\n *        The media's init data\n * @param {Object} options\n *        Options provided to the plugin for this key system\n * @param {function()} [getLicense]\n *        User provided function to retrieve a license\n * @param {function()} removeSession\n *        Function to remove the persisted session on key expiration so that a new session\n *        may be created\n * @param {Object} eventBus\n *        Event bus for any events pertinent to users\n * @return {Promise}\n *         A resolved promise if session is waiting for media keys, or a promise for the\n *         session creation if media keys are available\n */\n\nvar addSession = function addSession(_ref) {\n  var player = _ref.player,\n      video = _ref.video,\n      initDataType = _ref.initDataType,\n      initData = _ref.initData,\n      options = _ref.options,\n      getLicense = _ref.getLicense,\n      removeSession = _ref.removeSession,\n      eventBus = _ref.eventBus;\n\n  if (video.mediaKeysObject) {\n    return makeNewRequest(player, {\n      mediaKeys: video.mediaKeysObject,\n      initDataType: initDataType,\n      initData: initData,\n      options: options,\n      getLicense: getLicense,\n      removeSession: removeSession,\n      eventBus: eventBus\n    });\n  }\n\n  video.pendingSessionData.push({\n    initDataType: initDataType,\n    initData: initData,\n    options: options,\n    getLicense: getLicense,\n    removeSession: removeSession,\n    eventBus: eventBus\n  });\n  return Promise.resolve();\n};\n/*\n * Given media keys created from a key system access object, check for any session data\n * that was queued and create new sessions for each.\n *\n * @see {@link https://www.w3.org/TR/encrypted-media/#dom-mediakeysystemaccess|MediaKeySystemAccess}\n * @see {@link https://www.w3.org/TR/encrypted-media/#dom-mediakeysession|MediaKeySession}\n * @see {@link https://www.w3.org/TR/encrypted-media/#dom-mediakeys|MediaKeys}\n *\n * @function addPendingSessions\n * @param {Object} video\n *        Target video element\n * @param {string} [certificate]\n *        The server certificate (if used)\n * @param {Object} createdMediaKeys\n *        Media keys to use for session creation\n * @return {Promise}\n *         A promise containing new session creations and setting of media keys on the\n *         video object\n */\n\nvar addPendingSessions = function addPendingSessions(_ref2) {\n  var player = _ref2.player,\n      video = _ref2.video,\n      certificate = _ref2.certificate,\n      createdMediaKeys = _ref2.createdMediaKeys;\n  // save media keys on the video element to act as a reference for other functions so\n  // that they don't recreate the keys\n  video.mediaKeysObject = createdMediaKeys;\n  var promises = [];\n\n  if (certificate) {\n    promises.push(createdMediaKeys.setServerCertificate(certificate));\n  }\n\n  for (var i = 0; i < video.pendingSessionData.length; i++) {\n    var data = video.pendingSessionData[i];\n    promises.push(makeNewRequest(player, {\n      mediaKeys: video.mediaKeysObject,\n      initDataType: data.initDataType,\n      initData: data.initData,\n      options: data.options,\n      getLicense: data.getLicense,\n      removeSession: data.removeSession,\n      eventBus: data.eventBus\n    }));\n  }\n\n  video.pendingSessionData = [];\n  promises.push(video.setMediaKeys(createdMediaKeys));\n  return Promise.all(promises);\n};\n\nvar defaultPlayreadyGetLicense = function defaultPlayreadyGetLicense(keySystemOptions) {\n  return function (emeOptions, keyMessage, callback) {\n    requestPlayreadyLicense(keySystemOptions, keyMessage, emeOptions, callback);\n  };\n};\n\nvar defaultGetLicense = function defaultGetLicense(keySystemOptions) {\n  return function (emeOptions, keyMessage, callback) {\n    var headers = mergeAndRemoveNull({\n      'Content-type': 'application/octet-stream'\n    }, emeOptions.emeHeaders, keySystemOptions.licenseHeaders);\n    videojs.xhr({\n      uri: keySystemOptions.url,\n      method: 'POST',\n      responseType: 'arraybuffer',\n      body: keyMessage,\n      headers: headers\n    }, httpResponseHandler(callback, true));\n  };\n};\n\nvar promisifyGetLicense = function promisifyGetLicense(getLicenseFn, eventBus) {\n  return function (emeOptions, keyMessage) {\n    return new Promise(function (resolve, reject) {\n      getLicenseFn(emeOptions, keyMessage, function (err, license) {\n        if (eventBus) {\n          eventBus.trigger('licenserequestattempted');\n        }\n\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(license);\n      });\n    });\n  };\n};\n\nvar standardizeKeySystemOptions = function standardizeKeySystemOptions(keySystem, keySystemOptions) {\n  if (typeof keySystemOptions === 'string') {\n    keySystemOptions = {\n      url: keySystemOptions\n    };\n  }\n\n  if (!keySystemOptions.url && !keySystemOptions.getLicense) {\n    throw new Error('Neither URL nor getLicense function provided to get license');\n  }\n\n  if (keySystemOptions.url && !keySystemOptions.getLicense) {\n    keySystemOptions.getLicense = keySystem === 'com.microsoft.playready' ? defaultPlayreadyGetLicense(keySystemOptions) : defaultGetLicense(keySystemOptions);\n  }\n\n  return keySystemOptions;\n};\n\nvar standard5July2016 = function standard5July2016(_ref3) {\n  var player = _ref3.player,\n      video = _ref3.video,\n      initDataType = _ref3.initDataType,\n      initData = _ref3.initData,\n      keySystemAccess = _ref3.keySystemAccess,\n      options = _ref3.options,\n      removeSession = _ref3.removeSession,\n      eventBus = _ref3.eventBus;\n  var keySystemPromise = Promise.resolve();\n\n  if (typeof video.mediaKeysObject === 'undefined') {\n    // Prevent entering this path again.\n    video.mediaKeysObject = null; // Will store all initData until the MediaKeys is ready.\n\n    video.pendingSessionData = [];\n    var certificate;\n    var keySystemOptions;\n    keySystemPromise = new Promise(function (resolve, reject) {\n      // save key system for adding sessions\n      video.keySystem = keySystemAccess.keySystem;\n      keySystemOptions = standardizeKeySystemOptions(keySystemAccess.keySystem, options.keySystems[keySystemAccess.keySystem]);\n\n      if (!keySystemOptions.getCertificate) {\n        resolve(keySystemAccess);\n        return;\n      }\n\n      keySystemOptions.getCertificate(options, function (err, cert) {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        certificate = cert;\n        resolve();\n      });\n    }).then(function () {\n      return keySystemAccess.createMediaKeys();\n    }).then(function (createdMediaKeys) {\n      return addPendingSessions({\n        player: player,\n        video: video,\n        certificate: certificate,\n        createdMediaKeys: createdMediaKeys\n      });\n    }).catch(function (err) {\n      // if we have a specific error message, use it, otherwise show a more\n      // generic one\n      if (err) {\n        return Promise.reject(err);\n      }\n\n      return Promise.reject('Failed to create and initialize a MediaKeys object');\n    });\n  }\n\n  return keySystemPromise.then(function () {\n    var _standardizeKeySystem = standardizeKeySystemOptions(video.keySystem, options.keySystems[video.keySystem]),\n        getLicense = _standardizeKeySystem.getLicense;\n\n    return addSession({\n      player: player,\n      video: video,\n      initDataType: initDataType,\n      initData: initData,\n      options: options,\n      // if key system has not been determined then addSession doesn't need getLicense\n      getLicense: video.keySystem ? promisifyGetLicense(getLicense, eventBus) : null,\n      removeSession: removeSession,\n      eventBus: eventBus\n    });\n  });\n};\n\n/**\n * The W3C Working Draft of 22 October 2013 seems to be the best match for\n * the ms-prefixed API. However, it should only be used as a guide; it is\n * doubtful the spec is 100% implemented as described.\n *\n * @see https://www.w3.org/TR/2013/WD-encrypted-media-20131022\n */\nvar FAIRPLAY_KEY_SYSTEM = 'com.apple.fps.1_0';\n\nvar concatInitDataIdAndCertificate = function concatInitDataIdAndCertificate(_ref) {\n  var initData = _ref.initData,\n      id = _ref.id,\n      cert = _ref.cert;\n\n  if (typeof id === 'string') {\n    id = stringToUint16Array(id);\n  } // layout:\n  //   [initData]\n  //   [4 byte: idLength]\n  //   [idLength byte: id]\n  //   [4 byte:certLength]\n  //   [certLength byte: cert]\n\n\n  var offset = 0;\n  var buffer = new ArrayBuffer(initData.byteLength + 4 + id.byteLength + 4 + cert.byteLength);\n  var dataView = new DataView(buffer);\n  var initDataArray = new Uint8Array(buffer, offset, initData.byteLength);\n  initDataArray.set(initData);\n  offset += initData.byteLength;\n  dataView.setUint32(offset, id.byteLength, true);\n  offset += 4;\n  var idArray = new Uint16Array(buffer, offset, id.length);\n  idArray.set(id);\n  offset += idArray.byteLength;\n  dataView.setUint32(offset, cert.byteLength, true);\n  offset += 4;\n  var certArray = new Uint8Array(buffer, offset, cert.byteLength);\n  certArray.set(cert);\n  return new Uint8Array(buffer, 0, buffer.byteLength);\n};\n\nvar addKey = function addKey(_ref2) {\n  var video = _ref2.video,\n      contentId = _ref2.contentId,\n      initData = _ref2.initData,\n      cert = _ref2.cert,\n      options = _ref2.options,\n      getLicense = _ref2.getLicense,\n      eventBus = _ref2.eventBus;\n  return new Promise(function (resolve, reject) {\n    if (!video.webkitKeys) {\n      try {\n        video.webkitSetMediaKeys(new window.WebKitMediaKeys(FAIRPLAY_KEY_SYSTEM));\n      } catch (error) {\n        reject('Could not create MediaKeys');\n        return;\n      }\n    }\n\n    var keySession;\n\n    try {\n      keySession = video.webkitKeys.createSession('video/mp4', concatInitDataIdAndCertificate({\n        id: contentId,\n        initData: initData,\n        cert: cert\n      }));\n    } catch (error) {\n      reject('Could not create key session');\n      return;\n    }\n\n    eventBus.trigger('keysessioncreated');\n    keySession.contentId = contentId;\n    keySession.addEventListener('webkitkeymessage', function (event) {\n      getLicense(options, contentId, event.message, function (err, license) {\n        if (eventBus) {\n          eventBus.trigger('licenserequestattempted');\n        }\n\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        keySession.update(new Uint8Array(license));\n      });\n    });\n    keySession.addEventListener('webkitkeyadded', function () {\n      resolve();\n    }); // for testing purposes, adding webkitkeyerror must be the last item in this method\n\n    keySession.addEventListener('webkitkeyerror', function () {\n      var error = keySession.error;\n      reject(\"KeySession error: code \" + error.code + \", systemCode \" + error.systemCode);\n    });\n  });\n};\n\nvar defaultGetCertificate = function defaultGetCertificate(fairplayOptions) {\n  return function (emeOptions, callback) {\n    var headers = mergeAndRemoveNull(emeOptions.emeHeaders, fairplayOptions.certificateHeaders);\n    videojs.xhr({\n      uri: fairplayOptions.certificateUri,\n      responseType: 'arraybuffer',\n      headers: headers\n    }, httpResponseHandler(function (err, license) {\n      if (err) {\n        callback(err);\n        return;\n      } // in this case, license is still the raw ArrayBuffer,\n      // (we don't want httpResponseHandler to decode it)\n      // convert it into Uint8Array as expected\n\n\n      callback(null, new Uint8Array(license));\n    }));\n  };\n};\n\nvar defaultGetContentId = function defaultGetContentId(emeOptions, initData) {\n  return getHostnameFromUri(uint8ArrayToString(initData));\n};\n\nvar defaultGetLicense$1 = function defaultGetLicense(fairplayOptions) {\n  return function (emeOptions, contentId, keyMessage, callback) {\n    var headers = mergeAndRemoveNull({\n      'Content-type': 'application/octet-stream'\n    }, emeOptions.emeHeaders, fairplayOptions.licenseHeaders);\n    videojs.xhr({\n      uri: fairplayOptions.licenseUri,\n      method: 'POST',\n      responseType: 'arraybuffer',\n      body: keyMessage,\n      headers: headers\n    }, httpResponseHandler(callback, true));\n  };\n};\n\nvar fairplay = function fairplay(_ref3) {\n  var video = _ref3.video,\n      initData = _ref3.initData,\n      options = _ref3.options,\n      eventBus = _ref3.eventBus;\n  var fairplayOptions = options.keySystems[FAIRPLAY_KEY_SYSTEM];\n  var getCertificate = fairplayOptions.getCertificate || defaultGetCertificate(fairplayOptions);\n  var getContentId = fairplayOptions.getContentId || defaultGetContentId;\n  var getLicense = fairplayOptions.getLicense || defaultGetLicense$1(fairplayOptions);\n  return new Promise(function (resolve, reject) {\n    getCertificate(options, function (err, cert) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(cert);\n    });\n  }).then(function (cert) {\n    return addKey({\n      video: video,\n      cert: cert,\n      initData: initData,\n      getLicense: getLicense,\n      options: options,\n      contentId: getContentId(options, initData),\n      eventBus: eventBus\n    });\n  });\n};\n\n/**\n * The W3C Working Draft of 22 October 2013 seems to be the best match for\n * the ms-prefixed API. However, it should only be used as a guide; it is\n * doubtful the spec is 100% implemented as described.\n *\n * @see https://www.w3.org/TR/2013/WD-encrypted-media-20131022\n * @see https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/mt598601(v=vs.85)\n */\nvar PLAYREADY_KEY_SYSTEM = 'com.microsoft.playready';\nvar addKeyToSession = function addKeyToSession(options, session, event, eventBus) {\n  var playreadyOptions = options.keySystems[PLAYREADY_KEY_SYSTEM];\n\n  if (typeof playreadyOptions.getKey === 'function') {\n    playreadyOptions.getKey(options, event.destinationURL, event.message.buffer, function (err, key) {\n      if (err) {\n        eventBus.trigger({\n          message: 'Unable to get key: ' + err,\n          target: session,\n          type: 'mskeyerror'\n        });\n        return;\n      }\n\n      session.update(key);\n    });\n    return;\n  }\n\n  if (typeof playreadyOptions === 'string') {\n    playreadyOptions = {\n      url: playreadyOptions\n    };\n  } else if (typeof playreadyOptions === 'boolean') {\n    playreadyOptions = {};\n  }\n\n  if (!playreadyOptions.url) {\n    playreadyOptions.url = event.destinationURL;\n  }\n\n  var callback = function callback(err, responseBody) {\n    if (eventBus) {\n      eventBus.trigger('licenserequestattempted');\n    }\n\n    if (err) {\n      eventBus.trigger({\n        message: 'Unable to request key from url: ' + playreadyOptions.url,\n        target: session,\n        type: 'mskeyerror'\n      });\n      return;\n    }\n\n    session.update(new Uint8Array(responseBody));\n  };\n\n  if (playreadyOptions.getLicense) {\n    playreadyOptions.getLicense(options, event.message.buffer, callback);\n  } else {\n    requestPlayreadyLicense(playreadyOptions, event.message.buffer, options, callback);\n  }\n};\nvar createSession = function createSession(video, initData, options, eventBus) {\n  // Note: invalid mime type passed here throws a NotSupportedError\n  var session = video.msKeys.createSession('video/mp4', initData);\n\n  if (!session) {\n    throw new Error('Could not create key session.');\n  }\n\n  eventBus.trigger('keysessioncreated'); // Note that mskeymessage may not always be called for PlayReady:\n  //\n  // \"If initData contains a PlayReady object that contains an OnDemand header, only a\n  // keyAdded event is returned (as opposed to a keyMessage event as described in the\n  // Encrypted Media Extension draft). Similarly, if initData contains a PlayReady object\n  // that contains a key identifier in the hashed data storage (HDS), only a keyAdded\n  // event is returned.\"\n  // eslint-disable-next-line max-len\n  // @see [PlayReady License Acquisition]{@link https://msdn.microsoft.com/en-us/library/dn468979.aspx}\n\n  session.addEventListener('mskeymessage', function (event) {\n    addKeyToSession(options, session, event, eventBus);\n  });\n  session.addEventListener('mskeyerror', function (event) {\n    eventBus.trigger({\n      message: 'Unexpected key error from key session with ' + (\"code: \" + session.error.code + \" and systemCode: \" + session.error.systemCode),\n      target: session,\n      type: 'mskeyerror'\n    });\n  });\n  session.addEventListener('mskeyadded', function () {\n    eventBus.trigger({\n      target: session,\n      type: 'mskeyadded'\n    });\n  });\n};\nvar msPrefixed = (function (_ref) {\n  var video = _ref.video,\n      initData = _ref.initData,\n      options = _ref.options,\n      eventBus = _ref.eventBus;\n\n  // Although by the standard examples the presence of video.msKeys is checked first to\n  // verify that we aren't trying to create a new session when one already exists, here\n  // sessions are managed earlier (on the player.eme object), meaning that at this point\n  // any existing keys should be cleaned up.\n  // TODO: Will this break rotation? Is it safe?\n  if (video.msKeys) {\n    delete video.msKeys;\n  }\n\n  try {\n    video.msSetMediaKeys(new window.MSMediaKeys(PLAYREADY_KEY_SYSTEM));\n  } catch (e) {\n    throw new Error('Unable to create media keys for PlayReady key system. ' + 'Error: ' + e.message);\n  }\n\n  createSession(video, initData, options, eventBus);\n});\n\nvar version = \"3.11.2\";\n\nvar hasSession = function hasSession(sessions, initData) {\n  for (var i = 0; i < sessions.length; i++) {\n    // Other types of sessions may be in the sessions array that don't store the initData\n    // (for instance, PlayReady sessions on IE11).\n    if (!sessions[i].initData) {\n      continue;\n    } // initData should be an ArrayBuffer by the spec:\n    // eslint-disable-next-line max-len\n    // @see [Media Encrypted Event initData Spec]{@link https://www.w3.org/TR/encrypted-media/#mediaencryptedeventinit}\n    //\n    // However, on some browsers it may come back with a typed array view of the buffer.\n    // This is the case for IE11, however, since IE11 sessions are handled differently\n    // (following the msneedkey PlayReady path), this coversion may not be important. It\n    // is safe though, and might be a good idea to retain in the short term (until we have\n    // catalogued the full range of browsers and their implementations).\n\n\n    var sessionBuffer = arrayBufferFrom(sessions[i].initData);\n    var initDataBuffer = arrayBufferFrom(initData);\n\n    if (arrayBuffersEqual(sessionBuffer, initDataBuffer)) {\n      return true;\n    }\n  }\n\n  return false;\n};\nvar removeSession = function removeSession(sessions, initData) {\n  for (var i = 0; i < sessions.length; i++) {\n    if (sessions[i].initData === initData) {\n      sessions.splice(i, 1);\n      return;\n    }\n  }\n};\nvar handleEncryptedEvent = function handleEncryptedEvent(player, event, options, sessions, eventBus) {\n  if (!options || !options.keySystems) {\n    // return silently since it may be handled by a different system\n    return Promise.resolve();\n  }\n\n  var initData = event.initData;\n  return getSupportedKeySystem(options.keySystems).then(function (keySystemAccess) {\n    var keySystem = keySystemAccess.keySystem; // Use existing init data from options if provided\n\n    if (options.keySystems[keySystem] && options.keySystems[keySystem].pssh) {\n      initData = options.keySystems[keySystem].pssh;\n    } // \"Initialization Data must be a fixed value for a given set of stream(s) or media\n    // data. It must only contain information related to the keys required to play a given\n    // set of stream(s) or media data.\"\n    // eslint-disable-next-line max-len\n    // @see [Initialization Data Spec]{@link https://www.w3.org/TR/encrypted-media/#initialization-data}\n\n\n    if (hasSession(sessions, initData) || !initData) {\n      // TODO convert to videojs.log.debug and add back in\n      // https://github.com/videojs/video.js/pull/4780\n      // videojs.log('eme',\n      //             'Already have a configured session for init data, ignoring event.');\n      return Promise.resolve();\n    }\n\n    sessions.push({\n      initData: initData\n    });\n    return standard5July2016({\n      player: player,\n      video: event.target,\n      initDataType: event.initDataType,\n      initData: initData,\n      keySystemAccess: keySystemAccess,\n      options: options,\n      removeSession: removeSession.bind(null, sessions),\n      eventBus: eventBus\n    });\n  });\n};\nvar handleWebKitNeedKeyEvent = function handleWebKitNeedKeyEvent(event, options, eventBus) {\n  if (!options.keySystems || !options.keySystems[FAIRPLAY_KEY_SYSTEM] || !event.initData) {\n    // return silently since it may be handled by a different system\n    return Promise.resolve();\n  } // From Apple's example Safari FairPlay integration code, webkitneedkey is not repeated\n  // for the same content. Unless documentation is found to present the opposite, handle\n  // all webkitneedkey events the same (even if they are repeated).\n\n\n  return fairplay({\n    video: event.target,\n    initData: event.initData,\n    options: options,\n    eventBus: eventBus\n  });\n};\nvar handleMsNeedKeyEvent = function handleMsNeedKeyEvent(event, options, sessions, eventBus) {\n  if (!options.keySystems || !options.keySystems[PLAYREADY_KEY_SYSTEM]) {\n    // return silently since it may be handled by a different system\n    return;\n  } // \"With PlayReady content protection, your Web app must handle the first needKey event,\n  // but it must then ignore any other needKey event that occurs.\"\n  // eslint-disable-next-line max-len\n  // @see [PlayReady License Acquisition]{@link https://msdn.microsoft.com/en-us/library/dn468979.aspx}\n  //\n  // Usually (and as per the example in the link above) this is determined by checking for\n  // the existence of video.msKeys. However, since the video element may be reused, it's\n  // easier to directly manage the session.\n\n\n  if (sessions.reduce(function (acc, session) {\n    return acc || session.playready;\n  }, false)) {\n    // TODO convert to videojs.log.debug and add back in\n    // https://github.com/videojs/video.js/pull/4780\n    // videojs.log('eme',\n    //             'An \\'msneedkey\\' event was receieved earlier, ignoring event.');\n    return;\n  }\n\n  var initData = event.initData; // Use existing init data from options if provided\n\n  if (options.keySystems[PLAYREADY_KEY_SYSTEM] && options.keySystems[PLAYREADY_KEY_SYSTEM].pssh) {\n    initData = options.keySystems[PLAYREADY_KEY_SYSTEM].pssh;\n  }\n\n  if (!initData) {\n    return;\n  }\n\n  sessions.push({\n    playready: true,\n    initData: initData\n  });\n  msPrefixed({\n    video: event.target,\n    initData: initData,\n    options: options,\n    eventBus: eventBus\n  });\n};\nvar getOptions = function getOptions(player) {\n  return merge(player.currentSource(), player.eme.options);\n};\n/**\n * Configure a persistent sessions array and activeSrc property to ensure we properly\n * handle each independent source's events. Should be run on any encrypted or needkey\n * style event to ensure that the sessions reflect the active source.\n *\n * @function setupSessions\n * @param    {Player} player\n */\n\nvar setupSessions = function setupSessions(player) {\n  var src = player.src();\n\n  if (src !== player.eme.activeSrc) {\n    player.eme.activeSrc = src;\n    player.eme.sessions = [];\n  }\n};\n/**\n * Construct a simple function that can be used to dispatch EME errors on the\n * player directly, such as providing it to a `.catch()`.\n *\n * @function emeErrorHandler\n * @param    {Player} player\n * @return   {Function}\n */\n\nvar emeErrorHandler = function emeErrorHandler(player) {\n  return function (objOrErr) {\n    var error = {\n      // MEDIA_ERR_ENCRYPTED is code 5\n      code: 5\n    };\n\n    if (typeof objOrErr === 'string') {\n      error.message = objOrErr;\n    } else if (objOrErr) {\n      if (objOrErr.message) {\n        error.message = objOrErr.message;\n      }\n\n      if (objOrErr.cause && (objOrErr.cause.length || objOrErr.cause.byteLength)) {\n        error.cause = objOrErr.cause;\n      }\n    }\n\n    player.error(error);\n  };\n};\n/**\n * Function to invoke when the player is ready.\n *\n * This is a great place for your plugin to initialize itself. When this\n * function is called, the player will have its DOM and child components\n * in place.\n *\n * @function onPlayerReady\n * @param    {Player} player\n * @param    {Function} emeError\n */\n\nvar onPlayerReady = function onPlayerReady(player, emeError) {\n  if (player.$('.vjs-tech').tagName.toLowerCase() !== 'video') {\n    return;\n  }\n\n  setupSessions(player);\n\n  if (window.WebKitMediaKeys) {\n    var handleFn = function handleFn(event) {\n      // TODO convert to videojs.log.debug and add back in\n      // https://github.com/videojs/video.js/pull/4780\n      // videojs.log('eme', 'Received a \\'webkitneedkey\\' event');\n      // TODO it's possible that the video state must be cleared if reusing the same video\n      // element between sources\n      setupSessions(player);\n      handleWebKitNeedKeyEvent(event, getOptions(player), player.tech_).catch(emeError);\n    }; // Support Safari EME with FairPlay\n    // (also used in early Chrome or Chrome with EME disabled flag)\n\n\n    player.tech_.el_.addEventListener('webkitneedkey', function (event) {\n      var options = getOptions(player);\n      var firstWebkitneedkeyTimeout = options.firstWebkitneedkeyTimeout || 1000;\n      var src = player.src(); // on source change or first startup reset webkitneedkey options.\n\n      player.eme.webkitneedkey_ = player.eme.webkitneedkey_ || {}; // if the source changed we need to handle the first event again.\n      // track source changes internally.\n\n      if (player.eme.webkitneedkey_.src !== src) {\n        player.eme.webkitneedkey_ = {\n          handledFirstEvent: false,\n          src: src\n        };\n      } // It's possible that at the start of playback a rendition switch\n      // on a small player in safari's HLS implementation will cause\n      // two webkitneedkey events to occur. We want to make sure to cancel\n      // our first existing request if we get another within 1 second. This\n      // prevents a non-fatal player error from showing up due to a\n      // request failure.\n\n\n      if (!player.eme.webkitneedkey_.handledFirstEvent) {\n        // clear the old timeout so that a new one can be created\n        // with the new rendition's event data\n        player.clearTimeout(player.eme.webkitneedkey_.timeout);\n        player.eme.webkitneedkey_.timeout = player.setTimeout(function () {\n          player.eme.webkitneedkey_.handledFirstEvent = true;\n          player.eme.webkitneedkey_.timeout = null;\n          handleFn(event);\n        }, firstWebkitneedkeyTimeout); // after we have a verified first request, we will request on\n        // every other event like normal.\n      } else {\n        handleFn(event);\n      }\n    });\n  } else if (window.MediaKeys) {\n    // Support EME 05 July 2016\n    // Chrome 42+, Firefox 47+, Edge, Safari 12.1+ on macOS 10.14+\n    player.tech_.el_.addEventListener('encrypted', function (event) {\n      // TODO convert to videojs.log.debug and add back in\n      // https://github.com/videojs/video.js/pull/4780\n      // videojs.log('eme', 'Received an \\'encrypted\\' event');\n      setupSessions(player);\n      handleEncryptedEvent(player, event, getOptions(player), player.eme.sessions, player.tech_).catch(emeError);\n    });\n  } else if (window.MSMediaKeys) {\n    // IE11 Windows 8.1+\n    // Since IE11 doesn't support promises, we have to use a combination of\n    // try/catch blocks and event handling to simulate promise rejection.\n    // Functionally speaking, there should be no discernible difference between\n    // the behavior of IE11 and those of other browsers.\n    player.tech_.el_.addEventListener('msneedkey', function (event) {\n      // TODO convert to videojs.log.debug and add back in\n      // https://github.com/videojs/video.js/pull/4780\n      // videojs.log('eme', 'Received an \\'msneedkey\\' event');\n      setupSessions(player);\n\n      try {\n        handleMsNeedKeyEvent(event, getOptions(player), player.eme.sessions, player.tech_);\n      } catch (error) {\n        emeError(error);\n      }\n    });\n    player.tech_.on('mskeyerror', emeError); // TODO: refactor this plugin so it can use a plugin dispose\n\n    player.on('dispose', function () {\n      player.tech_.off('mskeyerror', emeError);\n    });\n  }\n};\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @function eme\n * @param    {Object} [options={}]\n *           An object of options left to the plugin author to define.\n */\n\n\nvar eme = function eme(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var player = this;\n  var emeError = emeErrorHandler(player);\n  player.ready(function () {\n    return onPlayerReady(player, emeError);\n  }); // Plugin API\n\n  player.eme = {\n    /**\n    * Sets up MediaKeys on demand\n    * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n    *\n    * @function initializeMediaKeys\n    * @param    {Object} [emeOptions={}]\n    *           An object of eme plugin options.\n    * @param    {Function} [callback=function(){}]\n    * @param    {boolean} [suppressErrorIfPossible=false]\n    */\n    initializeMediaKeys: function initializeMediaKeys(emeOptions, callback, suppressErrorIfPossible) {\n      if (emeOptions === void 0) {\n        emeOptions = {};\n      }\n\n      if (callback === void 0) {\n        callback = function callback() {};\n      }\n\n      if (suppressErrorIfPossible === void 0) {\n        suppressErrorIfPossible = false;\n      }\n\n      // TODO: this should be refactored and renamed to be less tied\n      // to encrypted events\n      var mergedEmeOptions = merge(player.currentSource(), options, emeOptions); // fake an encrypted event for handleEncryptedEvent\n\n      var mockEncryptedEvent = {\n        initDataType: 'cenc',\n        initData: null,\n        target: player.tech_.el_\n      };\n      setupSessions(player);\n\n      if (player.tech_.el_.setMediaKeys) {\n        handleEncryptedEvent(player, mockEncryptedEvent, mergedEmeOptions, player.eme.sessions, player.tech_).then(function () {\n          return callback();\n        }).catch(function (error) {\n          callback(error);\n\n          if (!suppressErrorIfPossible) {\n            emeError(error);\n          }\n        });\n      } else if (player.tech_.el_.msSetMediaKeys) {\n        var msKeyHandler = function msKeyHandler(event) {\n          player.tech_.off('mskeyadded', msKeyHandler);\n          player.tech_.off('mskeyerror', msKeyHandler);\n\n          if (event.type === 'mskeyerror') {\n            callback(event.target.error);\n\n            if (!suppressErrorIfPossible) {\n              emeError(event.message);\n            }\n          } else {\n            callback();\n          }\n        };\n\n        player.tech_.one('mskeyadded', msKeyHandler);\n        player.tech_.one('mskeyerror', msKeyHandler);\n\n        try {\n          handleMsNeedKeyEvent(mockEncryptedEvent, mergedEmeOptions, player.eme.sessions, player.tech_);\n        } catch (error) {\n          player.tech_.off('mskeyadded', msKeyHandler);\n          player.tech_.off('mskeyerror', msKeyHandler);\n          callback(error);\n\n          if (!suppressErrorIfPossible) {\n            emeError(error);\n          }\n        }\n      }\n    },\n    options: options\n  };\n}; // Register the plugin with video.js.\n\n\nvideojs.registerPlugin('eme', eme); // Include the version number.\n\neme.VERSION = version;\n\nexport default eme;\nexport { hasSession, removeSession, handleEncryptedEvent, handleWebKitNeedKeyEvent, handleMsNeedKeyEvent, getOptions, setupSessions, emeErrorHandler };\n","import videojs from 'video.js';\n\n/**\n * @ignore\n * @type {typeof import('video.js/dist/types/player').default}\n */\nconst vjsPlayer = videojs.getComponent('player');\n\n/**\n * This class extends {@link VideoJsPlayer}.\n *\n * @class Player\n */\nclass Player extends vjsPlayer {\n\n  /**\n   * A getter/setter for the media's audio track.\n   * Activates the audio track according to the language and kind properties.\n   * Falls back on the first audio track found if the kind property is not satisfied.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/kind\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/language\n   *\n   * @param {TrackSelector} [trackSelector]\n   *\n   * @example\n   * // Get the current audio track\n   * player.audioTrack();\n   *\n   * @example\n   * // Activate an audio track based on language and kind properties\n   * player.audioTrack({language:'en', kind:'description'});\n   *\n   * @example\n   * // Activate first audio track found corresponding to language\n   * player.audioTrack({language:'fr'});\n   *\n   * @return {AudioTrack|undefined}\n   */\n  audioTrack(trackSelector) {\n    const audioTracks = Array.from(this.player().audioTracks());\n\n    if (!trackSelector) {\n      return audioTracks.find((audioTrack) => audioTrack.enabled);\n    }\n\n    const { kind, language } = trackSelector;\n    const audioTrack =\n      audioTracks.find(\n        (audioTrack) =>\n          audioTrack.language === language && audioTrack.kind === kind\n      ) || audioTracks.find((audioTrack) => audioTrack.language === language);\n\n    if (audioTrack) {\n      audioTrack.enabled = true;\n    }\n\n    return audioTrack;\n  }\n\n  /**\n   * A getter/setter for the media's text track.\n   * Activates the text track according to the language and kind properties.\n   * Falls back on the first text track found if the kind property is not satisfied.\n   * Disables all subtitle tracks that are `showing` if the `trackSelector` is truthy but does not satisfy any condition.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/kind\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/textTrack/language\n   *\n   * @param {TrackSelector} [trackSelector]\n   *\n   * @example\n   * // Get the current text track\n   * player.textTrack();\n   *\n   * @example\n   * // Disable all text tracks has a side effect\n   * player.textTrack('off');\n   * player.textTrack({});\n   *\n   * @example\n   * // Activate an text track based on language and kind properties\n   * player.textTrack({language:'en', kind:'captions'});\n   *\n   * @example\n   * // Activate first text track found corresponding to language\n   * player.textTrack({language:'fr'});\n   *\n   * @return {VideojsTextTrack|undefined}\n   */\n  textTrack(trackSelector) {\n    const textTracks = Array.from(this.player().textTracks()).filter(\n      (textTrack) => !['chapters', 'metadata'].includes(textTrack.kind)\n    );\n\n    if (!trackSelector) {\n      return textTracks.find((textTrack) => textTrack.mode === 'showing');\n    }\n\n    textTracks.forEach((textTrack) => (textTrack.mode = 'disabled'));\n\n    const { kind, language } = trackSelector;\n    const textTrack =\n      textTracks.find((textTrack) => {\n        if (textTrack.language === language && textTrack.kind === kind) {\n          textTrack.mode = 'showing';\n        }\n\n        return textTrack.mode === 'showing';\n      }) ||\n      textTracks.find((textTrack) => {\n        if (textTrack.language === language) {\n          textTrack.mode = 'showing';\n        }\n\n        return textTrack.mode === 'showing';\n      });\n\n    return textTrack;\n  }\n}\n\n/**\n * @type {Player}\n */\n// Overrides the default video.js player component\nexport default videojs.registerComponent('player', Player);\n","import { version } from '../package.json';\nimport videojs from 'video.js';\nimport 'videojs-contrib-eme';\nimport './components/player.js';\n\n/**\n * Pillarbox is an alias for the video.js namespace with additional options.\n *\n * @namespace\n * @see https://docs.videojs.com/module-videojs-videojs\n * @type {videojs}\n */\nconst pillarbox = videojs;\n\npillarbox.VERSION = {\n  pillarbox: version,\n  videojs: videojs.VERSION,\n  [videojs.VhsSourceHandler.name]: videojs.VhsSourceHandler.VERSION,\n  eme: videojs.getPlugin('eme').VERSION,\n};\n\n/**\n * Enable smooth seeking for Pillarbox.\n *\n * @see [Video.js enableSmoothSeeking Option]{@link https://videojs.com/guides/options/#enablesmoothseeking}\n * @type {boolean}\n * @default true\n */\npillarbox.options.enableSmoothSeeking = true;\n/**\n * Configuration options for HTML5 settings in Pillarbox.\n *\n * @see [VHS useForcedSubtitles Option]{@link https://github.com/videojs/http-streaming/blob/main/README.md#useforcedsubtitles}\n * @type {Object}\n * @property {Object} vhs - Configuration for the Video.js HTTP Streaming.\n * @property {boolean} useForcedSubtitles - Enables the player to display forced subtitles by default.\n * Forced subtitles are pieces of information intended for display when no other text representation\n * is selected. They are used to clarify dialogue, provide alternate languages, display texted graphics,\n * or present location/person IDs that are not otherwise covered in the dubbed/localized audio.\n */\npillarbox.options.html5 = {\n  vhs: { useForcedSubtitles: true }\n};\n/**\n * Configuration for the live tracker.\n *\n * @see [Video.js liveTracker Option]{@link https://videojs.com/guides/options/#livetrackertrackingthreshold}\n * @type {Object}\n * @property {number} trackingThreshold - A threshold that controls when the liveui should be shown.\n * @property {number} liveTolerance - An option that controls how far from the seekable end should be considered live playback.\n */\npillarbox.options.liveTracker = {\n  trackingThreshold: 120,\n  liveTolerance: 15,\n};\n/**\n * Allows the player to use the live ui that includes:\n *\n * - A progress bar for seeking within the live window\n * - A button that can be clicked to seek to the live edge with a circle indicating if you are at the live edge or not.\n *\n * @see [Video.js liveui Option]{@link https://videojs.com/guides/options/#liveui}\n * @type {boolean}\n */\npillarbox.options.liveui = true;\n/**\n * Indicates that the video is to be played \"inline\", that is within the element's playback area.\n *\n * @see [Video element playsinline attribute]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#playsinline}\n * @type {boolean}\n */\npillarbox.options.playsinline = true;\n/**\n * Configuration for plugins.\n *\n * @see [Video.js Plugins Option]{@link https://videojs.com/guides/options/#plugins}\n * @type {Object}\n * @property {boolean} eme - Enable the EME (Encrypted Media Extensions) plugin.\n */\npillarbox.options.plugins = { eme: true };\n/**\n * Enable responsive mode, this will cause the player to customize itself based on responsive breakpoints.\n *\n * @see [Video.js Responsive Option]{@link https://videojs.com/guides/options/#responsive}\n * @type {boolean}\n */\npillarbox.options.responsive = true;\n/**\n * A placeholder for accessing trackers directly from the player.\n *\n * @type {Object}\n */\npillarbox.options.trackers = {};\n\nexport default pillarbox;\n"],"names":["window_1","window","global","self","slice","Array","prototype","domWalk","nodes","cb","call","length","node","shift","ret","childNodes","concat","domComment","Comment","data","owner","this","nodeValue","ownerDocument","nodeType","nodeName","toString","domText","DOMText","value","type","replaceData","index","current","left","substring","right","dispatchEvent_1","ev","elem","target","listeners","forEach","listener","currentTarget","handleEvent","parentNode","dispatchEvent","addEventListener_1","indexOf","push","removeEventListener_1","list","splice","voidElements","serializeNode","escapeText","strings","tagname","tagName","namespaceURI","toLowerCase","props","key","isProperty","name","ns","_attributes","attribute","prop","prefix","className","stringify","properties","ds","dataset","datasetify","apply","map","textContent","innerText","innerHTML","join","serializeElement","Object","keys","style","hasOwnProperty","attributes","tuple","styles","attr","replace","c","stylify","s","str","require$$0","require$$1","addEventListener","require$$2","removeEventListener","require$$3","htmlns","domElement","DOMElement","namespace","undefined","String","toUpperCase","DOMElement$2","appendChild","child","removeChild","replaceChild","needle","insertBefore","setAttributeNS","localName","colonPosition","substr","getAttributeNS","removeAttributeNS","hasAttributeNS","setAttribute","getAttribute","removeAttribute","hasAttribute","focus","getElementsByClassName","classNames","classes","split","elems","nodeClasses","every","item","getElementsByTagName","contains","element","domFragment","DocumentFragment","DocumentFragment$2","event","Event","family","initEvent","bubbles","cancelable","preventDefault","require$$4","require$$5","require$$6","require$$7","require$$8","document","Document","head","createElement","body","documentElement","proto","createTextNode","createElementNS","createDocumentFragment","createEvent","createComment","getElementById","id","doccy","minDocument","topLevel","minDoc","document_1","keyCode","searchInput","hasKeyCode","which","charCode","names","foundNamedKey","search","codes","aliases","charCodeAt","isEventKey","nameOrCode","exports","module","code","backspace","tab","enter","ctrl","alt","esc","space","end","home","up","down","insert","delete","command","windows","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","del","cmd","i","fromCharCode","title","alias","obj","reviver","json","error","JSON","parse","err","_extends","assign","bind","arguments","source","__esModule","isFunction_1","fn","string","setTimeout","alert","confirm","prompt","httpHandler","callback","decodeResponseBody","response","responseBody","statusCode","cause","TextDecoder","charset","contentTypeHeader","reduce","contentType","_contentType$split","trim","getCharset","headers","decode","e","Uint8Array","isFunction","createXHR","parseHeaders","result","row","isArray","initParams","uri","options","params","_createXHR","Error","called","getBody","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","getXml","isJson","errorFunc","evt","clearTimeout","timeoutTimer","failureResponse","loadFunc","aborted","status","useXDR","method","url","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","onreadystatechange","readyState","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","setRequestHeader","isEmpty","beforeSend","send","libModule","default","array","iterator","forEachArray","_objCreate","create","F","o","ParsingError","errorData","message","parseTimeStamp","input","computeSeconds","h","m","f","match","Settings","values","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","cue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","startTime","endTime","settings","k","v","set","region","vals","vals0","integer","percent","get","vertical","line","lineAlign","snapToLines","size","align","position","start","center","middle","positionAlign","consumeCueSettings","constructor","BadSignature","dflt","defaultKey","has","a","n","test","parseInt","parseFloat","TEXTAREA_ELEMENT","TAG_NAME","b","u","ruby","rt","lang","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","shouldAdd","annotation","t","rootDiv","tagStack","pop","createProcessingInstruction","cl","bgColor","colorName","propName","propValue","strongRTLRanges","isStrongRTLChar","currentRange","determineBidi","cueDiv","nodeStack","text","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","color","backgroundColor","top","bottom","display","writingMode","unicodeBidi","applyStyles","div","direction","textAlign","font","whiteSpace","textPos","formatStyle","width","height","move","box","BoxPosition","lh","offsetHeight","offsetWidth","offsetTop","rects","getClientRects","getBoundingClientRect","Math","max","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","track","textTrackList","mediaElement","trackList","count","mode","computeLinePos","axis","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","p","intersectPercentage","findBestPosition","toCSSCompatValues","WebVTT","val","unit","toMove","overlaps","b2","boxes","container","min","reference","getSimpleBoxPosition","WebVTT$1","StringDecoder","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","processCues","cues","overlay","firstChild","paddedOverlay","margin","hasBeenReset","displayState","shouldCompute","fontSize","Parser","vttjs","decoder","state","buffer","reportOrThrowError","onparsingerror","collectNextLine","pos","parseHeader","ontimestampmap","MPEGTS","LOCAL","parseTimestampMap","xy","anchor","VTTRegion","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","stream","alreadyCollectedLine","VTTCue","hasSubstring","oncue","flush","onflush","vtt","directionSetting","lr","rl","alignSetting","auto","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","defineProperties","enumerable","pauseOnExit","TypeError","setting","findDirectionSetting","SyntaxError","console","warn","getCueAsHTML","vttcue","scrollSetting","isValidPercentValue","vttregion","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","browserIndexModule","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","root","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","alwaysNormalize","basePartsForNormalise","parseURL","path","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","exec","builtParts","query","fragment","baseURLPath","newPath","lastIndexOf","parts","DEFAULT_LOCATION","resolveUrl","baseUrl","relativeUrl","location","href","nativeURL","URL","protocolLess","removeLocation","newUrl","protocol","Stream","_proto","on","off","trigger","callbacks","args","_length","_i","dispose","pipe","destination","decodeB64ToUint8Array","b64Text","decodedString","atob","Buffer","from","LineStream","super","nextNewline","TAB","parseByterange","byterangeString","offset","parseAttributes","attrs","RegExp","ParseStream","customParsers","tagMappers","acc","mapper","mappedLine","newLine","tagType","duration","version","number","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","Uint32Array","PRECISE","subkey","clientAttributePattern","isHexaDecimal","isDecimalFloating","addParser","expression","customType","dataParser","segment","addTagMapper","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","lineStream","parseStream","uris","currentMap","currentUri","hasParts","noop","defaultMediaGroups","AUDIO","VIDEO","SUBTITLES","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","daterangeTags","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","part","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","daterange","endDate","startDate","plannedDuration","endOnNextYes","endOnNext","class","newDateInSeconds","setSeconds","getSeconds","independentSegments","comment","custom","identifier","missing","chunk","regexs","mp4","webm","ogg","video","audio","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","Number","parseCodecs","codecString","codecs","codecType","details","mediaType","isAudioCodec","getMimeForCodec","browserSupportsCodec","MediaSource","isTypeSupported","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","isArrayBufferView","ArrayBuffer","isView","toUint8","bytes","byteOffset","byteLength","BigInt","BYTE_TABLE","Uint16Array","bytesToNumber","_temp","_ref","_ref$signed","signed","_ref$le","le","total","byte","exponent","numberToBytes","_temp2","_ref2$le","x","byteCount","countBits","byteIndex","stringToBytes","stringIsBytes","unescape","view","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","freeze","object","oc","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","conventions$2","find","predicate","ac","conventions","notEmptyString","orderedSetReducer","toOrderedSet","filter","splitOnASCIIWhitespace","copy","src","dest","Class","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ls","__set__","$$length","NamedNodeMap","_findNodeIndex","_addNamedNode","el","newAttr","oldAttr","ownerElement","doc","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","DOMImplementation","Node","_xmlEncoder","_visitNode","nextSibling","remove","_onUpdateChild","newChild","cs","_removeChild","previous","previousSibling","next","lastChild","isDocTypeNode","isElementNode","isTextNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","assertPreInsertionValidity1to5","parent","hasValidParentNodeType","hasInsertableNodeType","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","hasDoctypeChildThatIsNotChild","_insertBefore","_inDocumentAssertion","cp","newFirst","newLast","pre","Element","Attr","CharacterData","Text","CDATASection","DocumentType","Notation","Entity","EntityReference","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","lookupPrefix","visibleNamespaces","serializeToString","needNamespaceDefine","addSerializedAttribute","qualifiedName","len","prefixedNodeName","defaultNS","ai","nsi","pubid","publicId","sysid","systemId","sub","internalSubset","importNode","deep","node2","cloneNode","attrs2","_ownerElement","setAttributeNode","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","DOMImplementation$1","hasFeature","feature","createDocument","doctype","implementation","createDocumentType","refChild","oldChild","hasChildNodes","normalize","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","createCDATASection","createAttribute","specified","createEntityReference","pl","createAttributeNS","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","old","getAttributeNodeNS","getElementsByTagNameNS","substringData","insertData","deleteData","splitText","newText","newNode","defineProperty","getTextContent","dom","XML_ENTITIES","amp","apos","gt","lt","quot","HTML_ENTITIES","Aacute","aacute","Abreve","abreve","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","num","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj","entityMap","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","ParseError","locator","XMLReader","copyLocator","lineNumber","columnNumber","parseElementStartPart","currentNSMap","entityReplacer","errorHandler","addAttribute","qname","startIndex","attributeNames","fatalError","addValue","attrName","charAt","warning","setTagName","closed","appendElement","domBuilder","localNSMap","qName","nsp","nsPrefix","_copy","startPrefixMapping","startElement","endElement","endPrefixMapping","parseHtmlSpecialContent","elStartEnd","elEndStart","characters","fixSelfClosed","closeMap","parseDCC","startCDATA","endCDATA","matchs","lastMatch","startDTD","endDTD","parseInstruction","processingInstruction","ElementAttributes","XMLReader$1","defaultNSMap","startDocument","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","appendText","xt","lineEnd","linePattern","lineStart","parseStack","tagStart","currentElement","config","endMatch","locator2","endDocument","getLocalName","getLocator","getQName","getURI","getValue","sax$1","entities","sax","normalizeLineEndings","DOMParser","DOMHandler","cdata","_locator","l","_toString","chars","java","hander","DOMParser$1","parseFromString","mimeType","xmlns","setDocumentLocator","errorImpl","isCallback","Function","build","msg","buildErrorHandler","xml","documentURI","ignorableWhitespace","ch","charNode","skippedEntity","comm","impl","dt","domParser","__DOMHandler","isObject","merge","objects","flatten","lists","y","errors","urlTypeToSegment","indexRange","resolvedUri","ranges","startRange","endRange","MAX_SAFE_INTEGER","parseEndNumber","endNumber","segmentRange","static","timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","periodStart","minimumUpdatePeriod","timeShiftBufferDepth","Infinity","now","periodStartWC","segmentCount","availableStart","floor","availableEnd","parseByDuration","startNumber","time","toSegments","sectionDuration","segmentsFromBase","initialization","presentationTime","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","referencedSize","subsegmentDuration","endIndex","SUPPORTED_MEDIA_TYPES","getUniqueTimelineStarts","timelineStarts","keyFunction","sort","getMediaGroupPlaylists","mediaGroupPlaylists","master","group","label","groupKey","labelKey","mediaProperties","updateMediaSequenceForPlaylist","positionManifestOnTimeline","oldManifest","newManifest","oldPlaylists","newPlaylists","findIndex","oldPlaylist","findPlaylistWithName","firstNewSegment","oldMatchingSegmentIndex","oldSegment","unshift","updateSequenceNumbers","generateSidxKey","byteRangeToString","mergeDiscontiguousPlaylists","playlistsByBaseUrl","cur","allPlaylists","playlistGroup","mergedPlaylists","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatVideoPlaylist","CODECS","bandwidth","frameRate","serviceLocation","videoOnly","audioOnly","vttOnly","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","dashPlaylists","locations","contentSteering","previousManifest","eventStream","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captions","captionServices","Boolean","isAudioOnly","organizedAudioGroup","mainPlaylist","formattedPlaylists","role","roleLabel","formatted","formatAudioPlaylist","organizeAudioPlaylists","organizedVttGroup","m3u8Attributes","vttPlaylist","formatVttPlaylist","organizeVttPlaylists","playlistTimelineStarts","subs","cc","svcObj","svc","service","channel","aspectRatio","easyReader","getLiveRValue","parseByTimeline","segmentTimeline","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","Time","presentationTimeOffset","segmentsFromList","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentInfo","segmentAttributes","segmentsFn","template","segmentsInfo","findChildren","getContent","parseDuration","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","prev","parseDivisionValue","parsedValue","parseFn","keySystemsMap","buildBaseUrls","baseUrlElements","baseUrlElement","initialBaseUrl","resolvedBaseUrl","finalBaseUrl","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","toEventStream","eventStreamAttributes","eventAttributes","messageData","contentEncoding","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","accessibility","flags","opt","parseCaptionServiceMetadata","labelVal","keySystem","psshNode","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","toAdaptationSets","mpdAttributes","mpdBaseUrls","adaptationSets","generateContentSteeringInformation","contentSteeringNodes","eventHandler","infoFromContentSteeringTag","serverURL","queryBeforeStart","stringToMpdXml","manifestString","parser","mpd","parsedManifestInfo","manifestUri","periodNodes","periods","priorPeriod","priorPeriodAttributes","mpdType","getPeriodStart","contentSteeringInfo","representationInfo","inheritAttributes","parseUTCTiming","UTCTimingNode","parseUTCTimingScheme","MAX_UINT32","pow","getUint64","uint8","dv","DataView","getBigUint64","getUint32","subarray","referenceId","earliestPresentationTime","referenceCount","getUint16","startsWithSap","sapType","sapDeltaTime","ID3","getId3Offset","returnSize","getId3Size","findBox","paths","complete","normalizePaths","results","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","Track","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","VideoTrack","AudioTrack","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getvint","removeLength","getLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","findNal","dataType","types","nalLimit","nalStart","nalsFound","nalOffset","nalType","CONSTANTS","matroska","flac","ac3","riff","avi","wav","fmp4","mov","moov","moof","_isLikely","aac","mp3","docType","mkv","h264","findH264Nal","h265","findH265Nal","isLikelyTypes","isLikelyFn","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","isLikely","detectContainerForBytes","ONE_SECOND_IN_TS","clock","version$6","seconds","sampleRate","timestamp","hooks_","hooks","removeHook","FullscreenApi","prefixed","apiMap","specApi","browserApi","history","log$1","createLogger$1","delimiter","logByType","level","log","lvl","levels","lvlRegExp","resultName","window$1","info","LogByTypeFactory","createLogger","subName","subDelimiter","subStyles","resultDelimiter","createNewLogger","newName","newDelimiter","newStyles","all","debug","fname","historyItem","clear","disable","enable","each","initial","accum","isPlain","merge$1","sources","defineLazyProperty","setter","writable","configurable","Obj","__proto__","ANDROID_VERSION","IS_IPOD","IOS_VERSION","IS_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","IS_TIZEN","IS_WEBOS","TOUCH_ENABLED","isReal","navigator","maxTouchPoints","DocumentTouch","UAD","userAgentData","platform","brands","brand","USER_AGENT","userAgent","major","minor","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","isEl","isInFrame","createQuerier","selector","context","querySelector","ctx","createEl","content","getOwnPropertyNames","appendContent","prependTo","hasClass","classToCheck","throwIfWhitespace","classList","addClass","classesToAdd","add","removeClass","classesToRemove","toggleClass","classToToggle","toggle","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","includes","blockTextSelection","onselectstart","unblockTextSelection","computedStyle","findPosition","offsetParent","fullscreenElement","offsetLeft","getPointerPosition","translated","transform","boxTarget","boxW","offsetY","offsetX","changedTouches","pageX","pageY","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","getComputedStyle","computedStyleValue","getPropertyValue","copyStyleSheetsToWindow","win","styleSheets","styleSheet","cssRules","rule","cssText","link","rel","mediaText","Dom","videojs$1","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","createStyleElement","setTextContent","DomData","WeakMap","_supportsPassive","_guid","newGUID","_cleanUpEvents","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","supportsPassive","passiveEvents","guid","hash","handlersCopy","passive","attachEvent","removeType","elemData","targetData","one","func","any","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","throttle","last","performance","debounce","immediate","debounced","later","cancel","Fn","EVENT_MAP","EventTarget$2","ael","allowedEvents_","queueTrigger","oldTimeout","objName","name_","isEvented","eventBusEl_","isValidEventType","validateTarget","fnName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","removeListenerOnDispose","removeRemoverOnTargetDispose","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","el_","StatefulMixin","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","Component$1","ready","play","player_","isDisposed_","parentComponent_","options_","id_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","Set","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","restoreEl","isDisposed","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","children","getChildById","getChild","getDescendant","currentChild","setIcon","iconName","experimentalSvgIcons","xmlnsURL","iconContainer","svgEl","useEl","iconIsSet_","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","childFound","compEl","parentOptions","handleAdd","playerOptions","workingChildren","Tech","some","wchild","isTech","buildCSSClass","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","keycode","handleKeyPress","emitTapEvents","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","requestNamedAnimationFrame","cancelNamedAnimationFrame","cancelAnimationFrame","idName","cancelName","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","getRange","valueIndex","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","Symbol","createTimeRanges$1","defaultImplementation","guide","gm","gh","setFormatTime","customImplementation","resetFormatTime","formatTime","createTimeRanges","createTimeRange","bufferedPercent","buffered","bufferedDuration","MediaError","defaultMessages","isPromise","then","silencePromise","metadata","errorTypes","MEDIA_ERR_CUSTOM","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_ENCRYPTED","trackToJson_","textTrackConverter","tech","trackEls","trackObjs","trackEl","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","tabIndex","previouslyActiveEl_","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","activeElement","playerEl","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","tracks","tracks_","addTrack","labelchange_","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","enabled","disableOthers","selected","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","descriptions","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","trackProps","newLabel","parseUrl","host","getAbsoluteURL","getFileExtension","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","groupCollapsed","groupEnd","loadTrack","crossOrigin","tech_","XHR","loaded_","TextTrack","srclang","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","stopTracking","startTracking","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","originalCue_","removeCue","cuechange","newEnabled","newSelected","HTMLTrackElement","NONE","LOADED","load","LOADING","ERROR","NORMAL","ListClass","changing_","enabledChange_","TrackClass","capitalName","selectedChange_","getterName","privateName","REMOTE","remoteText","remoteTextEl","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","ALL","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","_isScrubbing","scrubbing","setCurrentTime","_seconds","trackListChanges","addWebVttScript_","script","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","override","overrideNativeVideoTracks","canPlayType","_type","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","videojs","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","mws","mw","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","lastRun","mwFactory","mwrest","mwf","mwi","getOrCreateFactory","_src","MimetypesKind","opus","ogv","m4v","m4a","caf","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","filterSource","newsrc","srcobj","fixSource","mimetype","j","techOrder","techName","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","update","update_","crossorigin","poster","setSrc","loading","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","getCSSPositionValue","updateDisplayHandler","updateDisplayOverlay","toggleDisplay","preselectTrack","screenOrientation","screen","orientation","changeOrientationEvent","modes","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","translate","clearDisplay","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","videoHeight","CSS","supports","playerWidth","playerHeight","playerAspectRatio","videoAspectRatio","videoWidth","insetInlineMatch","insetBlockMatch","updateDisplayState","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","cueEl","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","TimeDisplay","updateTextNode_","span","labelText_","textNode_","enableSmoothSeeking","updateContent","formattedTime_","oldNode","CurrentTimeDisplay","getCache","DurationDisplay","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","Num","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent_","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","visibilityState","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","handlePictureInPictureAudioModeChange","currentType","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","pictureInPictureEnabled","enableDocumentPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","checkVolumeSupport","throttledHandleMouseMove","orientationClass","MuteToggle","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","SkipForward","validOptions","skipTime","getSkipForwardTime","controlBar","skipButtons","forward","currentVideoTime","SkipBackward","getSkipBackwardTime","backward","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","menuItemEl","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","ControlBar","ErrorDisplay","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","seekableStarts","behindLiveEdge","updateDom_","techEl","techAriaAttrs","techAriaAttr","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","parsedSVG","sprite","majorVersion","userActive","listenForUserActivity_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","fill_","fluid","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","aspectRatio_","width_","height_","idClass","ratioParts","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","promise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","userActions","click","doubleClick","userWasActive","toggleFullscreenClass_","targetPlayer","isFs","fullscreen","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","reduceRight","resolve","play_","isSrcReady","isSafariOrIOS","waitToPlay_","resetProgressBar_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","percentAsDecimal","defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","requestFullscreenHelper_","fsOptions","preferFullWindow","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","documentPictureInPicture","pipContainer","titleBar","requestWindow","pipWindow","pipVideo","hotkeys","isContentEditable","excludeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","selectSource","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","finder","sourceOrder","handleSrc_","isRetry","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","setTech","retry","stopListeningForErrors","sourceTech","vhs","doReset_","resetControlBarUI_","resetPlaybackRate_","resetVolumeBar_","currentTimeDisplay","durationDisplay","progressControl","loadProgressBar","currentSources","techAutoplay","newPoster","usingNativeControls_","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","enableAudioOnlyUI_","playerChildren","controlBarHeight","disableAudioOnlyUI_","exitPromises","enablePosterModeUI_","disablePosterModeUI_","toJSON","createModal","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","responsive_","loadMedia","artist","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","safeParseTuple","childName","previousLogLevel_","newRates","Player$1","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","instance","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","deprecateForMajor","oldName","warned","deprecate","usingPlugin","hasPlugin","normalizeId","getPlayer","rootNode","getRootNode","ShadowRoot","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","getAllPlayers","use","writeable","mergeOptions","addLanguage","EventTarget","UnsupportedSidxContainer","DashManifestSidxParsingError","HlsPlaylistRequestError","SegmentUnsupportedMediaFormat","UnsupportedMediaInitialization","SegmentSwitchError","SegmentExceedsSourceBufferQuota","SegmentAppendError","VttLoadError","VttCueParsingError","EMEKeySessionCreationError","QualityLevel","bitrate","QualityLevelList","levels_","selectedIndex_","addQualityLevel","qualityLevel","getQualityLevelById","removeQualityLevel","removed","addqualitylevel","removequalitylevel","version$5","qualityLevels","originalPluginFn","qualityLevelList","disposeHandler","initPlugin$1","_resolveUrl","resolveManifestRedirect","req","responseURL","logger","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","intervalDuration","endSequence","expired","backwardDuration","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isExcluded","excludeUntil","isIncompatible","isEnabled","excluded","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","Playlist","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","canUseFudgeFactor","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","createPlaylistID","groupID","forEachMediaGroup","setupMediaPlaylist","playlistErrors_","addPropertiesToMain","createGroupID","phonyUri","audioOnlyMain","groupId","setupMediaPlaylists","resolveMediaGroupUris","DateRangesStorage","offset_","pendingDateRanges_","processedDateRanges_","setOffset","firstSegment","programDateTime","setPendingDateRanges","dateRanges","dateRange","getTime","trimProcessedDateRanges_","pendingDateRange","processDateRange","getDateRangesToProcess","dateRangeClasses","dateRangesToProcess","classListIndex","EventTarget$1","updateSegment","skipped","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","oldSegments","newSegments","newIndex","newSegment","updateSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","logger_","vhs_","addDateRangesToTextTrack_","addDateRangesToTextTrack","vhsOptions","customTagParsers","customTagMappers","llhls","dateRangesStorage_","handleMediaupdatetimeout_","handleLoadedPlaylist_","mediaPlaylist","availableDateRanges","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","startingState","parseManifest_","onwarn","oninfo","customParser","parseManifest","playlistObject","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","delay","mediaChange","mainPlaylistRef","started","setupInitialPlaylist","srcUri","mainForMedia","updateOrDeleteClone","isUpdate","pathway","ID","oldPlaylistUri","oldPlaylistId","newPlaylistUri","createCloneURI_","newPlaylistId","createCloneAttributes_","updatedPlaylist","createClonePlaylist_","updateOrDeleteCloneMedia","oldMediaPlaylist","createClonedMediaGroups_","addClonePathway","basePlaylist","playlistId","baseID","newUri","newPlaylistID","newMediaPlaylist","newProps","baseURI","hostname","HOST","PARAMS","oldAttributes","getKeyIdSet","keyIds","keysystem","videojsXHR","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","xhrFactory","XhrFunction","beforeRequest","Vhs","_requestCallbackSet","_responseCallbackSet","xhrMethod","beforeRequestOptions","requestSet","newOptions","requestCallback","callAllRequestHooks","responseSet","responseCallback","callAllResponseHooks","originalAbort","segmentXhrHeaders","Range","byterangeEnd","byterangeStart","byterangeStr","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","ascii","utils","tagDump","textRanges","getProgramTime","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","playerTimeToProgramTime","toISOString","seekToProgramTime","retryCount","seekTo","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","_len","buffers","_key","totalLen","tempBuffer","concatTypedArrays","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","dashGroupId","updateMain","oldMain","newMain","noChanges","playlistUpdate","removeOldMediaGroupLabels","equivalentSidx","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","srcUrlOrPlaylist","mainPlaylistLoader","mainPlaylistLoader_","isMain_","addMetadataToTextTrack","refreshXml_","refreshMedia_","loadedPlaylists_","srcUrl","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","mediaRequest_","fin","parseSidx","internal","playlistExclusionDuration","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMain_","mainChanged","haveMain_","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","mainXml","parseMainXml","addEventStreamToMetadataTrack_","mpl","mup","createMUPTimeout_","mediaGroupSidx","filterChangedSidxMappings","mediaID","mediaChanged","createMediaUpdateTimeout","metadataArray","eventStreamNode","cueTime","frames","defaultKID","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","factory","objectUrl","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","commonjsGlobal","globalThis","Stream$8","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","MAX_UINT32$1","numbers","avc1","avcC","btrt","dref","mdat","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","hasRedundancy","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils$1","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","nalCount","nalUnitType","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","generateSampleTable","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","generateSampleTableForFrame","concatenateNalDataForFrame","highPrefix","lowPrefix","zeroFill","ONE_SECOND_IN_TS$4","timelineStartPts","keepOriginalTimestamps","clock$2","coneOfSilence","metaTable","arr","clock$1","audioFrameUtils$1","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo$1","clearDtsInfo","maxSegmentDts","maxSegmentPts","calculateTrackBaseMediaDecodeTime","timelineStartInfo","collectDtsInfo","captionPacketParser","parseSei","payloadType","payloadSize","parseUserData","sei","parseCaptionPackets","userData","ccData","emulationPreventionBytesPositions","USER_DATA_REGISTERED_ITU_T_T35","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","Cea708Service","serviceNum","encoding","currentWindow","createTextDecoder","startPts","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","char","charCodeArray","newCode","isMultiByte","extended","currentByte","nextByte","unicode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","indent","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","indentations","isColorPAC","isNormalChar","logWarning","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","Stream$6","TYPE_SHARED","handleRollover$1","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","MetadataStream","timestampRolloverStream","TimestampRolloverStream","handleRollover","typedArray","fromIndex","currentIndex","typedArrayIndexOf","textEncodingDescriptionByte","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","APIC","mimeTypeEndIndex","descriptionEndIndex","pictureType","pictureData","TXXX","WXXX","PRIV","privateData","parseId3","parseId3Frames","frameSize","frameStart","tagSize","parseSyncSafeInteger","StreamTypes$3","id3","bufferSize","dispatchType","dataAlignmentIndicator","timeStamp","TransportPacketStream","TransportParseStream","ElementaryStream","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","MP2T_PACKET_LENGTH$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","streamType","pid","processPes_","STREAM_TYPES","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","trackId","pes","ptsDtsFlags","startPrefix","packetLength","parsePes","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","AdtsStream$1","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb$1","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","Stream$2","ExpGolomb","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","AacStream$1","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","isLikelyAacData","parseAdtsSize","lowThree","parseType","parseSampleRate","parseAacTimestamp","percentEncode","aacUtils","setTimestamp","bytesLeft","tempLength","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","captionStreams","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","getEmsgID3","bin","parseType_1","toUnsigned$2","parseType$2","findBox$2","subresults","toUnsigned$1","getUint64$2","parseTfdt$2","parseSampleFlags","parseTrun$2","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd$2","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","findBox$1","parseTfdt$1","parseTrun$1","parseTfhd$1","window$2","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","captionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","uint8ToCString","curChar","retString","getUint64$1","isValidEmsgBox","emsg","hasScheme","scheme_id_uri","isValidV0Box","isDefined","presentation_time_delta","isValidV1Box","presentation_time","emsg$1","parseEmsgBox","boxData","event_duration","emsgBox","message_data","scaleTime","timeDelta","toUnsigned","toHexString","parseType$1","parseTfhd","parseTrun","parseTfdt","lowestTime","baseTime","scale","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","segmentData","parsedBox","parsedId3Frames","probe$2","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","StreamTypes","probe","SYNC_BYTE","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeEmsgID3","id3Frames","emsgData","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","transmuxedData","waitForEndedTimelineEvent","currentTransmux","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","handleDone_","dequeue","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","handleSegmentResponse","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","handleSegmentBytes","bytesAsUint8Array","isLikelyFmp4MediaSegment","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","decryptionWorker","decryptionHandler","decrypted","keyBytes","encrypted","waitForCompletion","didError","segmentFinish","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","abortFn","keyXhr","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentXhr","loadendState","activeXhr","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","audioGroupId","audioType","codecsFromDefault","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","devicePixelRatio","systemBandwidth","playlistController_","addMetadata","inbandTextTracks","videoDuration","Cue","WebKitDataCue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","finiteDuration","nextTime","dateRangeAttr","scte35Out","scte35In","dateRangeKeysToOmit","createMetadataTrackIfNotExists","inBandMetadataTrackDispatchType","removeCuesFromTrack","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","segmentInfoString","startOfSegment","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","timelineChangeController","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","segmentTooLong","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","timingInfos","typeTimingInfo","mediaDuration","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","shouldForceTimestampOffsetAfterResync_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","updateMediaSequenceMap","resetLoader","resyncLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","mapping","updatedBuffer","removeGopBuffer","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","nextSegment","hasIndependentSegments","lastSegmentLastPart","forceTimestampOffset","generateSegmentInfo_","random","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","timestampOffsetForSegment","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","def","captionService","createCaptionsTrackIfNotExists","captionArray","addCaptionData","handleId3_","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","getPendingSegmentPlaylist","setTimeMapping_","updateMediaSecondsLoaded_","useVideoTimingInfo","firstVideoFrameTimeForData","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","handleAppendError_","segmentObj","concatSegments","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","bufferTypes","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","mime","addSourceBuffer","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","SourceBuffer","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","setDuration","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","NoVttJsError","VTTSegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","loadVttJs","combinedByteLength","combinedSegment","timestampOffsetForTimeline","checkTimestampOffset","skipEmptySegments_","stopForError","requested","parseVTTCues_","updateTimeMapping_","timelines","uniqueCues","cueKey","removeDuplicateCuesFromTrack","decodeBytesToString","timestampmap","mapData","mappingObj","diff","handleRollover_","firstStart","lastStart","valueIn90khz","referenceIn90khz","findAdCue","mediaTime","adStartTime","adEndTime","syncPointStrategies","run","mediaSequenceMap","getMediaSequenceMap","currentMediaSequence","currentPartStart","timelineToDatetimeMappings","lastDistance","datetimeMapping","z","discontinuitySync","discontinuities","SyncController","mediaSequenceStorage_","currentBaseTime","syncPoints","runStrategies_","syncPointInfo","strategy","selectSyncPoint_","getExpiredTime","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","aesTables","AES","tmp","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","precompute","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","decipher","decrypted32","init0","init1","init2","init3","wordIx","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","excludePlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","segmentLoaders","initialize","variantLabel","isMainPlaylist","useForcedSubtitles","groupMatch","setupMediaGroups","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","lastTrack","pc","selectPlaylist","fastQualityChange_","activeTrack_","onAudioTrackChanged","SteeringManifest","priority_","pathwayClones_","version_","ttl","ttl_","reloadUri","reloadUri_","pathwayClones","ContentSteeringController","currentPathway","defaultPathway","availablePathways_","steeringManifest","proxyServerUrl_","manifestType_","ttlTimeout_","request_","currentPathwayClones","nextPathwayClones","excludedSteeringManifestURLs","xhr_","getBandwidth_","assignTagProperties","steeringTag","serverUri","steeringUri","startsWith","decodeDataUriManifest_","pathwayId","defaultServiceLocation","proxyServerURL","requestSteeringManifest","getRequestURI","errorInfo","retrySeconds","startTTLTimeout_","steeringManifestJson","assignSteeringProperties_","setProxyServerUrl_","steeringUrl","steeringUrlObject","proxyServerUrlObject","encodeURI","setSteeringParams_","dataUri","urlObject","getPathway","networkThroughput","pathwayKey","throughputKey","steeringJson","TTL","nextPathway","pathwaysByPriority","chooseNextPathway","proxyURI","steeringURI","ttlMS","clearTTLTimeout_","addAvailablePathway","clearAvailablePathways","excludePathway","didDASHTagChange","newTag","getAvailablePathways","Vhs$1","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","PlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","bufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","createMediaTypes","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","keyStatusMap_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","onLoad","contentSteeringController_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","newId","switchMediaForDASHContentSteering_","dashMediaPlaylists","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","selectedMedia","attachContentSteeringListeners_","initContentSteeringController_","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","playlistToExclude","waitingForFastQualityPlaylistReceived_","runFastQualitySwitch_","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","startPoint","mainMediaInfo","absolutePlaylistEnd","pathwayAttribute_","reIncludeDelay","excludeThenChangePathway_","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","unsupportedCodecs","unsupportedAudio","supporter","switchMessages","newCodec","oldCodec","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","adOffset","adTotal","updateAdCues","newMax","addDateRangeMetadata","resetContentSteeringController_","availablePathways","newPathways","didPathwaysChange","handlePathwayClones_","didEnablePlaylists","differentPathwayId","noExcludeUntil","changeSegmentPathway_","entries","oldClone","equalPathwayClones_","aParams","bParams","excludeNonUsablePlaylistsByKeyId_","nonUsableKeyStatusCount","NON_USABLE","keyIdSet","USABLE","hasUsableKeyStatus","nonUsableExclusion","isNonHD","excludedForNonUsableKey","addKeyStatus_","formattedKeyIdString","uInt8Buffer","padStart","bufferToHexString","updatePlaylistByKeyStatus","excludeNonUsableThenChangePlaylist_","Representation","vhsHandler","qualityChangeFunction","playlistID","changePlaylistFn","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","livePoint","videoUnderflow_","skipTheGap_","allowedEnd","isLLHLS","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","version$4","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","LOCAL_STORAGE_KEY","handleVhsMediaChange","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","keySystemOptions","getAllPsshKeySystemsOptions","initializationFinishedPromises","keySessionCreatedPromises","setupEmeOptions","sourceOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","emeKeySystems","getVhsLocalStorage","storedObject","addOnRequestHook","addOnResponseHook","removeOnRequestHook","removeOnResponseHook","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","onRequest","onResponse","offRequest","offResponse","Component","VhsHandler","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","useNetworkInformationApi","setOptions","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","handleWaitingForKey_","didSetupEmeOptions","qualityLevels_","handleVhsLoadedMetadata","convertToProgramTime","setupXhrHooks_","VhsSourceHandler","simpleType","getOverrideNative","defaultOverrideNative","arrayBuffersEqual","arrayBuffer1","arrayBuffer2","dataView1","dataView2","arrayBufferFrom","bufferOrTypedArray","mergeAndRemoveNull","httpResponseHandler","requestPlayreadyLicense","messageBuffer","emeOptions","messageContents","xmlString","headersElement","headerNames","headerValues","challenge","challengeElement","SOAPAction","getMessageContents","emeHeaders","licenseHeaders","getSupportedKeySystem","supportedConfigurations","supportedConfiguration","audioRobustness","videoRobustness","persistentState","audioCapabilities","robustness","videoCapabilities","getSupportedConfigurations","requestMediaKeySystemAccess","makeNewRequest","mediaKeys","initDataType","initData","getLicense","removeSession","eventBus","keySession","createSession","messageType","license","keyStatuses","generateRequest","promisifyGetLicense","getLicenseFn","keyMessage","standardizeKeySystemOptions","defaultPlayreadyGetLicense","defaultGetLicense","standard5July2016","certificate","keySystemAccess","keySystemPromise","mediaKeysObject","pendingSessionData","getCertificate","cert","createMediaKeys","createdMediaKeys","_ref2","promises","setServerCertificate","setMediaKeys","addPendingSessions","addSession","FAIRPLAY_KEY_SYSTEM","concatInitDataIdAndCertificate","stringToUint16Array","dataView","idArray","defaultGetContentId","fairplay","fairplayOptions","certificateHeaders","certificateUri","defaultGetCertificate","getContentId","contentId","licenseUri","defaultGetLicense$1","webkitSetMediaKeys","WebKitMediaKeys","systemCode","addKey","PLAYREADY_KEY_SYSTEM","session","msKeys","playreadyOptions","getKey","destinationURL","addKeyToSession","sessions","handleEncryptedEvent","sessionBuffer","initDataBuffer","hasSession","handleMsNeedKeyEvent","playready","msSetMediaKeys","MSMediaKeys","msPrefixed","getOptions","setupSessions","activeSrc","onPlayerReady","emeError","handleFn","handleWebKitNeedKeyEvent","firstWebkitneedkeyTimeout","webkitneedkey_","handledFirstEvent","MediaKeys","objOrErr","emeErrorHandler","suppressErrorIfPossible","mergedEmeOptions","mockEncryptedEvent","msKeyHandler","vjsPlayer","trackSelector","textTrack","pillarbox","trackers"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51]}